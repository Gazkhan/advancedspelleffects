{"version":3,"file":"setup.js","sources":["node_modules/svelte/internal/index.mjs","node_modules/svelte/store/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/index.js","node_modules/svelte/easing/index.mjs","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/math/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationControl.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationManager.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/constants.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/convertRelative.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationGroupControl.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/animation/AnimationGroupAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/initial/Centered.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/initial/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionChangeSet.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/PositionStateAPI.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/StyleCache.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/transform/TransformData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/AdapterValidators.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/BasicBounds.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/TransformBounds.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/validators/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/transform/Transforms.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/update/UpdateElementData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/animate/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/update/UpdateElementManager.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/position/Position.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/ApplicationState.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/GetSvelteData.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/loadSvelteConfig.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/SvelteReactive.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/SvelteApplication.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/TJSContainer.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/helper/index.js","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSHeaderButton.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationHeader.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ResizableHandle.svelte","node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ApplicationShell.svelte","node_modules/@typhonjs-fvtt/svelte-standard/_dist/store/index.js","src/utilityFunctions.js","src/aseSockets.js","src/apps/animte-dead-dialog.js","src/sequences/AnimateDeadSequence.js","src/svelteApps/AnimateDeadAppShell.svelte","src/svelteApps/AnimateDeadDialog.js","src/spells/darkness.js","src/spells/detectMagic.js","src/spells/callLightning.js","src/spells/fogCloud.js","src/spells/spiritualWeapon.js","src/spells/steelWindStrike.js","src/spells/thunderStep.js","src/spells/summonCreature.js","src/spells/witchBolt.js","src/sequences/MissileMarkerSequence.js","src/sequences/MissileSequence.js","src/chat/MissileChatBuilder.js","src/svelteApps/MissileDialogAppShell.svelte","src/svelteApps/MissileDialog.js","src/spells/magicMissile.js","src/spells/scorchingRay.js","src/spells/eldritchBlast.js","src/spells/moonBeam.js","src/apps/wof-panel-dialog.js","src/spells/wallOfForce.js","src/spells/baseSpellClass.js","src/apps/wall-panel-dialog.js","src/spells/wallOfFire.js","src/spells/detectStuff.js","src/spells/wallSpell.js","src/concentrationHandler.js","src/spells/vampiricTouch.js","src/sequences/ChainLightningSequence.js","src/spells/chainLightning.js","src/spells/mirrorImage.js","src/spells/chaosBolt.js","src/spells/viciousMockery.js","src/apps/aseSettings.js","src/spells/animateDead.js","src/stores/spellStore.js","src/svelteApps/components/EnableASE.svelte","src/svelteApps/components/SharedSettings.svelte","src/svelteApps/components/CustomSummonForm.svelte","src/svelteApps/components/CustomDetectForm.svelte","src/svelteApps/components/SpellSettings.svelte","src/svelteApps/components/AnimSettings.svelte","src/svelteApps/components/SoundSettings.svelte","src/svelteApps/components/NavBar.svelte","src/svelteApps/ASESettingsAppShell.svelte","src/svelteApps/ASESettings.js","src/versionMigration.js","src/ASEHandler.js","src/midiHandler.js","src/noMidiHandler.js","src/apps/missile-dialog.js","src/SpellStateMachine.js","src/setup.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Provides a solid string hashing algorithm.\n *\n * Sourced from: https://stackoverflow.com/a/52171480\n *\n * @param {string}   str - String to hash.\n *\n * @param {number}   seed - A seed value altering the hash.\n *\n * @returns {number} Hash code.\n */\nfunction hashCode(str, seed = 0)\n{\n   if (typeof str !== 'string') { return 0; }\n\n   let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n   for (let ch, i = 0; i < str.length; i++)\n   {\n      ch = str.charCodeAt(i);\n      h1 = Math.imul(h1 ^ ch, 2654435761);\n      h2 = Math.imul(h2 ^ ch, 1597334677);\n   }\n\n   h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n   h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n   return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nconst s_UUIDV4_REGEX = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n/**\n * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\n *\n * This code is an evolution of the following Gist.\n * https://gist.github.com/jed/982883\n *\n * There is a public domain / free copy license attached to it that is not a standard OSS license...\n * https://gist.github.com/jed/982883#file-license-txt\n *\n * @returns {string} UUIDv4\n */\nfunction uuidv4()\n{\n   return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (c ^ (globalThis.crypto || globalThis.msCrypto).getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n}\n\n/**\n * Validates that the given string is formatted as a UUIDv4 string.\n *\n * @param {string}   uuid - UUID string to test.\n *\n * @returns {boolean} Is UUIDv4 string.\n */\nuuidv4.isValid = (uuid) => s_UUIDV4_REGEX.test(uuid);\n\n/**\n * Normalizes a string.\n *\n * @param {string}   query - A string to normalize for comparisons.\n *\n * @returns {string} Cleaned string.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n */\nfunction normalizeString(query)\n{\n   return query.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, '');\n}\n\n/**\n * Recursive function that finds the closest parent stacking context.\n * See also https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n *\n * Original author: Kerry Liu / https://github.com/gwwar\n * @see: https://github.com/gwwar/z-context/blob/master/content-script.js\n * @see: https://github.com/gwwar/z-context/blob/master/LICENSE\n *\n * @param {Element} node -\n *\n * @returns {StackingContext} The closest parent stacking context\n */\nfunction getStackingContext(node)\n{\n   // the root element (HTML).\n   if (!node || node.nodeName === 'HTML')\n   {\n      return { node: document.documentElement, reason: 'root' };\n   }\n\n   // handle shadow root elements.\n   if (node.nodeName === '#document-fragment')\n   {\n      return getStackingContext(node.host);\n   }\n\n   const computedStyle = globalThis.getComputedStyle(node);\n\n   // position: fixed or sticky.\n   if (computedStyle.position === 'fixed' || computedStyle.position === 'sticky')\n   {\n      return { node: node, reason: `position: ${computedStyle.position}` };\n   }\n\n   // positioned (absolutely or relatively) with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto' && computedStyle.position !== 'static')\n   {\n      return { node: node, reason: `position: ${computedStyle.position}; z-index: ${computedStyle.zIndex}` };\n   }\n\n   // elements with an opacity value less than 1.\n   if (computedStyle.opacity !== '1')\n   {\n      return { node: node, reason: `opacity: ${computedStyle.opacity}` };\n   }\n\n   // elements with a transform value other than \"none\".\n   if (computedStyle.transform !== 'none')\n   {\n      return { node: node, reason: `transform: ${computedStyle.transform}` };\n   }\n\n   // elements with a mix-blend-mode value other than \"normal\".\n   if (computedStyle.mixBlendMode !== 'normal')\n   {\n      return { node: node, reason: `mixBlendMode: ${computedStyle.mixBlendMode}` };\n   }\n\n   // elements with a filter value other than \"none\".\n   if (computedStyle.filter !== 'none')\n   {\n      return { node: node, reason: `filter: ${computedStyle.filter}` };\n   }\n\n   // elements with a perspective value other than \"none\".\n   if (computedStyle.perspective !== 'none')\n   {\n      return { node: node, reason: `perspective: ${computedStyle.perspective}` };\n   }\n\n   // elements with a clip-path value other than \"none\".\n   if (computedStyle.clipPath !== 'none')\n   {\n      return { node: node, reason: `clip-path: ${computedStyle.clipPath} ` };\n   }\n\n   // elements with a mask value other than \"none\".\n   const mask = computedStyle.mask || computedStyle.webkitMask;\n   if (mask !== 'none' && mask !== undefined)\n   {\n      return { node: node, reason: `mask:  ${mask}` };\n   }\n\n   // elements with a mask-image value other than \"none\".\n   const maskImage = computedStyle.maskImage || computedStyle.webkitMaskImage;\n   if (maskImage !== 'none' && maskImage !== undefined)\n   {\n      return { node: node, reason: `mask-image: ${maskImage}` };\n   }\n\n   // elements with a mask-border value other than \"none\".\n   const maskBorder = computedStyle.maskBorder || computedStyle.webkitMaskBorder;\n   if (maskBorder !== 'none' && maskBorder !== undefined)\n   {\n      return { node: node, reason: `mask-border: ${maskBorder}` };\n   }\n\n   // elements with isolation set to \"isolate\".\n   if (computedStyle.isolation === 'isolate')\n   {\n      return { node: node, reason: `isolation: ${computedStyle.isolation}` };\n   }\n\n   // transform or opacity in will-change even if you don't specify values for these attributes directly.\n   if (computedStyle.willChange === 'transform' || computedStyle.willChange === 'opacity')\n   {\n      return { node: node, reason: `willChange: ${computedStyle.willChange}` };\n   }\n\n   // elements with -webkit-overflow-scrolling set to \"touch\".\n   if (computedStyle.webkitOverflowScrolling === 'touch')\n   {\n      return { node: node, reason: '-webkit-overflow-scrolling: touch' };\n   }\n\n   // an item with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto')\n   {\n      const parentStyle = globalThis.getComputedStyle(node.parentNode);\n      // with a flex|inline-flex parent.\n      if (parentStyle.display === 'flex' || parentStyle.display === 'inline-flex')\n      {\n         return {\n            node: node,\n            reason: `flex-item; z-index: ${computedStyle.zIndex}`,\n         };\n         // with a grid parent.\n      }\n      else if (parentStyle.grid !== 'none / none / none / row / auto / auto')\n      {\n         return {\n            node: node,\n            reason: `child of grid container; z-index: ${computedStyle.zIndex}`,\n         };\n      }\n   }\n\n   // contain with a value of layout, or paint, or a composite value that includes either of them\n   const contain = computedStyle.contain;\n   if (['layout', 'paint', 'strict', 'content'].indexOf(contain) > -1 ||\n    contain.indexOf('paint') > -1 ||\n    contain.indexOf('layout') > -1\n   )\n   {\n      return {\n         node: node,\n         reason: `contain: ${contain}`,\n      };\n   }\n\n   return getStackingContext(node.parentNode);\n}\n\n/**\n * @typedef {Object} StackingContext\n *\n * @property {Element} node          A DOM Element\n * @property {string}  reason        Reason for why a stacking context was created\n */\n\nconst s_REGEX = /(\\d+)\\s*px/;\n\n/**\n * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n *\n * @param {string}   value - Value to parse.\n *\n * @returns {number|undefined} The integer component of a pixel string.\n */\nfunction styleParsePixels(value)\n{\n   if (typeof value !== 'string') { return void 0; }\n\n   const isPixels = s_REGEX.test(value);\n   const number = parseInt(value);\n\n   return isPixels && Number.isFinite(number) ? number : void 0;\n}\n\n/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nfunction isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n\n/**\n * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n *\n * @param {*}  comp - Data to check as a HMR proxy component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isHMRProxy(comp)\n{\n   const instanceName = comp?.constructor?.name;\n   if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   const prototypeName = comp?.prototype?.constructor?.name;\n   return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n    prototypeName === 'ProxyComponent');\n}\n\n/**\n * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n *\n * @param {*}  comp - Data to check as a Svelte component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isSvelteComponent(comp)\n{\n   if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n   // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n   // This class doesn't define methods on the prototype, so we must check if the constructor name\n   // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n   const prototypeName = comp?.prototype?.constructor?.name;\n   if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') || prototypeName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   return typeof window !== void 0 ?\n    typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n     typeof comp.render === 'function'; // server-side\n}\n\n/**\n * Runs outro transition then destroys Svelte component.\n *\n * Workaround for https://github.com/sveltejs/svelte/issues/4056\n *\n * @param {*}  instance - A Svelte component.\n */\nasync function outroAndDestroy(instance)\n{\n   return new Promise((resolve) =>\n   {\n      if (instance.$$.fragment && instance.$$.fragment.o)\n      {\n         group_outros();\n         transition_out(instance.$$.fragment, 0, 0, () =>\n         {\n            instance.$destroy();\n            resolve();\n         });\n         check_outros();\n      }\n      else\n      {\n         instance.$destroy();\n         resolve();\n      }\n   });\n}\n\n/**\n * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n * correctly.\n *\n * @param {object}   config - Svelte config object.\n *\n * @param {*}        [thisArg] - `This` reference to set for invoking any props function.\n *\n * @returns {object} The processed Svelte config object.\n */\nfunction parseSvelteConfig(config, thisArg = void 0)\n{\n   if (typeof config !== 'object')\n   {\n      throw new TypeError(`parseSvelteConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.target !== void 0 && typeof config.target !== 'string' && !(config.target instanceof HTMLElement) &&\n    !(config.target instanceof ShadowRoot) && !(config.target instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'target' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !(config.anchor instanceof HTMLElement) &&\n    !(config.anchor instanceof ShadowRoot) && !(config.anchor instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'anchor' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.context !== void 0 && typeof config.context !== 'function' && !(config.context instanceof Map) &&\n    typeof config.context !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'context' is not a Map, function or object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n   // `selectorTarget` optionally stores a target element found in main element.\n   if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n   if (config.options !== void 0 && typeof config.options !== 'object')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate TyphonJS standard options.\n   if (config.options !== void 0)\n   {\n      if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectApp' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectEventbus' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n      if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'selectorElement' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n   }\n\n   const svelteConfig = { ...config };\n\n   // Delete extra Svelte options.\n   delete svelteConfig.options;\n\n   let externalContext = {};\n\n   // If a context callback function is provided then invoke it with `this` being the Foundry app.\n   // If an object is returned it adds the entries to external context.\n   if (typeof svelteConfig.context === 'function')\n   {\n      const contextFunc = svelteConfig.context;\n      delete svelteConfig.context;\n\n      const result = contextFunc.call(thisArg);\n      if (typeof result === 'object')\n      {\n         externalContext = { ...result };\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'context' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (svelteConfig.context instanceof Map)\n   {\n      externalContext = Object.fromEntries(svelteConfig.context);\n      delete svelteConfig.context;\n   }\n   else if (typeof svelteConfig.context === 'object')\n   {\n      externalContext = svelteConfig.context;\n      delete svelteConfig.context;\n   }\n\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   svelteConfig.props = s_PROCESS_PROPS(svelteConfig.props, thisArg, config);\n\n   // Process children components attaching to external context.\n   if (Array.isArray(svelteConfig.children))\n   {\n      const children = [];\n\n      for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n      {\n         const child = svelteConfig.children[cntr];\n\n         if (!isSvelteComponent(child.class))\n         {\n            throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for child[${cntr}] for config:\\n${\n             JSON.stringify(config)}`);\n         }\n\n         child.props = s_PROCESS_PROPS(child.props, thisArg, config);\n\n         children.push(child);\n      }\n\n      if (children.length > 0)\n      {\n         externalContext.children = children;\n      }\n\n      delete svelteConfig.children;\n   }\n   else if (typeof svelteConfig.children === 'object')\n   {\n      if (!isSvelteComponent(svelteConfig.children.class))\n      {\n         throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for children object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      svelteConfig.children.props = s_PROCESS_PROPS(svelteConfig.children.props, thisArg, config);\n\n      externalContext.children = [svelteConfig.children];\n      delete svelteConfig.children;\n   }\n\n   if (!(svelteConfig.context instanceof Map))\n   {\n      svelteConfig.context = new Map();\n   }\n\n   svelteConfig.context.set('external', externalContext);\n\n   return svelteConfig;\n}\n\n/**\n * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n *\n * @param {object|Function}   props - Svelte props.\n *\n * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n *\n * @param {object}            config - Svelte config\n *\n * @returns {object|void}     Svelte props.\n */\nfunction s_PROCESS_PROPS(props, thisArg, config)\n{\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   if (typeof props === 'function')\n   {\n      const result = props.call(thisArg);\n      if (typeof result === 'object')\n      {\n         return result;\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'props' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (typeof props === 'object')\n   {\n      return props;\n   }\n   else if (props !== void 0)\n   {\n      throw new Error(\n       `parseSvelteConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\n   }\n\n   return {};\n}\n\n/**\n * Wraps a callback in a debounced timeout.\n *\n * Delay execution of the callback function until the function has not been called for the given delay in milliseconds.\n *\n * @param {Function} callback - A function to execute once the debounced threshold has been passed.\n *\n * @param {number}   delay - An amount of time in milliseconds to delay.\n *\n * @return {Function} A wrapped function that can be called to debounce execution.\n */\nfunction debounce(callback, delay)\n{\n   let timeoutId;\n\n   return function(...args)\n   {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => { callback.apply(this, args); }, delay);\n   }\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {*}        object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor)\n{\n   if (object === null || object === void 0) { return false; }\n\n   // Check for instance accessor.\n   const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n   if (iDescriptor !== void 0 && iDescriptor.set !== void 0) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o))\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n      if (descriptor !== void 0 && descriptor.set !== void 0) { return true; }\n   }\n\n   return false;\n}\n\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {*}  target - Any target to test.\n *\n * @param {Function} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype)\n{\n   /* c8 ignore next */\n   if (typeof target !== 'function') { return false; }\n\n   if (target === Prototype) { return true; }\n\n   // Walk parent prototype chain. Check for descriptor at each prototype level.\n   for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto))\n   {\n      if (proto === Prototype) { return true; }\n   }\n\n   return false;\n}\n\nfunction set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\n\nconst s_TAG_OBJECT = '[object Object]';\n\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj)\n{\n   if (Object.prototype.toString.call(target) !== s_TAG_OBJECT)\n   {\n      throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n   }\n\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT)\n      {\n         throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n      }\n   }\n\n   return _deepMerge(target, ...sourceObj);\n}\n\n/**\n * Tests for whether an object is iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.iterator] === 'function';\n}\n\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isIterableAsync(value)\n{\n   if (value === null || value === void 0 || typeof value !== 'object') { return false; }\n\n   return typeof value[Symbol.asyncIterator] === 'function';\n}\n\n/**\n * Tests for whether object is not null and a typeof object.\n *\n * @param {*} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value)\n{\n   return value !== null && typeof value === 'object';\n}\n\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: {}, new Object() or Object.create(null).\n *\n * @param {*} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value)\n{\n   if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) { return false; }\n\n   const prototype = Object.getPrototypeOf(value);\n   return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue = void 0)\n{\n   if (typeof data !== 'object') { return defaultValue; }\n   if (typeof accessor !== 'string') { return defaultValue; }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If the next level of object access is undefined or null then return the empty string.\n      if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\n\n      data = data[access[cntr]];\n   }\n\n   return data;\n}\n\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {*}        value - A new value to set if an entry for accessor is found.\n *\n * @param {string}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *                                       'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *                                          automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true)\n{\n   if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\n   if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\n\n   const access = accessor.split('.');\n\n   // Walk through the given object by the accessor indexes.\n   for (let cntr = 0; cntr < access.length; cntr++)\n   {\n      // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n      if (Array.isArray(data))\n      {\n         const number = (+access[cntr]);\n\n         if (!Number.isInteger(number) || number < 0) { return false; }\n      }\n\n      if (cntr === access.length - 1)\n      {\n         switch (operation)\n         {\n            case 'add':\n               data[access[cntr]] += value;\n               break;\n\n            case 'div':\n               data[access[cntr]] /= value;\n               break;\n\n            case 'mult':\n               data[access[cntr]] *= value;\n               break;\n\n            case 'set':\n               data[access[cntr]] = value;\n               break;\n\n            case 'set-undefined':\n               if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = value; }\n               break;\n\n            case 'sub':\n               data[access[cntr]] -= value;\n               break;\n         }\n      }\n      else\n      {\n         // If createMissing is true and the next level of object access is undefined then create a new object entry.\n         if (createMissing && typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\n\n         // Abort if the next level is null or not an object and containing a value.\n         if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\n\n         data = data[access[cntr]];\n      }\n   }\n\n   return true;\n}\n\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj)\n{\n   // Iterate and merge all source objects into target.\n   for (let cntr = 0; cntr < sourceObj.length; cntr++)\n   {\n      const obj = sourceObj[cntr];\n\n      for (const prop in obj)\n      {\n         if (Object.prototype.hasOwnProperty.call(obj, prop))\n         {\n            // Handle the special property starting with '-=' to delete keys.\n            if (prop.startsWith('-='))\n            {\n               delete target[prop.slice(2)];\n               continue;\n            }\n\n            // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n            // otherwise assign obj[prop] to target[prop].\n            target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n            obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n         }\n      }\n   }\n\n   return target;\n}\n\n/**\n * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n *\n * @param {object}   data - Drop transfer data.\n *\n * @param {ParseDataTransferOptions}   opts - Optional parameters.\n *\n * @returns {string|undefined} Foundry UUID for drop data.\n */\nfunction getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\n{\n   if (typeof data !== 'object') { return void 0; }\n   if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n   let uuid = void 0;\n\n   if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n   {\n      const isCompendium = data.uuid.startsWith('Compendium');\n\n      if (isCompendium && compendium)\n      {\n         uuid = data.uuid;\n      }\n      else if (world)\n      {\n         uuid = data.uuid;\n      }\n   }\n   else // v9 and below parsing.\n   {\n      if (actor && world && data.actorId && data.type)\n      {\n         uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\n      }\n      else if (typeof data.id === 'string') // v9 and below uses `id`\n      {\n         if (compendium && typeof data.pack === 'string')\n         {\n            uuid = `Compendium.${data.pack}.${data.id}`;\n         }\n         else if (world)\n         {\n            uuid = `${data.type}.${data.id}`;\n         }\n      }\n   }\n\n   return uuid;\n}\n\nexport { debounce, deepMerge, getStackingContext, getUUIDFromDataTransfer, hasAccessor, hasGetter, hasPrototype, hasSetter, hashCode, isApplicationShell, isHMRProxy, isIterable, isIterableAsync, isObject, isPlainObject, isSvelteComponent, klona, normalizeString, outroAndDestroy, parseSvelteConfig, safeAccess, safeSet, styleParsePixels, uuidv4 };\n//# sourceMappingURL=index.js.map\n","import { writable as writable$2, derived, get } from 'svelte/store';\nimport { noop, run_all, is_function } from 'svelte/internal';\nimport { uuidv4, isPlainObject, getUUIDFromDataTransfer, isObject, isIterable, hasPrototype } from '@typhonjs-fvtt/runtime/svelte/util';\n\nclass DynReducerUtils {\n    /**\n     * Checks for array equality between two arrays of numbers.\n     *\n     * @param a - Array A\n     *\n     * @param b - Array B\n     *\n     * @returns Arrays are equal.\n     */\n    static arrayEquals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (a === null || b === null) {\n            return false;\n        }\n        /* c8 ignore next */\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let cntr = a.length; --cntr >= 0;) {\n            /* c8 ignore next */\n            if (a[cntr] !== b[cntr]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Provides a solid string hashing algorithm.\n     *\n     * Sourced from: https://stackoverflow.com/a/52171480\n     *\n     * @param str - String to hash.\n     *\n     * @param seed - A seed value altering the hash.\n     *\n     * @returns Hash code.\n     */\n    static hashString(str, seed = 0) {\n        let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n        for (let ch, i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i);\n            h1 = Math.imul(h1 ^ ch, 2654435761);\n            h2 = Math.imul(h2 ^ ch, 1597334677);\n        }\n        h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n        h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n        return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n    }\n    /**\n     * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\n     *\n     * Currently objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\n     * case, but it is not common to use objects as keys in Maps.\n     *\n     * @param value - An unknown value to convert to a number.\n     */\n    static hashUnknown(value) {\n        if (value === null || value === void 0) {\n            return 0;\n        }\n        let result = 0;\n        switch (typeof value) {\n            case 'boolean':\n                result = value ? 1 : 0;\n                break;\n            case 'bigint':\n                result = Number(BigInt.asIntN(64, value));\n                break;\n            case 'function':\n                result = this.hashString(value.name);\n                break;\n            case 'number':\n                result = Number.isFinite(value) ? value : 0;\n                break;\n            case 'object':\n                // TODO: consider hashing an object IE `object-hash` and convert to number.\n                break;\n            case 'string':\n                result = this.hashString(value);\n                break;\n            case 'symbol':\n                result = this.hashString(Symbol.keyFor(value));\n                break;\n        }\n        return result;\n    }\n    /**\n     * @param target -\n     *\n     * @param Prototype -\n     *\n     * @returns target constructor function has Prototype.\n     */\n    static hasPrototype(target, Prototype) {\n        /* c8 ignore next */\n        if (typeof target !== 'function') {\n            return false;\n        }\n        if (target === Prototype) {\n            return true;\n        }\n        // Walk parent prototype chain. Check for descriptor at each prototype level.\n        for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n            if (proto === Prototype) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\n     *\n     * @param data - Data to verify as iterable.\n     *\n     * @returns Is data iterable.\n     */\n    static isIterable(data) {\n        return data !== null && data !== void 0 && typeof data === 'object' &&\n            typeof data[Symbol.iterator] === 'function';\n    }\n}\n\n/**\n * Provides the `derived` API for all dynamic reducers.\n */\nclass AdapterDerived {\n    #hostData;\n    #DerivedReducerCtor;\n    #parentIndex;\n    #derived = new Map();\n    #destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param parentIndex - Any associated parent index API.\n     *\n     * @param DerivedReducerCtor - The default derived reducer constructor function.\n     */\n    constructor(hostData, parentIndex, DerivedReducerCtor) {\n        this.#hostData = hostData;\n        this.#parentIndex = parentIndex;\n        this.#DerivedReducerCtor = DerivedReducerCtor;\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new derived reducer.\n     *\n     * @param options - Options defining the new derived reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create(options) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.create error: this instance has been destroyed.`);\n        }\n        let name;\n        let rest = {};\n        let ctor;\n        const DerivedReducerCtor = this.#DerivedReducerCtor;\n        if (typeof options === 'string') {\n            name = options;\n            ctor = DerivedReducerCtor;\n        }\n        else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor)) {\n            ctor = options;\n        }\n        else if (typeof options === 'object' && options !== null) {\n            ({ name, ctor = DerivedReducerCtor, ...rest } = options);\n        }\n        else {\n            throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\n        }\n        if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor)) {\n            throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\n        }\n        name = name ?? ctor?.name;\n        if (typeof name !== 'string') {\n            throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`);\n        }\n        const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\n        this.#derived.set(name, derivedReducer);\n        return derivedReducer;\n    }\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear() {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.destroy();\n        }\n        this.#derived.clear();\n    }\n    /**\n     * Deletes and destroys a derived reducer by name.\n     *\n     * @param name - Name of the derived reducer.\n     */\n    delete(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.delete error: this instance has been destroyed.`);\n        }\n        const reducer = this.#derived.get(name);\n        if (reducer) {\n            reducer.destroy();\n        }\n        return this.#derived.delete(name);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.clear();\n        this.#hostData = [null];\n        this.#parentIndex = null;\n        this.#destroyed = true;\n    }\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.get error: this instance has been destroyed.`);\n        }\n        return this.#derived.get(name);\n    }\n    /**\n     * Updates all managed derived reducer indexes.\n     *\n     * @param [force] - Force an update to subscribers.\n     */\n    update(force = false) {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.index.update(force);\n        }\n    }\n}\n\n/**\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\n * {@link DataFilter} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\n * attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\n * allows filters to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\n *\n * This class forms the public API which is accessible from the `.filters` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.filters.add(...);\n * dynArray.filters.clear();\n * dynArray.filters.length;\n * dynArray.filters.remove(...);\n * dynArray.filters.removeBy(...);\n * dynArray.filters.removeById(...);\n * ```\n */\nclass AdapterFilters {\n    #filtersData;\n    #indexUpdate;\n    #mapUnsubscribe = new Map();\n    /**\n     * @param indexUpdate - update function for the indexer.\n     *\n     * @param filtersAdapter - Stores the filter function data.\n     */\n    constructor(indexUpdate, filtersAdapter) {\n        this.#indexUpdate = indexUpdate;\n        this.#filtersData = filtersAdapter;\n        Object.freeze(this);\n    }\n    /**\n     * @returns Returns the length of the filter data.\n     */\n    get length() { return this.#filtersData.filters.length; }\n    /**\n     * Provides an iterator for filters.\n     *\n     * @returns Generator / iterator of filters.\n     * @yields {DataFilter<T>}\n     */\n    *[Symbol.iterator]() {\n        if (this.#filtersData.filters.length === 0) {\n            return;\n        }\n        for (const entry of this.#filtersData.filters) {\n            yield { ...entry };\n        }\n    }\n    /**\n     * @param filters -\n     */\n    add(...filters) {\n        /**\n         * Tracks the number of filters added that have subscriber functionality.\n         */\n        let subscribeCount = 0;\n        for (const filter of filters) {\n            const filterType = typeof filter;\n            if (filterType !== 'function' && (filterType !== 'object' || filter === null)) {\n                throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\n            }\n            let data = void 0;\n            let subscribeFn = void 0;\n            if (filterType === 'function') {\n                data = {\n                    id: void 0,\n                    filter,\n                    weight: 1\n                };\n                subscribeFn = filter.subscribe;\n            }\n            else if (filterType === 'object') {\n                if ('filter' in filter) {\n                    if (typeof filter.filter !== 'function') {\n                        throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                    }\n                    if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\n                        (filter.weight < 0 || filter.weight > 1)) {\n                        throw new TypeError(`AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                    }\n                    data = {\n                        id: filter.id !== void 0 ? filter.id : void 0,\n                        filter: filter.filter,\n                        weight: filter.weight || 1\n                    };\n                    subscribeFn = filter.filter.subscribe ?? filter.subscribe;\n                }\n                else {\n                    throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                }\n            }\n            // Find the index to insert where data.weight is less than existing values weight.\n            const index = this.#filtersData.filters.findIndex((value) => {\n                return data.weight < value.weight;\n            });\n            // If an index was found insert at that location.\n            if (index >= 0) {\n                this.#filtersData.filters.splice(index, 0, data);\n            }\n            else // push to end of filters.\n             {\n                this.#filtersData.filters.push(data);\n            }\n            if (typeof subscribeFn === 'function') {\n                const unsubscribe = subscribeFn(this.#indexUpdate);\n                // Ensure that unsubscribe is a function.\n                if (typeof unsubscribe !== 'function') {\n                    throw new TypeError('AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\n                }\n                // Ensure that the same filter is not subscribed to multiple times.\n                if (this.#mapUnsubscribe.has(data.filter)) {\n                    throw new Error('AdapterFilters error: Filter added already has an unsubscribe function registered.');\n                }\n                this.#mapUnsubscribe.set(data.filter, unsubscribe);\n                subscribeCount++;\n            }\n        }\n        // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n        // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\n        if (subscribeCount < filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Clears and removes all filters.\n     */\n    clear() {\n        this.#filtersData.filters.length = 0;\n        // Unsubscribe from all filters with subscription support.\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\n            unsubscribe();\n        }\n        this.#mapUnsubscribe.clear();\n        this.#indexUpdate();\n    }\n    /**\n     * @param filters -\n     */\n    remove(...filters) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        for (const data of filters) {\n            // Handle the case that the filter may either be a function or a filter entry / object.\n            const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n                data.filter : void 0;\n            if (!actualFilter) {\n                continue;\n            }\n            for (let cntr = this.#filtersData.filters.length; --cntr >= 0;) {\n                if (this.#filtersData.filters[cntr].filter === actualFilter) {\n                    this.#filtersData.filters.splice(cntr, 1);\n                    // Invoke any unsubscribe function for given filter then remove from tracking.\n                    let unsubscribe = void 0;\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function') {\n                        unsubscribe();\n                        this.#mapUnsubscribe.delete(actualFilter);\n                    }\n                }\n            }\n        }\n        // Update the index a filter was removed.\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\n     * Any truthy value returned will remove that filter.\n     *\n     * @param callback - Callback function to evaluate each filter entry.\n     */\n    removeBy(callback) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            const remove = callback.call(callback, { ...data });\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            // Reverse remove boolean to properly filter / remove this filter.\n            return !remove;\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param ids - Removes filters by ID.\n     */\n    removeById(...ids) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            let remove = 0;\n            for (const id of ids) {\n                remove |= (data.id === id ? 1 : 0);\n            }\n            // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\n            if (!!remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            return !remove; // Swap here to actually remove the item via array filter method.\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\n * applied.\n */\nclass AdapterIndexer {\n    derivedAdapter;\n    filtersData;\n    hostData;\n    hostUpdate;\n    indexData;\n    sortData;\n    sortFn;\n    destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param hostUpdate - Host update function invoked on index updates.\n     *\n     * @param [parentIndexer] - Any associated parent index API.\n     *\n     * @returns Indexer adapter instance.\n     */\n    constructor(hostData, hostUpdate, parentIndexer) {\n        this.hostData = hostData;\n        this.hostUpdate = hostUpdate;\n        this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\n    }\n    /**\n     * @returns Returns whether the index is active.\n     */\n    get active() {\n        return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\n            this.indexData.parent?.active === true;\n    }\n    /**\n     * @returns Returns length of reduced index.\n     */\n    get length() {\n        return this.indexData.index ? this.indexData.index.length : 0;\n    }\n    /* c8 ignore start */\n    /**\n     * @returns Returns reversed state.\n     */\n    get reversed() { return this.indexData.reversed; }\n    /* c8 ignore end */\n    /**\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) { this.indexData.reversed = reversed; }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\n     * is set to null. Set calculated new hash value to the index adapter hash value.\n     *\n     * After hash generation compare old and new hash values and perform an update if they are different. If they are\n     * equal check for array equality between the old and new index array and perform an update if they are not equal.\n     *\n     * @param oldIndex - Old index array.\n     *\n     * @param oldHash - Old index hash value.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    calcHashUpdate(oldIndex, oldHash, force = false) {\n        // Use force if a boolean otherwise default to false.\n        const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\n        let newHash = null;\n        const newIndex = this.indexData.index;\n        if (newIndex) {\n            for (let cntr = newIndex.length; --cntr >= 0;) {\n                newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\n            }\n        }\n        this.indexData.hash = newHash;\n        if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true)) {\n            this.hostUpdate();\n        }\n    }\n    /**\n     * Destroys all resources.\n     */\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.indexData.index = null;\n        this.indexData.hash = null;\n        this.indexData.reversed = null;\n        this.indexData.parent = null;\n        this.destroyed = true;\n    }\n    /**\n     * Store associated filter and sort data that are constructed after the indexer.\n     *\n     * @param filtersData - Associated AdapterFilters instance.\n     *\n     * @param sortData - Associated AdapterSort instance.\n     *\n     * @param derivedAdapter - Associated AdapterDerived instance.\n     */\n    initAdapters(filtersData, sortData, derivedAdapter) {\n        this.filtersData = filtersData;\n        this.sortData = sortData;\n        this.derivedAdapter = derivedAdapter;\n        this.sortFn = this.createSortFn();\n    }\n}\n\n/**\n * Provides the storage and sequencing of a managed sort function. The sort function set may be a bespoke function or a\n * {@link DataSort} object containing an `compare`, and `subscribe` attributes; `compare` is the only required\n * attribute.\n *\n * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n * If a subscribe function is provided the sort function can notify any updates that may change sort order and this\n * triggers an index update.\n *\n * This class forms the public API which is accessible from the `.sort` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.sort.clear();\n * dynArray.sort.set(...);\n * ```\n */\nclass AdapterSort {\n    #sortData;\n    #indexUpdate;\n    #unsubscribe;\n    /**\n     * @param indexUpdate - Function to update indexer.\n     *\n     * @param sortData - Storage for compare function.\n     */\n    constructor(indexUpdate, sortData) {\n        this.#indexUpdate = indexUpdate;\n        this.#sortData = sortData;\n        Object.freeze(this);\n    }\n    /**\n     * Clears & removes any assigned sort function and triggers an index update.\n     */\n    clear() {\n        const oldCompareFn = this.#sortData.compareFn;\n        this.#sortData.compareFn = null;\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        // Only update index if an old compare function is set.\n        if (typeof oldCompareFn === 'function') {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param data - A callback function that compares two values. Return > 0 to sort b before a;\n     * < 0 to sort a before b; or 0 to keep original order of a & b.\n     *\n     * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\n     */\n    set(data) {\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        let compareFn = void 0;\n        let subscribeFn = void 0;\n        switch (typeof data) {\n            case 'function':\n                compareFn = data;\n                subscribeFn = data.subscribe;\n                break;\n            case 'object':\n                // Early out if data is null / noop.\n                if (data === null) {\n                    break;\n                }\n                if (typeof data.compare !== 'function') {\n                    throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\n                }\n                compareFn = data.compare;\n                subscribeFn = data.compare.subscribe ?? data.subscribe;\n                break;\n        }\n        if (typeof compareFn === 'function') {\n            this.#sortData.compareFn = compareFn;\n        }\n        else {\n            const oldCompareFn = this.#sortData.compareFn;\n            this.#sortData.compareFn = null;\n            // Update index if the old compare function exists.\n            if (typeof oldCompareFn === 'function') {\n                this.#indexUpdate();\n            }\n            return;\n        }\n        if (typeof subscribeFn === 'function') {\n            this.#unsubscribe = subscribeFn(this.#indexUpdate);\n            // Ensure that unsubscribe is a function.\n            if (typeof this.#unsubscribe !== 'function') {\n                throw new Error(`AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\n            }\n        }\n        else {\n            // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\n            // Only manually update the index if there is no subscriber functionality.\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides the public API for accessing the index API.\n *\n * This class forms the public API which is accessible from the `.index` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.index.active;\n * dynArray.index.hash;\n * dynArray.index.length;\n * dynArray.index.update(...);\n * ```\n */\nclass IndexerAPI {\n    #indexData;\n    /**\n     * Provides a getter to determine if the index is active.\n     */\n    active;\n    /**\n     * Provides length of reduced / indexed elements.\n     */\n    length;\n    /**\n     * Manually invoke an update of the index.\n     *\n     * @param force - Force update to any subscribers.\n     */\n    update;\n    constructor(adapterIndexer) {\n        this.#indexData = adapterIndexer.indexData;\n        this.update = adapterIndexer.update.bind(adapterIndexer);\n        // Defines getters on the public API to get the index hash, active state, and index length.\n        Object.defineProperties(this, {\n            active: { get: () => adapterIndexer.active },\n            length: { get: () => adapterIndexer.length }\n        });\n        Object.freeze(this);\n    }\n    /**\n     * - Current hash value of the index.\n     */\n    get hash() {\n        return this.#indexData.hash;\n    }\n    /**\n     * Provides an iterator over the index array.\n     *\n     * @returns Iterator / generator\n     * @yields {K}\n     */\n    *[Symbol.iterator]() {\n        const indexData = this.#indexData;\n        if (!indexData.index) {\n            return;\n        }\n        const reversed = indexData.reversed;\n        const length = indexData.index.length;\n        if (reversed) {\n            for (let cntr = length; --cntr >= 0;) {\n                yield indexData.index[cntr];\n            }\n        }\n        else {\n            for (let cntr = 0; cntr < length; cntr++) {\n                yield indexData.index[cntr];\n            }\n        }\n    }\n}\n\n/**\n * Provides the public API for derived reducers. There are several ways to create a derived reducer from utilizing the\n * default implementation or passing in a constructor function / class for a custom derived reducer.\n *\n * This class forms the public API which is accessible from the `.derived` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.derived.clear();\n * dynArray.derived.create(...);\n * dynArray.derived.delete(...);\n * dynArray.derived.destroy();\n * dynArray.derived.get(...);\n * ```\n */\nclass DerivedAPI {\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear;\n    /**\n     * @param options - Options for creating a reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create;\n    /**\n     * Deletes and destroys a derived reducer.\n     *\n     * @param name - Name of the derived reducer\n     */\n    delete;\n    /**\n     * Removes all derived reducers, associated subscriptions, and cleans up all resources.\n     */\n    destroy;\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get;\n    constructor(adapterDerived) {\n        this.clear = adapterDerived.clear.bind(adapterDerived);\n        this.create = adapterDerived.create.bind(adapterDerived);\n        this.delete = adapterDerived.delete.bind(adapterDerived);\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\n        this.get = adapterDerived.get.bind(adapterDerived);\n        Object.freeze(this);\n    }\n}\n\n/**\n */\nclass Indexer$1 extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0][a], this.hostData[0][b]);\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const array = this.hostData[0];\n        if (!array) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const adjustedIndex of parentIndex) {\n                const value = array[adjustedIndex];\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(adjustedIndex);\n                }\n            }\n        }\n        else {\n            for (let cntr = 0, length = array.length; cntr < length; cntr++) {\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(array[cntr])) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(cntr);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const array = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && array?.length !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && Array.isArray(array)) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = [...Array(array.length).keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DerivedArrayReducer {\n    #array;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param array - Data host array.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(array, parentIndex, options) {\n        this.#array = array;\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and\n     * notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.index.length :\n            array ? array.length : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#array = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedArrayReducer.\n     *\n     * @returns Generator / iterator of all data.\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedArrayReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynArrayReducer {\n    #array = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataIterable = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && Symbol.iterator in data) {\n            dataIterable = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data)) {\n                throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\n            }\n            dataIterable = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataIterable) {\n            this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\n        }\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DerivedArrayReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            array ? array.length : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#array = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const array = this.#array[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!Array.isArray(array) || replace) {\n            if (data) {\n                this.#array[0] = Array.isArray(data) ? data : [...data];\n            }\n        }\n        else {\n            if (data) {\n                // Remove all entries in internal data. This will not replace any initially set array.\n                array.length = 0;\n                // Add all new data.\n                array.push(...data);\n            }\n            else {\n                this.#array[0] = null;\n            }\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynArrayReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynArrayReducer.\n     *\n     * @returns Generator / iterator of all data.\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n}\n\n/**\n */\nclass Indexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0].get(a), this.hostData[0].get(b));\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const map = this.hostData[0];\n        if (!map) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const key of parentIndex) {\n                const value = map.get(key);\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        else {\n            for (const key of map.keys()) {\n                include = true;\n                const value = map.get(key);\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const map = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && map?.size !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && map instanceof Map) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = this.indexData.index = [...map.keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DerivedMapReducer {\n    #map;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param map - Data host Map.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(map, parentIndex, options) {\n        this.#map = map;\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: The returned map is the same map set by the main reducer. If any changes are performed to the data\n     * externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.index.length :\n            map ? map.size : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#map = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedMapReducer.\n     *\n     * @returns Generator / iterator of all data.\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedMapReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed Map with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynMapReducer {\n    #map = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataMap = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && data instanceof Map) {\n            dataMap = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !(data.data instanceof Map)) {\n                throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\n            }\n            dataMap = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataMap) {\n            this.#map[0] = dataMap;\n        }\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DerivedMapReducer);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynMap.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: When a map is set as data then that map is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            map ? map.size : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#map = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const map = this.#map[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!(map instanceof Map) || replace) {\n            this.#map[0] = data instanceof Map ? data : null;\n        }\n        else if (data instanceof Map && map instanceof Map) {\n            // Create a set of all current entry IDs.\n            const removeKeySet = new Set(map.keys());\n            for (const key of data.keys()) {\n                map.set(key, data.get(key));\n                if (removeKeySet.has(key)) {\n                    removeKeySet.delete(key);\n                }\n            }\n            // Remove entries that are no longer in data.\n            for (const key of removeKeySet) {\n                map.delete(key);\n            }\n        }\n        else if (data === null) {\n            this.#map[0] = null;\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynMapReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynMapReducer.\n     *\n     * @returns Generator / iterator of all data.\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * function and an `update` function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isUpdatableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) => {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else {\n         update(value);\n      }\n   })\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) => {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else {\n         update(value);\n      }\n   })\n}\n\n// src/generator.ts\nfunction isSimpleDeriver(deriver) {\n  return deriver.length < 2;\n}\nfunction generator(storage) {\n  function readable(key, value, start) {\n    return {\n      subscribe: writable(key, value, start).subscribe\n    };\n  }\n  function writable(key, value, start = noop) {\n    function wrap_start(ogSet) {\n      return start(function wrap_set(new_value) {\n        if (storage) {\n          storage.setItem(key, JSON.stringify(new_value));\n        }\n        return ogSet(new_value);\n      });\n    }\n    if (storage) {\n      const storageValue = storage.getItem(key);\n      try {\n        if (storageValue) {\n          value = JSON.parse(storageValue);\n        }\n      } catch (err) {\n      }\n      storage.setItem(key, JSON.stringify(value));\n    }\n    const ogStore = writable$2(value, start ? wrap_start : void 0);\n    function set(new_value) {\n      if (storage) {\n        storage.setItem(key, JSON.stringify(new_value));\n      }\n      ogStore.set(new_value);\n    }\n    function update(fn) {\n      set(fn(get(ogStore)));\n    }\n    function subscribe(run, invalidate = noop) {\n      return ogStore.subscribe(run, invalidate);\n    }\n    return {set, update, subscribe};\n  }\n  function derived(key, stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single ? [stores] : stores;\n    if (storage && storage.getItem(key)) {\n      try {\n        initial_value = JSON.parse(storage.getItem(key));\n      } catch (err) {\n      }\n    }\n    return readable(key, initial_value, (set) => {\n      let inited = false;\n      const values = [];\n      let pending = 0;\n      let cleanup = noop;\n      const sync = () => {\n        if (pending) {\n          return;\n        }\n        cleanup();\n        const input = single ? values[0] : values;\n        if (isSimpleDeriver(fn)) {\n          set(fn(input));\n        } else {\n          const result = fn(input, set);\n          cleanup = is_function(result) ? result : noop;\n        }\n      };\n      const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n        values[i] = value;\n        pending &= ~(1 << i);\n        if (inited) {\n          sync();\n        }\n      }, () => {\n        pending |= 1 << i;\n      }));\n      inited = true;\n      sync();\n      return function stop() {\n        run_all(unsubscribers);\n        cleanup();\n      };\n    });\n  }\n  return {\n    readable,\n    writable,\n    derived,\n    get: get\n  };\n}\n\n// src/local.ts\nvar storage$1 = typeof window !== \"undefined\" ? window.localStorage : void 0;\nvar g$1 = generator(storage$1);\nvar writable$1 = g$1.writable;\n\n/**\n * @typedef {import('svelte/store').Writable} LSStore - The backing Svelte store; a writable w/ get method attached.\n */\n\nclass LocalStorage\n{\n   /**\n    * @type {Map<string, LSStore>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new LSStore for the given key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\n    *\n    * @returns {LSStore} The new LSStore.\n    */\n   static #createStore(key, defaultValue = void 0)\n   {\n      try\n      {\n         const value = localStorage.getItem(key);\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\n      }\n      catch (err) { /**/ }\n\n      return writable$1(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the LSStore Map or creates a new store for the key and a given default value.\n    *\n    * @param {string}               key - Key to lookup in stores map.\n    *\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\n    *\n    * @returns {LSStore} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = LocalStorage.#createStore(key, defaultValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Get value from the localStorage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = localStorage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\n         } catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = JSON.stringify(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            localStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {LSStore} The Svelte store for this key.\n    */\n   getStore(key, defaultValue)\n   {\n      return this.#getStore(key, defaultValue);\n   }\n\n   /**\n    * Sets the value for the given key in localStorage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in session storage.\n    *\n    * @param {string}   key - Key to lookup in localStorage.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!JSON.parse(localStorage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n// src/session.ts\nvar storage = typeof window !== \"undefined\" ? window.sessionStorage : void 0;\nvar g = generator(storage);\nvar writable = g.writable;\n\n/**\n * @typedef {import('svelte/store').Writable} SSStore - The backing Svelte store; a writable w/ get method attached.\n */\n\nclass SessionStorage\n{\n   /**\n    * @type {Map<string, SSStore>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new SSStore for the given key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {boolean}  [defaultValue] - A default value to set for the store.\n    *\n    * @returns {SSStore} The new SSStore.\n    */\n   static #createStore(key, defaultValue = void 0)\n   {\n      try\n      {\n         const value = sessionStorage.getItem(key);\n         if (value !== null) { defaultValue = value === 'undefined' ? void 0 : JSON.parse(value); }\n      }\n      catch (err) { /**/ }\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the SSStore Map or creates a new store for the key and a given default value.\n    *\n    * @param {string}               key - Key to lookup in stores map.\n    *\n    * @param {boolean}              [defaultValue] - A default value to set for the store.\n    *\n    * @returns {SSStore} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = SessionStorage.#createStore(key, defaultValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Get value from the sessionStorage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = sessionStorage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = storageValue === 'undefined' ? void 0 : JSON.parse(storageValue);\n         } catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = JSON.stringify(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            sessionStorage.setItem(key, newValue === 'undefined' ? void 0 : newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {SSStore} The Svelte store for this key.\n    */\n   getStore(key, defaultValue)\n   {\n      return this.#getStore(key, defaultValue);\n   }\n\n   /**\n    * Sets the value for the given key in sessionStorage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in session storage.\n    *\n    * @param {string}   key - Key to lookup in sessionStorage.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!JSON.parse(sessionStorage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function|{withOld: !Function}} reflect Called when the\n * derived store gets a new value via its `set` or `update` methods, and determines new values for\n * the origin stores. [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = \"withOld\" in reflect;\n\tvar wrappedDerive = (got, set) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tvar sendUpstream = (setWith) => {\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tif (reflectOldValues) {\n\t\treflect = reflect.withOld;\n\t}\n\tvar reflectIsAsync = reflect.length >= (reflectOldValues ? 3 : 2);\n\tvar cleanup = null;\n\tfunction doReflect(reflecting) {\n\t\tif (cleanup) {\n\t\t\tcleanup();\n\t\t\tcleanup = null;\n\t\t}\n\n\t\tif (reflectOldValues) {\n\t\t\tvar returned = reflect(reflecting, originValues, sendUpstream);\n\t\t} else {\n\t\t\tvar returned = reflect(reflecting, sendUpstream);\n\t\t}\n\t\tif (reflectIsAsync) {\n\t\t\tif (typeof returned == \"function\") {\n\t\t\t\tcleanup = returned;\n\t\t\t}\n\t\t} else {\n\t\t\tsendUpstream(returned);\n\t\t}\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t{ withOld(reflecting, object) {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t} }\n\t\t);\n\t}\n}\n\n/**\n */\nclass EmbeddedStoreManager\n{\n   /**\n    * RegExp for detecting CRUD updates for renderContext.\n    *\n    * @type {RegExp}\n    */\n   static #renderContextRegex = /(create|delete|update)(\\w+)/;\n\n   /**\n    * @type {Map<string, EmbeddedCollectionData>}\n    */\n   #name = new Map();\n\n   /**\n    * @type {foundry.abstract.Document[]}\n    */\n   #document;\n\n   /**\n    * @type {Set<string>}\n    */\n   #embeddedNames = new Set();\n\n   /**\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\n    */\n   constructor(document)\n   {\n      this.#document = document;\n\n      this.handleDocChange();\n   }\n\n   /**\n    * @template T\n    *\n    * @param {string} embeddedName -\n    *\n    * @param {import('@typhonjs-fvtt/svelte/store').OptionsDynMapCreate<string, T>} options -\n    *\n    * @returns {import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>} DynMapReducer instance\n    */\n   create(embeddedName, options)\n   {\n      /** @type {foundry.abstract.Document} */\n      const doc = this.#document[0];\n\n      let collection = null;\n\n      if (doc)\n      {\n         try\n         {\n            collection = doc.getEmbeddedCollection(embeddedName);\n         }\n         catch (err)\n         {\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${embeddedName}`);\n         }\n      }\n\n      let embeddedData;\n\n      if (!this.#name.has(embeddedName))\n      {\n         embeddedData = {\n            collection,\n            stores: new Map()\n         };\n\n         this.#name.set(embeddedName, embeddedData);\n      }\n      else\n      {\n         embeddedData = this.#name.get(embeddedName);\n      }\n\n      /** @type {string} */\n      let name;\n\n      /** @type {import('@typhonjs-fvtt/svelte/store').DataOptions<T>} */\n      let rest = {};\n\n      /** @type {import('@typhonjs-fvtt/svelte/store').IDynMapReducerCtor<string, T>} */\n      let ctor;\n\n      if (typeof options === 'string')\n      {\n         name = options;\n         ctor = DynMapReducer;\n      }\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\n      {\n         ctor = options;\n      }\n      else if (typeof options === 'object' && options !== null)\n      {\n         ({ name, ctor = DynMapReducer, ...rest } = options);\n      }\n      else\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\n      }\n\n      if (!hasPrototype(ctor, DynMapReducer))\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\n      }\n\n      name = name ?? ctor?.name;\n\n      if (typeof name !== 'string') { throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`); }\n\n      if (embeddedData.stores.has(name))\n      {\n         return embeddedData.stores.get(name);\n      }\n      else\n      {\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\n         const store = new ctor(storeOptions);\n         embeddedData.stores.set(name, store);\n         return store;\n      }\n   }\n\n   /**\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\n    * store name just that particular store is destroyed and removed.\n    *\n    * @param {string}   [embeddedName] - Specific embedded collection name.\n    *\n    * @param {string}   [storeName] - Specific store name.\n    *\n    * @returns {boolean} One or more stores destroyed?\n    */\n   destroy(embeddedName, storeName)\n   {\n      let count = 0;\n\n      // Destroy all embedded stores\n      if (embeddedName === void 0)\n      {\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n            for (const store of embeddedData.stores.values())\n            {\n               store.destroy();\n               count++;\n            }\n         }\n\n         this.#name.clear();\n      }\n      else if (typeof embeddedName === 'string' && storeName === void 0)\n      {\n         const embeddedData = this.#name.get(embeddedName);\n         if (embeddedData)\n         {\n            embeddedData.collection = null;\n            for (const store of embeddedData.stores.values())\n            {\n               store.destroy();\n               count++;\n            }\n         }\n\n         this.#name.delete(embeddedName);\n      }\n      else if (typeof embeddedName === 'string' && storeName === 'string')\n      {\n         const embeddedData = this.#name.get(embeddedName);\n         if (embeddedData)\n         {\n            const store = embeddedData.stores.get(storeName);\n            if (store)\n            {\n               store.destroy();\n               count++;\n            }\n         }\n      }\n\n      return count > 0;\n   }\n\n   /**\n    * @template T\n    *\n    * @param {string} embeddedName -\n    *\n    * @param {string} storeName -\n    *\n    * @returns {import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>} DynMapReducer instance.\n    */\n   get(embeddedName, storeName)\n   {\n      if (!this.#name.has(embeddedName)) { return void 0; }\n\n      return this.#name.get(embeddedName).stores.get(storeName);\n   }\n\n   /**\n    * Updates all existing embedded collection stores with the associated embedded collection\n    */\n   handleDocChange()\n   {\n      const doc = this.#document[0];\n\n      if (doc instanceof foundry.abstract.Document)\n      {\n         const existingEmbeddedNames = new Set(this.#name.keys());\n\n         /** @type {string[]} */\n         const embeddedNames = Object.keys(doc.constructor?.metadata?.embedded ?? []);\n\n         // Remove all previously stored embedded name CRUD keys.\n         this.#embeddedNames.clear();\n\n         for (const embeddedName of embeddedNames)\n         {\n            // Remove processed embedded name from existingEmbeddedNames set.\n            existingEmbeddedNames.delete(embeddedName);\n\n            // Update CRUD keys.\n            this.#embeddedNames.add(`create${embeddedName}`);\n            this.#embeddedNames.add(`delete${embeddedName}`);\n            this.#embeddedNames.add(`update${embeddedName}`);\n\n            let collection = null;\n\n            try\n            {\n               // Update any existing stores with the actual collection.\n               collection = doc.getEmbeddedCollection(embeddedName);\n            }\n            catch (err)\n            {\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${\n                embeddedName}`);\n            }\n\n            // Update EmbeddedData for new collection.\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData)\n            {\n               embeddedData.collection = collection;\n\n               // Update all existing stores.\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\n            }\n         }\n\n         // Update all existing embedded collections with null data that aren't processed above.\n         for (const embeddedName of existingEmbeddedNames)\n         {\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n            }\n         }\n      }\n      else // Reset all embedded reducer stores to null data.\n      {\n         this.#embeddedNames.clear();\n\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n         }\n      }\n   }\n\n   /**\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\n    *\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\n    *\n    * @param {string}   renderContext - render context update from document.\n    */\n   handleUpdate(renderContext)\n   {\n      if (!this.#embeddedNames.has(renderContext)) { return; }\n\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\n\n      if (match)\n      {\n         const embeddedName = match[2];\n         if (!this.#name.has(embeddedName)) { return; }\n\n         for (const store of this.#name.get(embeddedName).stores.values())\n         {\n            store.index.update(true);\n         }\n      }\n   }\n}\n\n/**\n * @typedef {object} EmbeddedCollectionData\n *\n * @property {foundry.abstract.Collection} collection -\n *\n * @property {Map<string, import('@typhonjs-fvtt/svelte/store').DynMapReducer<string, T>>} stores -\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n */\nclass TJSDocument\n{\n   /**\n    * @type {foundry.abstract.Document[]}\n    */\n   #document = [void 0];\n\n   /**\n    * @type {EmbeddedStoreManager}\n    */\n   #embeddedStoreManager;\n   #embeddedAPI;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {TJSDocumentOptions}\n    */\n   #options = { delete: void 0 };\n\n   #subscriptions = [];\n   #updateOptions;\n\n   /**\n    * @param {foundry.abstract.Document | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\n    *\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\n    */\n   constructor(document, options = {})\n   {\n      this.#uuidv4 = `tjs-document-${uuidv4()}`;\n\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(document);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(document);\n      }\n   }\n\n   /**\n    * @returns {EmbeddedAPI} Embedded store manager.\n    */\n   get embedded()\n   {\n      if (!this.#embeddedAPI)\n      {\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\n         this.#embeddedAPI = {\n            create: (embeddedName, options) => this.#embeddedStoreManager.create(embeddedName, options),\n            destroy: (embeddedName, storeName) => this.#embeddedStoreManager.destroy(embeddedName, storeName),\n            get: (embeddedName, storeName) => this.#embeddedStoreManager.get(embeddedName, storeName)\n         };\n      }\n\n      return this.#embeddedAPI;\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {object} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuidv4() { return this.#uuidv4; }\n\n   /**\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const doc = this.#document[0];\n\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\n      if (doc instanceof foundry.abstract.Document && !doc?.collection?.has(doc.id))\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\n\n         if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\n\n         this.#updateOptions = void 0;\n      }\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * ClientDocumentMixin `apps` tracking object.\n    */\n   destroy()\n   {\n      const doc = this.#document[0];\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.destroy();\n         this.#embeddedStoreManager = void 0;\n         this.#embeddedAPI = void 0;\n      }\n\n      if (doc instanceof foundry.abstract.Document)\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have document update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const doc = this.#document[0];\n\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\n      }\n   }\n\n   /**\n    * @returns {foundry.abstract.Document | undefined} Current document\n    */\n   get() { return this.#document[0]; }\n\n   /**\n    * @param {foundry.abstract.Document | undefined}  document - New document to set.\n    *\n    * @param {object}         [options] - New document update options to set.\n    */\n   set(document, options = {})\n   {\n      if (this.#document[0])\n      {\n         delete this.#document[0].apps[this.#uuidv4];\n      }\n\n      if (document !== void 0 && !(document instanceof foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\n      }\n\n      if (options === null || typeof options !== 'object')\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (document instanceof foundry.abstract.Document)\n      {\n         document.apps[this.#uuidv4] = {\n            close: this.#deleted.bind(this),\n            render: this.#updateSubscribers.bind(this)\n         };\n      }\n\n      this.#setDocument(document);\n      this.#updateOptions = options;\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {foundry.abstract.Document | undefined} doc -\n    */\n   #setDocument(doc)\n   {\n      this.#document[0] = doc;\n\n      if (this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\n   }\n\n   /**\n    * Potentially sets new document from data transfer object.\n    *\n    * @param {object}   data - Document transfer data.\n    *\n    * @param {ParseDataTransferOptions & TJSDocumentOptions}   [options] - Optional parameters.\n    *\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\n    */\n   async setFromDataTransfer(data, options)\n   {\n      return this.setFromUUID(getUUIDFromDataTransfer(data, options), options);\n   }\n\n   /**\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n    *\n    * @param {string}   uuid - A Foundry UUID to lookup.\n    *\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\n    *\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\n    */\n   async setFromUUID(uuid, options = {})\n   {\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\n\n      try\n      {\n         const doc = await globalThis.fromUuid(uuid);\n\n         if (doc)\n         {\n            this.set(doc, options);\n            return true;\n         }\n      }\n      catch (err) { /**/ }\n\n      return false;\n   }\n\n   /**\n    * Sets options for this document wrapper / store.\n    *\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n      }\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n   }\n\n   /**\n    * @param {function(foundry.abstract.Document, object): void} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\n\n      const updateOptions = { action: 'subscribe', data: void 0 };\n\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef {object} TJSDocumentOptions\n *\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\n */\n\n/**\n * @typedef {object} EmbeddedAPI\n *\n * @property {(embeddedName: string, options: import('@typhonjs-fvtt/runtime/svelte/store').OptionsDynMapCreate<string, any>) => import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, T>} create - Creates an embedded collection store.\n *\n * @property {(embeddedName?: string, storeName?: string) => boolean} destroy - Destroys one or more embedded collection stores.\n *\n * @property {(embeddedName: string, storeName: string) => import('@typhonjs-fvtt/runtime/svelte/store').DynMapReducer<string, T>} get - Returns a specific existing embedded collection store.\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template {DocumentCollection} T\n */\nclass TJSDocumentCollection\n{\n   #collection;\n   #collectionCallback;\n   #uuid;\n\n   /**\n    * @type {TJSDocumentCollectionOptions}\n    */\n   #options = { delete: void 0 };\n\n   #subscriptions = [];\n   #updateOptions;\n\n   /**\n    * @param {T|TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n    *\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\n    */\n   constructor(collection, options = {})\n   {\n      this.#uuid = `tjs-collection-${uuidv4()}`;\n\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(collection);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(collection);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {object} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {*} UUID\n    */\n   get uuid() { return this.#uuid; }\n\n   /**\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\n\n      if (typeof this.#options.delete === 'function') { await this.#options.delete(); }\n\n      this.#updateOptions = void 0;\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * DocumentCollection `apps` tracking array.\n    */\n   destroy()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have collection update context.\n    */\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\n      const subscriptions = this.#subscriptions;\n      const collection = this.#collection;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\n   }\n\n   /**\n    * @returns {T | undefined} Current collection\n    */\n   get() { return this.#collection; }\n\n   /**\n    * @param {T | undefined}  collection - New collection to set.\n    *\n    * @param {object}         [options] - New collection update options to set.\n    */\n   set(collection, options = {})\n   {\n      if (this.#collection)\n      {\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\n\n         this.#collectionCallback = void 0;\n      }\n\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\n      {\n         throw new TypeError(\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (collection instanceof DocumentCollection)\n      {\n         this.#collectionCallback = {\n            close: this.#deleted.bind(this),\n            render: this.#notify.bind(this)\n         };\n\n         collection?.apps?.push(this.#collectionCallback);\n      }\n\n      this.#collection = collection;\n      this.#updateOptions = options;\n      this.#notify();\n   }\n\n   /**\n    * Sets options for this collection wrapper / store.\n    *\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n      }\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n   }\n\n   /**\n    * @param {function(T, object): void} handler - Callback function that is invoked on update / changes.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\n\n      const collection = this.#collection;\n\n      const documentType = collection?.documentName ?? void 0;\n\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\n\n      handler(collection, updateOptions);  // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef TJSDocumentCollectionOptions\n *\n * @property {Function} [delete] - Optional delete function to invoke when document is deleted.\n */\n\nconst storeState = writable$2(void 0);\n\n/**\n * @type {GameState} Provides a Svelte store wrapping the Foundry runtime / global game state.\n */\nconst gameState = {\n   subscribe: storeState.subscribe,\n   get: () => game\n};\n\nObject.freeze(gameState);\n\nHooks.once('ready', () => storeState.set(game));\n\n/**\n * @typedef {import('svelte/store').Readable} GameState - Provides a Svelte store wrapping the Foundry `game` global variable. It is initialized\n * on the `ready` hook. You may use this store to access the global game state from a Svelte template. It is a read only\n * store and will receive no reactive updates during runtime.\n *\n * @property {import('svelte/store').Readable.subscribe} subscribe - Provides the Svelte store subscribe function.\n *\n * @property {Function} get - Provides a mechanism to directly access the Foundry game state without subscribing.\n */\n\n/**\n * Registers game settings and creates a backing Svelte store for each setting. It is possible to add multiple\n * `onChange` callbacks on registration.\n */\nclass TJSGameSettings\n{\n   /**\n    * @type {Map<string, GSWritableStore>}\n    */\n   #stores = new Map();\n\n   /**\n    * Creates a new GSWritableStore for the given key.\n    *\n    * @param {string}   initialValue - An initial value to set to new stores.\n    *\n    * @returns {GSWritableStore} The new GSWritableStore.\n    */\n   static #createStore(initialValue)\n   {\n      return writable$2(initialValue);\n   }\n\n   /**\n    * Gets a store from the GSWritableStore Map or creates a new store for the key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {string}   [initialValue] - An initial value to set to new stores.\n    *\n    * @returns {GSWritableStore} The store for the given key.\n    */\n   #getStore(key, initialValue)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = TJSGameSettings.#createStore(initialValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Returns a readable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {GSReadableStore|undefined} The associated store for the given game setting key.\n    */\n   getReadableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      const store = this.#getStore(key);\n\n      return { subscribe: store.subscribe, get: store.get };\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\n    */\n   getStore(key)\n   {\n      return this.getWritableStore(key);\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {GSWritableStore|undefined} The associated store for the given game setting key.\n    */\n   getWritableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      return this.#getStore(key);\n   }\n\n   /**\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\n    */\n   register(setting)\n   {\n      if (typeof setting !== 'object')\n      {\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\n      }\n\n      if (typeof setting.options !== 'object')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'options' attribute is not an object.`);\n      }\n\n      if (setting.store !== void 0 && !isWritableStore(setting.store))\n      {\n         throw new TypeError(\n          `TJSGameSettings - register: 'setting.store' attribute is not a writable store.`);\n      }\n\n      // TODO: Remove deprecation warning and fully remove support for `moduleId` in a future TRL release.\n      if (typeof setting.moduleId === 'string')\n      {\n         console.warn(\n          `TJSGameSettings - register deprecation warning: 'moduleId' should be replaced with 'namespace'.`);\n         console.warn(`'moduleId' will cease to work in a future update of TRL / TJSGameSettings.`);\n      }\n\n      // TODO: Remove nullish coalescing operator in a future TRL release.\n      const namespace = setting.namespace ?? setting.moduleId;\n      const key = setting.key;\n\n      if (typeof namespace !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\n      }\n\n      if (typeof key !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\n      }\n\n      const store = setting.store;\n\n      /**\n       * @type {GameSettingOptions}\n       */\n      const options = setting.options;\n\n      const onchangeFunctions = [];\n\n      // When true prevents local store subscription from a loop when values are object data.\n      let gateSet = false;\n\n      // Provides an `onChange` callback to update the associated store.\n      onchangeFunctions.push((value) =>\n      {\n         const callbackStore = this.#getStore(key);\n         if (callbackStore && !gateSet)\n         {\n            gateSet = true;\n            callbackStore.set(value);\n            gateSet = false;\n         }\n      });\n\n      // Handle loading any existing `onChange` callbacks.\n      if (isIterable(options?.onChange))\n      {\n         for (const entry of options.onChange)\n         {\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\n         }\n      }\n      else if (typeof options.onChange === 'function')\n      {\n         onchangeFunctions.push(options.onChange);\n      }\n\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\n      const onChange = (value) =>\n      {\n         for (const entry of onchangeFunctions) { entry(value); }\n      };\n\n      game.settings.register(namespace, key, { ...options, onChange });\n\n      // Set new store value with existing setting or default value.\n      const targetStore = store ? store : this.#getStore(key, game.settings.get(namespace, key));\n\n      // If a store instance is passed into register then initialize it with game settings data.\n      if (store)\n      {\n         this.#stores.set(key, targetStore);\n         store.set(game.settings.get(namespace, key));\n      }\n\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\n      // existing game setting.\n      subscribeIgnoreFirst(targetStore, async (value) =>\n      {\n         if (!gateSet && game.settings.get(namespace, key) !== value)\n         {\n            gateSet = true;\n            await game.settings.set(namespace, key, value);\n         }\n\n         gateSet = false;\n      });\n   }\n\n   /**\n    * Registers multiple settings.\n    *\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\n    */\n   registerAll(settings)\n   {\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\n\n      for (const entry of settings)\n      {\n         if (typeof entry !== 'object')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\n         }\n\n         // TODO: Uncomment when deprecation for 'moduleId' is removed in future TRL release.\n         // if (typeof entry.namespace !== 'string')\n         // {\n         //    throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\n         // }\n\n         if (typeof entry.key !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\n         }\n\n         if (typeof entry.options !== 'object')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\n         }\n\n         this.register(entry);\n      }\n   }\n}\n\nexport { DerivedArrayReducer, DerivedMapReducer, DynArrayReducer, DynMapReducer, LocalStorage, SessionStorage, TJSDocument, TJSDocumentCollection, TJSGameSettings, gameState, isReadableStore, isUpdatableStore, isWritableStore, propertyStore, subscribeFirstRest, subscribeIgnoreFirst, writableDerived };\n//# sourceMappingURL=index.js.map\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp$5(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\n/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nfunction equals$9(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\nvar common = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   EPSILON: EPSILON,\n   get ARRAY_TYPE () { return ARRAY_TYPE; },\n   RANDOM: RANDOM,\n   setMatrixArrayType: setMatrixArrayType,\n   toRadian: toRadian,\n   equals: equals$9\n});\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction create$8() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nfunction clone$8(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction copy$8(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nfunction identity$5(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nfunction fromValues$8(m00, m01, m10, m11) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nfunction set$8(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction transpose$2(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction invert$5(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nfunction adjoint$2(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$3(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction multiply$8(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction rotate$4(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nfunction scale$8(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nfunction fromRotation$4(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nfunction fromScaling$3(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$8(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$3(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction add$8(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nfunction subtract$6(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$8(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$8(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nfunction multiplyScalar$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nfunction multiplyScalarAndAdd$3(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nvar mul$8 = multiply$8;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nvar sub$6 = subtract$6;\n\nvar mat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$8,\n   clone: clone$8,\n   copy: copy$8,\n   identity: identity$5,\n   fromValues: fromValues$8,\n   set: set$8,\n   transpose: transpose$2,\n   invert: invert$5,\n   adjoint: adjoint$2,\n   determinant: determinant$3,\n   multiply: multiply$8,\n   rotate: rotate$4,\n   scale: scale$8,\n   fromRotation: fromRotation$4,\n   fromScaling: fromScaling$3,\n   str: str$8,\n   frob: frob$3,\n   LDU: LDU,\n   add: add$8,\n   subtract: subtract$6,\n   exactEquals: exactEquals$8,\n   equals: equals$8,\n   multiplyScalar: multiplyScalar$3,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$3,\n   mul: mul$8,\n   sub: sub$6\n});\n\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction create$7() {\n  var out = new ARRAY_TYPE(6);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nfunction clone$7(a) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction copy$7(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nfunction identity$4(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nfunction fromValues$7(a, b, c, d, tx, ty) {\n  var out = new ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nfunction set$7(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nfunction invert$4(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$2(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction multiply$7(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction rotate$3(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nfunction scale$7(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nfunction translate$3(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nfunction fromRotation$3(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nfunction fromScaling$2(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nfunction fromTranslation$3(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$7(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$2(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction add$7(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nfunction subtract$5(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nfunction multiplyScalar$2(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nfunction multiplyScalarAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$7(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$7(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nvar mul$7 = multiply$7;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nvar sub$5 = subtract$5;\n\nvar mat2d = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$7,\n   clone: clone$7,\n   copy: copy$7,\n   identity: identity$4,\n   fromValues: fromValues$7,\n   set: set$7,\n   invert: invert$4,\n   determinant: determinant$2,\n   multiply: multiply$7,\n   rotate: rotate$3,\n   scale: scale$7,\n   translate: translate$3,\n   fromRotation: fromRotation$3,\n   fromScaling: fromScaling$2,\n   fromTranslation: fromTranslation$3,\n   str: str$7,\n   frob: frob$2,\n   add: add$7,\n   subtract: subtract$5,\n   multiplyScalar: multiplyScalar$2,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$2,\n   exactEquals: exactEquals$7,\n   equals: equals$7,\n   mul: mul$7,\n   sub: sub$5\n});\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction create$6() {\n  var out = new ARRAY_TYPE(9);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nfunction fromMat4$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nfunction clone$6(a) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction copy$6(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nfunction fromValues$6(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nfunction set$6(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nfunction identity$3(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction transpose$1(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction invert$3(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nfunction adjoint$1(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant$1(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction multiply$6(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nfunction translate$2(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction rotate$2(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nfunction scale$6(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nfunction fromTranslation$2(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nfunction fromRotation$2(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nfunction fromScaling$1(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nfunction fromQuat$1(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$6(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob$1(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction add$6(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nfunction subtract$4(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nfunction multiplyScalar$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nfunction multiplyScalarAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$6(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$6(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nvar mul$6 = multiply$6;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nvar sub$4 = subtract$4;\n\nvar mat3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$6,\n   fromMat4: fromMat4$1,\n   clone: clone$6,\n   copy: copy$6,\n   fromValues: fromValues$6,\n   set: set$6,\n   identity: identity$3,\n   transpose: transpose$1,\n   invert: invert$3,\n   adjoint: adjoint$1,\n   determinant: determinant$1,\n   multiply: multiply$6,\n   translate: translate$2,\n   rotate: rotate$2,\n   scale: scale$6,\n   fromTranslation: fromTranslation$2,\n   fromRotation: fromRotation$2,\n   fromScaling: fromScaling$1,\n   fromMat2d: fromMat2d,\n   fromQuat: fromQuat$1,\n   normalFromMat4: normalFromMat4,\n   projection: projection,\n   str: str$6,\n   frob: frob$1,\n   add: add$6,\n   subtract: subtract$4,\n   multiplyScalar: multiplyScalar$1,\n   multiplyScalarAndAdd: multiplyScalarAndAdd$1,\n   exactEquals: exactEquals$6,\n   equals: equals$6,\n   mul: mul$6,\n   sub: sub$4\n});\n\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction create$5() {\n  var out = new ARRAY_TYPE(16);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nfunction clone$5(a) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction copy$5(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nfunction fromValues$5(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nfunction set$5(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nfunction identity$2(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction invert$2(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction multiply$5(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nfunction translate$1(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nfunction scale$5(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction rotate$1(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateX$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateY$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction rotateZ$3(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromTranslation$1(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nfunction fromRotation$1(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslation$1(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation$1(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getTranslation$1(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nvar perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nfunction perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nvar ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nfunction orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {\n    return identity$2(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nfunction str$5(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction add$5(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nfunction subtract$3(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction exactEquals$5(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nfunction equals$5(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nvar mul$5 = multiply$5;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nvar sub$3 = subtract$3;\n\nvar mat4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$5,\n   clone: clone$5,\n   copy: copy$5,\n   fromValues: fromValues$5,\n   set: set$5,\n   identity: identity$2,\n   transpose: transpose,\n   invert: invert$2,\n   adjoint: adjoint,\n   determinant: determinant,\n   multiply: multiply$5,\n   translate: translate$1,\n   scale: scale$5,\n   rotate: rotate$1,\n   rotateX: rotateX$3,\n   rotateY: rotateY$3,\n   rotateZ: rotateZ$3,\n   fromTranslation: fromTranslation$1,\n   fromScaling: fromScaling,\n   fromRotation: fromRotation$1,\n   fromXRotation: fromXRotation,\n   fromYRotation: fromYRotation,\n   fromZRotation: fromZRotation,\n   fromRotationTranslation: fromRotationTranslation$1,\n   fromQuat2: fromQuat2,\n   getTranslation: getTranslation$1,\n   getScaling: getScaling,\n   getRotation: getRotation,\n   fromRotationTranslationScale: fromRotationTranslationScale,\n   fromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,\n   fromQuat: fromQuat,\n   frustum: frustum,\n   perspectiveNO: perspectiveNO,\n   perspective: perspective,\n   perspectiveZO: perspectiveZO,\n   perspectiveFromFieldOfView: perspectiveFromFieldOfView,\n   orthoNO: orthoNO,\n   ortho: ortho,\n   orthoZO: orthoZO,\n   lookAt: lookAt,\n   targetTo: targetTo,\n   str: str$5,\n   frob: frob,\n   add: add$5,\n   subtract: subtract$3,\n   multiplyScalar: multiplyScalar,\n   multiplyScalarAndAdd: multiplyScalarAndAdd,\n   exactEquals: exactEquals$5,\n   equals: equals$5,\n   mul: mul$5,\n   sub: sub$3\n});\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nfunction create$4() {\n  var out = new ARRAY_TYPE(3);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nfunction clone$4(a) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nfunction fromValues$4(x, y, z) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nfunction copy$4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nfunction set$4(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction add$4(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction subtract$2(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction multiply$4(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction divide$2(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nfunction ceil$2(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nfunction floor$2(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction min$2(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction max$2(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nfunction round$2(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nfunction scale$4(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nfunction scaleAndAdd$2(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$2(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$4(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nfunction negate$2(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nfunction inverse$2(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nfunction normalize$4(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$4(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction lerp$4(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nfunction random$3(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  var z = RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat4$2(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nfunction transformMat3$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nfunction transformQuat$1(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateX$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateY$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nfunction rotateZ$2(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle$1(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot$4(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nfunction zero$2(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$4(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$4(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$4(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nvar sub$2 = subtract$2;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nvar mul$4 = multiply$4;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nvar div$2 = divide$2;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nvar dist$2 = distance$2;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nvar sqrDist$2 = squaredDistance$2;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nvar len$4 = length$4;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nvar sqrLen$4 = squaredLength$4;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$2 = function () {\n  var vec = create$4();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nvar vec3 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$4,\n   clone: clone$4,\n   length: length$4,\n   fromValues: fromValues$4,\n   copy: copy$4,\n   set: set$4,\n   add: add$4,\n   subtract: subtract$2,\n   multiply: multiply$4,\n   divide: divide$2,\n   ceil: ceil$2,\n   floor: floor$2,\n   min: min$2,\n   max: max$2,\n   round: round$2,\n   scale: scale$4,\n   scaleAndAdd: scaleAndAdd$2,\n   distance: distance$2,\n   squaredDistance: squaredDistance$2,\n   squaredLength: squaredLength$4,\n   negate: negate$2,\n   inverse: inverse$2,\n   normalize: normalize$4,\n   dot: dot$4,\n   cross: cross$2,\n   lerp: lerp$4,\n   hermite: hermite,\n   bezier: bezier,\n   random: random$3,\n   transformMat4: transformMat4$2,\n   transformMat3: transformMat3$1,\n   transformQuat: transformQuat$1,\n   rotateX: rotateX$2,\n   rotateY: rotateY$2,\n   rotateZ: rotateZ$2,\n   angle: angle$1,\n   zero: zero$2,\n   str: str$4,\n   exactEquals: exactEquals$4,\n   equals: equals$4,\n   sub: sub$2,\n   mul: mul$4,\n   div: div$2,\n   dist: dist$2,\n   sqrDist: sqrDist$2,\n   len: len$4,\n   sqrLen: sqrLen$4,\n   forEach: forEach$2\n});\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nfunction create$3() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nfunction clone$3(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nfunction fromValues$3(x, y, z, w) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nfunction copy$3(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nfunction set$3(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction add$3(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction subtract$1(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction multiply$3(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction divide$1(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nfunction ceil$1(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nfunction floor$1(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction min$1(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nfunction max$1(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nfunction round$1(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nfunction scale$3(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nfunction scaleAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength$3(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nfunction negate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nfunction inverse$1(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nfunction normalize$3(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot$3(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nfunction cross$1(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nfunction lerp$3(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nfunction random$2(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = RANDOM() * 2 - 1;\n    v2 = RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = RANDOM() * 2 - 1;\n    v4 = RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nfunction transformMat4$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nfunction zero$1(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$3(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals$3(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals$3(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nvar sub$1 = subtract$1;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nvar mul$3 = multiply$3;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nvar div$1 = divide$1;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nvar dist$1 = distance$1;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nvar sqrDist$1 = squaredDistance$1;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nvar len$3 = length$3;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nvar sqrLen$3 = squaredLength$3;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach$1 = function () {\n  var vec = create$3();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nvar vec4 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$3,\n   clone: clone$3,\n   fromValues: fromValues$3,\n   copy: copy$3,\n   set: set$3,\n   add: add$3,\n   subtract: subtract$1,\n   multiply: multiply$3,\n   divide: divide$1,\n   ceil: ceil$1,\n   floor: floor$1,\n   min: min$1,\n   max: max$1,\n   round: round$1,\n   scale: scale$3,\n   scaleAndAdd: scaleAndAdd$1,\n   distance: distance$1,\n   squaredDistance: squaredDistance$1,\n   length: length$3,\n   squaredLength: squaredLength$3,\n   negate: negate$1,\n   inverse: inverse$1,\n   normalize: normalize$3,\n   dot: dot$3,\n   cross: cross$1,\n   lerp: lerp$3,\n   random: random$2,\n   transformMat4: transformMat4$1,\n   transformQuat: transformQuat,\n   zero: zero$1,\n   str: str$3,\n   exactEquals: exactEquals$3,\n   equals: equals$3,\n   sub: sub$1,\n   mul: mul$3,\n   div: div$1,\n   dist: dist$1,\n   sqrDist: sqrDist$1,\n   len: len$3,\n   sqrLen: sqrLen$3,\n   forEach: forEach$1\n});\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nfunction create$2() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction identity$1(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot$2(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nfunction multiply$2(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateX$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateY$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nfunction rotateZ$1(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale$2(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nfunction random$1(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = RANDOM();\n  var u2 = RANDOM();\n  var u3 = RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nfunction invert$1(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nfunction conjugate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str$2(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar clone$2 = clone$3;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nvar fromValues$2 = fromValues$3;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nvar copy$2 = copy$3;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nvar set$2 = set$3;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nvar add$2 = add$3;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nvar mul$2 = multiply$2;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nvar scale$2 = scale$3;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$2 = dot$3;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nvar lerp$2 = lerp$3;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nvar length$2 = length$3;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nvar len$2 = length$2;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$2 = squaredLength$3;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nvar sqrLen$2 = squaredLength$2;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nvar normalize$2 = normalize$3;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar exactEquals$2 = exactEquals$3;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nvar equals$2 = equals$3;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = create$4();\n  var xUnitVec3 = fromValues$4(1, 0, 0);\n  var yUnitVec3 = fromValues$4(0, 1, 0);\n  return function (out, a, b) {\n    var dot = dot$4(a, b);\n\n    if (dot < -0.999999) {\n      cross$2(tmpvec3, xUnitVec3, a);\n      if (len$4(tmpvec3) < 0.000001) cross$2(tmpvec3, yUnitVec3, a);\n      normalize$4(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      cross$2(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize$2(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nvar sqlerp = function () {\n  var temp1 = create$2();\n  var temp2 = create$2();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nvar setAxes = function () {\n  var matr = create$6();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize$2(out, fromMat3(out, matr));\n  };\n}();\n\nvar quat = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$2,\n   identity: identity$1,\n   setAxisAngle: setAxisAngle,\n   getAxisAngle: getAxisAngle,\n   getAngle: getAngle,\n   multiply: multiply$2,\n   rotateX: rotateX$1,\n   rotateY: rotateY$1,\n   rotateZ: rotateZ$1,\n   calculateW: calculateW,\n   exp: exp,\n   ln: ln,\n   pow: pow,\n   slerp: slerp,\n   random: random$1,\n   invert: invert$1,\n   conjugate: conjugate$1,\n   fromMat3: fromMat3,\n   fromEuler: fromEuler,\n   str: str$2,\n   clone: clone$2,\n   fromValues: fromValues$2,\n   copy: copy$2,\n   set: set$2,\n   add: add$2,\n   mul: mul$2,\n   scale: scale$2,\n   dot: dot$2,\n   lerp: lerp$2,\n   length: length$2,\n   len: len$2,\n   squaredLength: squaredLength$2,\n   sqrLen: sqrLen$2,\n   normalize: normalize$2,\n   exactEquals: exactEquals$2,\n   equals: equals$2,\n   rotationTo: rotationTo,\n   sqlerp: sqlerp,\n   setAxes: setAxes\n});\n\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nfunction create$1() {\n  var dq = new ARRAY_TYPE(8);\n\n  if (ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction clone$1(a) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromValues$1(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = create$2();\n  getRotation(outer, a);\n  var t = new ARRAY_TYPE(3);\n  getTranslation$1(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nfunction copy$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nfunction set$1(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nvar getReal = copy$2;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nvar setReal = copy$2;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateX$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateY$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  rotateZ$1(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < EPSILON) {\n    return copy$1(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nfunction add$1(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nfunction multiply$1(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nvar mul$1 = multiply$1;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nfunction scale$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nvar dot$1 = dot$2;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nfunction lerp$1(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot$1(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength$1(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nvar length$1 = length$2;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nvar len$1 = length$1;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nvar squaredLength$1 = squaredLength$2;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nvar sqrLen$1 = squaredLength$1;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nfunction normalize$1(out, a) {\n  var magnitude = squaredLength$1(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nfunction str$1(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nfunction exactEquals$1(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nfunction equals$1(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n\nvar quat2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create$1,\n   clone: clone$1,\n   fromValues: fromValues$1,\n   fromRotationTranslationValues: fromRotationTranslationValues,\n   fromRotationTranslation: fromRotationTranslation,\n   fromTranslation: fromTranslation,\n   fromRotation: fromRotation,\n   fromMat4: fromMat4,\n   copy: copy$1,\n   identity: identity,\n   set: set$1,\n   getReal: getReal,\n   getDual: getDual,\n   setReal: setReal,\n   setDual: setDual,\n   getTranslation: getTranslation,\n   translate: translate,\n   rotateX: rotateX,\n   rotateY: rotateY,\n   rotateZ: rotateZ,\n   rotateByQuatAppend: rotateByQuatAppend,\n   rotateByQuatPrepend: rotateByQuatPrepend,\n   rotateAroundAxis: rotateAroundAxis,\n   add: add$1,\n   multiply: multiply$1,\n   mul: mul$1,\n   scale: scale$1,\n   dot: dot$1,\n   lerp: lerp$1,\n   invert: invert,\n   conjugate: conjugate,\n   length: length$1,\n   len: len$1,\n   squaredLength: squaredLength$1,\n   sqrLen: sqrLen$1,\n   normalize: normalize$1,\n   str: str$1,\n   exactEquals: exactEquals$1,\n   equals: equals$1\n});\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(2);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nfunction fromValues(x, y) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nvar len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nvar sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nvar mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nvar div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nvar dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nvar sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nvar sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nvar vec2 = /*#__PURE__*/Object.freeze({\n   __proto__: null,\n   create: create,\n   clone: clone,\n   fromValues: fromValues,\n   copy: copy,\n   set: set,\n   add: add,\n   subtract: subtract,\n   multiply: multiply,\n   divide: divide,\n   ceil: ceil,\n   floor: floor,\n   min: min,\n   max: max,\n   round: round,\n   scale: scale,\n   scaleAndAdd: scaleAndAdd,\n   distance: distance,\n   squaredDistance: squaredDistance,\n   length: length,\n   squaredLength: squaredLength,\n   negate: negate,\n   inverse: inverse,\n   normalize: normalize,\n   dot: dot,\n   cross: cross,\n   lerp: lerp,\n   random: random,\n   transformMat2: transformMat2,\n   transformMat2d: transformMat2d,\n   transformMat3: transformMat3,\n   transformMat4: transformMat4,\n   rotate: rotate,\n   angle: angle,\n   zero: zero,\n   str: str,\n   exactEquals: exactEquals,\n   equals: equals,\n   len: len,\n   sub: sub,\n   mul: mul,\n   div: div,\n   dist: dist,\n   sqrDist: sqrDist,\n   sqrLen: sqrLen,\n   forEach: forEach\n});\n\n/**\n * Provides a way to calculate velocity via effectively creating a \"complementary filter\".\n *\n * `velQuick` and `velSmooth` separately accumulate over time. `velInstant` and `velUsed` do not accumulate and are\n * discarded each update. `velQuick` is responsive, but noisy. `velSmooth` is laggy but eventually more accurate. By\n * tracking them separately the used result can be responsive in the short term and accurate in the long term.\n *\n * TODO: This class will be moved to a final location in the @typhonjs-svelte/lib/math package.\n */\nclass TJSVelocityTrack\n{\n   /** @type {number} */\n   #lastSampleTime;\n\n   /**\n    * Tracks the last sample point.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #lastSamplePoint = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Defines the settle time in milliseconds that resets any tracked velocity state.\n    *\n    * @type {number}\n    */\n   #resetDeltaTime;\n\n   /**\n    * Stores the scaling conversion for used velocity calculation. By default, this is 1000 which converts the velocity\n    * calculation to velocity per second. Set to `1` for instance for velocity per millisecond.\n    *\n    * @type {number}\n    */\n   #scaleTime;\n\n   /**\n    * Stores the instant velocity between current and last sample point.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velInstant = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the `quick` running calculated velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velQuick = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the `smooth` running calculated velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velSmooth = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Stores the mix between `quick` and `smooth` running velocity.\n    *\n    * @type {{x: number, y: number, z: number}}\n    */\n   #velUsed = { x: 0, y: 0, z: 0 };\n\n   /**\n    * Creates a velocity tracker instance.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {number}   [opts.resetDeltaTime=50] - Delta time in milliseconds that resets velocity tracking.\n    *\n    * @param {number}   [opts.scaleTime=1000] - Scales velocity calculation to new time frame. 1000 is velocity per\n    *                                           second.\n    */\n   constructor({ resetDeltaTime = 50, scaleTime = 1000 } = {})\n   {\n      this.resetDeltaTime = resetDeltaTime;\n      this.scaleTime = scaleTime;\n\n      Object.seal(this.#velUsed);\n   }\n\n   /**\n    * @returns {number} Gets `resetDeltaTime`.\n    */\n   get resetDeltaTime() { return this.#resetDeltaTime; }\n\n   /**\n    * @returns {number} Gets `scaleTime`.\n    */\n   get scaleTime() { return this.#scaleTime; }\n\n   /**\n    * Sets `resetDeltaTime`.\n    *\n    * @param {number}   resetDeltaTime - Delta time in milliseconds that resets velocity tracking.\n    */\n   set resetDeltaTime(resetDeltaTime)\n   {\n      if (!Number.isFinite(resetDeltaTime) || resetDeltaTime < 0)\n      {\n         throw new TypeError(`'resetDeltaTime' is not a positive finite number.`);\n      }\n\n      this.#resetDeltaTime = resetDeltaTime;\n   }\n\n   /**\n    * Sets `scaleTime`.\n    *\n    * @param {number}   scaleTime - Scales velocity calculation to new time frame. 1000 is velocity per second.\n    */\n   set scaleTime(scaleTime)\n   {\n      if (!Number.isFinite(scaleTime) || scaleTime < 0)\n      {\n         throw new TypeError(`'scaleTime' is not a positive finite number.`);\n      }\n\n      this.#scaleTime = scaleTime;\n   }\n\n   /**\n    * Resets velocity tracking data.\n    *\n    * @param {number}   [x=0] - 'X' value to set to last sample point.\n    *\n    * @param {number}   [y=0] - 'Y' value to set to last sample point.\n    *\n    * @param {number}   [z=0] - 'Z' value to set to last sample point.\n    *\n    * @param {number}   [sampleTime=performance.now()] - A sample time in milliseconds resolution.\n    */\n   reset(x = 0, y = 0, z = 0, sampleTime = performance.now())\n   {\n      if (!Number.isFinite(x)) { throw new TypeError(`'x' is not a finite number.`); }\n      if (!Number.isFinite(y)) { throw new TypeError(`'y' is not a finite number.`); }\n      if (!Number.isFinite(z)) { throw new TypeError(`'z' is not a finite number.`); }\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\n\n      // Reset velocity tracking variables.\n      this.#lastSampleTime = sampleTime;\n\n      this.#lastSamplePoint.x = x;\n      this.#lastSamplePoint.y = y;\n      this.#lastSamplePoint.z = z;\n\n      this.#velInstant.x = this.#velQuick.x = this.#velSmooth.x = this.#velUsed.x = 0;\n      this.#velInstant.y = this.#velQuick.y = this.#velSmooth.y = this.#velUsed.y = 0;\n      this.#velInstant.z = this.#velQuick.z = this.#velSmooth.z = this.#velUsed.z = 0;\n   }\n\n   /**\n    * Runs ongoing velocity calculation of x / y / z given a sample time.\n    *\n    * @param {number|undefined}  x - New sample X\n    *\n    * @param {number|undefined}  y - New sample Y\n    *\n    * @param {number|undefined}  z - New sample Z\n    *\n    * @param {number}            [sampleTime=performance.now()] - An optional specific time w/ millisecond resolution.\n    *\n    * @returns {{x: number, y: number, z: number}} current velocity.\n    */\n   update(x = void 0, y = void 0, z = void 0, sampleTime = performance.now())\n   {\n      if (!Number.isFinite(sampleTime)) { throw new TypeError(`'sampleTime' is not a finite number.`); }\n\n      const deltaTime = sampleTime - this.#lastSampleTime + Number.EPSILON;\n      this.#lastSampleTime = sampleTime;\n\n      // Reset velocity tracking if the delta time is greater than `resetDeltaTime`.\n      if (deltaTime > this.#resetDeltaTime)\n      {\n         this.reset(x, y, z, sampleTime);\n         return this.#velUsed;\n      }\n\n      if (Number.isFinite(x))\n      {\n         this.#velInstant.x = (x - this.#lastSamplePoint.x) / deltaTime;\n\n         this.#lastSamplePoint.x = x;\n\n         this.#velQuick.x = lerp$5(this.#velQuick.x, this.#velInstant.x, 0.1);\n         this.#velSmooth.x = lerp$5(this.#velSmooth.x, this.#velInstant.x, 0.01);\n         this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\n      }\n\n      if (Number.isFinite(y))\n      {\n         this.#velInstant.y = (y - this.#lastSamplePoint.y) / deltaTime;\n\n         this.#lastSamplePoint.y = y;\n\n         this.#velQuick.y = lerp$5(this.#velQuick.y, this.#velInstant.y, 0.1);\n         this.#velSmooth.y = lerp$5(this.#velSmooth.y, this.#velInstant.y, 0.01);\n\n         this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\n      }\n\n      if (Number.isFinite(z))\n      {\n         this.#velInstant.z = (z - this.#lastSamplePoint.z) / deltaTime;\n\n         this.#lastSamplePoint.z = z;\n\n         this.#velQuick.z = lerp$5(this.#velQuick.z, this.#velInstant.z, 0.1);\n         this.#velSmooth.z = lerp$5(this.#velSmooth.z, this.#velInstant.z, 0.01);\n         this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\n      }\n\n      return this.#velUsed;\n   }\n\n   /**\n    * Gets the current velocity tracking data.\n    *\n    * @returns {{x: number, y: number, z: number}} Velocity tracking data.\n    */\n   get()\n   {\n      this.#velUsed.x = lerp$5(this.#velSmooth.x, this.#velQuick.x, 0.5) * this.#scaleTime;\n      this.#velUsed.y = lerp$5(this.#velSmooth.y, this.#velQuick.y, 0.5) * this.#scaleTime;\n      this.#velUsed.z = lerp$5(this.#velSmooth.z, this.#velQuick.z, 0.5) * this.#scaleTime;\n\n      return this.#velUsed;\n   }\n}\n\nexport { TJSVelocityTrack, degToRad, common as glMatrix, lerp$5 as lerp, mat2, mat2d, mat3, mat4, quat, quat2, radToDeg, vec2, vec3, vec4 };\n//# sourceMappingURL=index.js.map\n","/**\n * Provides a basic {@link TJSBasicAnimation} implementation for Position animation.\n */\nexport class AnimationControl\n{\n   /** @type {object} */\n   #animationData;\n\n   /** @type {Promise<void>} */\n   #finishedPromise;\n\n   #willFinish;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationControl}\n    */\n   static #voidControl = new AnimationControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\n    *\n    * @returns {AnimationControl} Void AnimationControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {object|null} [animationData] - Animation data from {@link AnimationAPI}.\n    *\n    * @param {boolean}     [willFinish] - Promise that tracks animation finished state.\n    */\n   constructor(animationData, willFinish = false)\n   {\n      this.#animationData = animationData;\n      this.#willFinish = willFinish;\n\n      // Set this control to animation data.\n      if (animationData !== null && typeof animationData === 'object')\n      {\n         animationData.control = this;\n      }\n   }\n\n   /**\n    * Get a promise that resolves when animation is finished.\n    *\n    * @returns {Promise<void>}\n    */\n   get finished()\n   {\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n          Promise.resolve();\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether this animation is currently active / animating.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n    * if an animation is actually finished.\n    *\n    * @returns {boolean} Animation active state.\n    */\n   get isActive() { return this.#animationData.active; }\n\n   /**\n    * Returns whether this animation is completely finished.\n    *\n    * @returns {boolean} Animation finished state.\n    */\n   get isFinished() { return this.#animationData.finished; }\n\n   /**\n    * Cancels the animation.\n    */\n   cancel()\n   {\n      const animationData = this.#animationData;\n\n      if (animationData === null || animationData === void 0) { return; }\n\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n      // update.\n      animationData.cancelled = true;\n   }\n}\n","/**\n * Provides animation management and scheduling allowing all Position instances to utilize one micro-task.\n */\nexport class AnimationManager\n{\n   /**\n    * @type {object[]}\n    */\n   static activeList = [];\n\n   /**\n    * @type {object[]}\n    */\n   static newList = [];\n\n   /**\n    * @type {number}\n    */\n   static current;\n\n   /**\n    * Add animation data.\n    *\n    * @param {object}   data -\n    */\n   static add(data)\n   {\n      const now = performance.now();\n\n      // Offset start time by delta between last rAF time. This allows continuous tween cycles to appear naturally as\n      // starting from the instant they are added to the AnimationManager. This is what makes `draggable` smooth when\n      // easing is enabled.\n      data.start = now + (AnimationManager.current - now);\n\n      AnimationManager.newList.push(data);\n   }\n\n   /**\n    * Manage all animation\n    */\n   static animate()\n   {\n      const current = AnimationManager.current = performance.now();\n\n      // Early out of the rAF callback when there are no current animations.\n      if (AnimationManager.activeList.length === 0 && AnimationManager.newList.length === 0)\n      {\n         globalThis.requestAnimationFrame(AnimationManager.animate);\n         return;\n      }\n\n      if (AnimationManager.newList.length)\n      {\n         // Process new data\n         for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n         {\n            const data = AnimationManager.newList[cntr];\n\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\n            if (data.cancelled)\n            {\n               AnimationManager.newList.splice(cntr, 1);\n               data.cleanup(data);\n            }\n\n            // If data is active then process it now. Delayed animations start with `active` false.\n            if (data.active)\n            {\n               // Remove from new list and add to active list.\n               AnimationManager.newList.splice(cntr, 1);\n               AnimationManager.activeList.push(data);\n            }\n         }\n      }\n\n      // Process active animations.\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n\n         // Remove any animations that have been canceled.\n         // Ensure that the element is still connected otherwise remove it from active list and continue.\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n            continue;\n         }\n\n         data.current = current - data.start;\n\n         // Remove this animation instance if current animating time exceeds duration.\n         if (data.current >= data.duration)\n         {\n            // Prepare final update with end position data.\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n            {\n               const key = data.keys[dataCntr];\n               data.newData[key] = data.destination[key];\n            }\n\n            data.position.set(data.newData);\n\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n\n            continue;\n         }\n\n         // Apply easing to create an eased time.\n         const easedTime = data.ease(data.current / data.duration);\n\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n         {\n            const key = data.keys[dataCntr];\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n         }\n\n         data.position.set(data.newData);\n      }\n\n      globalThis.requestAnimationFrame(AnimationManager.animate);\n   }\n\n   /**\n    * Cancels all animations for given Position instance.\n    *\n    * @param {Position} position - Position instance.\n    */\n   static cancel(position)\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.newList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n   }\n\n   /**\n    * Cancels all active and delayed animations.\n    */\n   static cancelAll()\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      AnimationManager.activeList.length = 0;\n      AnimationManager.newList.length = 0;\n   }\n\n   /**\n    * Gets all {@link AnimationControl} instances for a given Position instance.\n    *\n    * @param {Position} position - Position instance.\n    *\n    * @returns {AnimationControl[]} All scheduled AnimationControl instances for the given Position instance.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      return results;\n   }\n}\n\n// Start animation manager immediately. It constantly is running in background.\nAnimationManager.animate();\n","/**\n * Stores the PositionData properties that can be animated.\n *\n * @type {Set<string>}\n */\nconst animateKeys = new Set([\n   // Main keys\n   'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n   'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n   // Aliases\n   'rotation'\n]);\n\n/**\n * Defines the keys of PositionData that are transform keys.\n *\n * @type {string[]}\n */\nconst transformKeys = ['rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'];\n\nObject.freeze(transformKeys);\n\n/**\n * Parses a relative value string in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n *\n * @type {RegExp}\n */\nconst relativeRegex = /^([-+*])=(-?[\\d]*\\.?[\\d]+)$/;\n\n/**\n * Provides numeric defaults for all parameters. This is used by {@link Position.get} to optionally provide\n * numeric defaults.\n *\n * @type {{rotation: number, scale: number, minWidth: null, minHeight: null, translateZ: number, top: number, left: number, maxHeight: null, translateY: number, translateX: number, width: number, transformOrigin: null, rotateX: number, rotateY: number, height: number, maxWidth: null, zIndex: null, rotateZ: number}}\n */\nconst numericDefaults = {\n   // Other keys\n   height: 0,\n   left: 0,\n   maxHeight: null,\n   maxWidth: null,\n   minHeight: null,\n   minWidth: null,\n   top: 0,\n   transformOrigin: null,\n   width: 0,\n   zIndex: null,\n\n   rotateX: 0,\n   rotateY: 0,\n   rotateZ: 0,\n   scale: 1,\n   translateX: 0,\n   translateY: 0,\n   translateZ: 0,\n\n   rotation: 0\n};\n\nObject.freeze(numericDefaults);\n\n/**\n * Sets numeric defaults for a {@link PositionData} like object.\n *\n * @param {object}   data - A PositionData like object.\n */\nfunction setNumericDefaults(data)\n{\n   // Transform keys\n   if (data.rotateX === null) { data.rotateX = 0; }\n   if (data.rotateY === null) { data.rotateY = 0; }\n   if (data.rotateZ === null) { data.rotateZ = 0; }\n   if (data.translateX === null) { data.translateX = 0; }\n   if (data.translateY === null) { data.translateY = 0; }\n   if (data.translateZ === null) { data.translateZ = 0; }\n   if (data.scale === null) { data.scale = 1; }\n\n   // Aliases\n   if (data.rotation === null) { data.rotation = 0; }\n}\n\n/**\n * Defines bitwise keys for transforms used in {@link Transforms.getMat4}.\n *\n * @type {object}\n */\nconst transformKeysBitwise = {\n   rotateX: 1,\n   rotateY: 2,\n   rotateZ: 4,\n   scale: 8,\n   translateX: 16,\n   translateY: 32,\n   translateZ: 64\n};\n\nObject.freeze(transformKeysBitwise);\n\n/**\n * Defines the default transform origin.\n *\n * @type {string}\n */\nconst transformOriginDefault = 'top left';\n\n/**\n * Defines the valid transform origins.\n *\n * @type {string[]}\n */\nconst transformOrigins = ['top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left',\n 'bottom center', 'bottom right'];\n\nObject.freeze(transformOrigins);\n\nexport {\n   animateKeys,\n   numericDefaults,\n   relativeRegex,\n   setNumericDefaults,\n   transformKeys,\n   transformKeysBitwise,\n   transformOriginDefault,\n   transformOrigins\n};\n","import * as constants from './constants.js';\n\n/**\n * Converts any relative string values for animatable keys to actual updates performed against current data.\n *\n * @param {PositionDataExtended}    positionData - position data.\n *\n * @param {Position|PositionData}   position - The source position instance.\n */\nexport function convertRelative(positionData, position)\n{\n   for (const key in positionData)\n   {\n      // Key is animatable / numeric.\n      if (constants.animateKeys.has(key))\n      {\n         const value = positionData[key];\n\n         if (typeof value !== 'string') { continue; }\n\n         // Ignore 'auto' and 'inherit' string values.\n         if (value === 'auto' || value === 'inherit') { continue; }\n\n         const regexResults = constants.relativeRegex.exec(value);\n\n         if (!regexResults)\n         {\n            throw new Error(\n             `convertRelative error: malformed relative key (${key}) with value (${value})`);\n         }\n\n         const current = position[key];\n\n         switch (regexResults[1])\n         {\n            case '-':\n               positionData[key] = current - parseFloat(regexResults[2]);\n               break;\n\n            case '+':\n               positionData[key] = current + parseFloat(regexResults[2]);\n               break;\n\n            case '*':\n               positionData[key] = current * parseFloat(regexResults[2]);\n               break;\n         }\n      }\n   }\n}\n","import { cubicOut }           from 'svelte/easing';\n\nimport { lerp }               from '@typhonjs-fvtt/runtime/svelte/math';\nimport {\n   isIterable,\n   isObject }                 from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationControl }   from './AnimationControl.js';\nimport { AnimationManager }   from './AnimationManager.js';\n\nimport { convertRelative }    from '../convertRelative.js';\n\nimport {\n   animateKeys,\n   setNumericDefaults }       from '../constants.js';\n\nexport class AnimationAPI\n{\n   /** @type {PositionData} */\n   #data;\n\n   /** @type {Position} */\n   #position;\n\n   /**\n    * Tracks the number of animation control instances that are active.\n    *\n    * @type {number}\n    */\n   #instanceCount = 0;\n\n   /**\n    * Provides a bound function to pass as data to AnimationManager to invoke\n    *\n    * @type {Function}\n    * @see {AnimationAPI.#cleanupInstance}\n    */\n   #cleanup;\n\n   constructor(position, data)\n   {\n      this.#position = position;\n      this.#data = data;\n\n      this.#cleanup = this.#cleanupInstance.bind(this);\n   }\n\n   /**\n    * Returns whether there are scheduled animations whether active or delayed for this Position.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isScheduled()\n   {\n      return this.#instanceCount > 0;\n   }\n\n   /**\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n    *\n    * @param {object}      initial -\n    *\n    * @param {object}      destination -\n    *\n    * @param {number}      duration -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {number}      delay -\n    *\n    * @param {Function}    ease -\n    *\n    * @param {Function}    interpolate -\n    *\n    * @returns {AnimationControl} The associated animation control.\n    */\n   #addAnimation(initial, destination, duration, el, delay, ease, interpolate)\n   {\n      // Set initial data for transform values that are often null by default.\n      setNumericDefaults(initial);\n      setNumericDefaults(destination);\n\n      // Reject all initial data that is not a number.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\n      }\n\n      const keys = Object.keys(initial);\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      // Nothing to animate, so return now.\n      if (keys.length === 0) { return AnimationControl.voidControl; }\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el,\n         finished: false,\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      if (delay > 0)\n      {\n         animationData.active = false;\n\n         // Delay w/ setTimeout and schedule w/ AnimationManager if not already canceled\n         setTimeout(() =>\n         {\n            if (!animationData.cancelled)\n            {\n               animationData.active = true;\n\n               const now = performance.now();\n\n               // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n               // precise delayed time.\n               animationData.start = now + (AnimationManager.current - now);\n            }\n         }, delay * 1000);\n      }\n\n      // Schedule immediately w/ AnimationManager\n      this.#instanceCount++;\n      AnimationManager.add(animationData);\n\n      // Create animation control\n      return new AnimationControl(animationData, true);\n   }\n\n   /**\n    * Cancels all animation instances for this Position instance.\n    */\n   cancel()\n   {\n      AnimationManager.cancel(this.#position);\n   }\n\n   /**\n    * Cleans up an animation instance.\n    *\n    * @param {object}   data - Animation data for an animation instance.\n    */\n   #cleanupInstance(data)\n   {\n      this.#instanceCount--;\n\n      data.active = false;\n      data.finished = true;\n\n      if (typeof data.resolve === 'function') { data.resolve(data.cancelled); }\n   }\n\n   /**\n    * Returns all currently scheduled AnimationControl instances for this Position instance.\n    *\n    * @returns {AnimationControl[]} All currently scheduled animation controls for this Position instance.\n    */\n   getScheduled()\n   {\n      return AnimationManager.getScheduled(this.#position);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {PositionDataExtended} fromData - The starting position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   from(fromData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n      }\n\n      const position = this.#position;\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (data[key] !== void 0 && fromData[key] !== data[key])\n         {\n            initial[key] = fromData[key];\n            destination[key] = data[key];\n         }\n      }\n\n      convertRelative(initial, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {PositionDataExtended} fromData - The starting position.\n    *\n    * @param {PositionDataExtended} toData - The ending position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   fromTo(fromData, toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'fromData' is not an object.`);\n      }\n\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (toData[key] === void 0)\n         {\n            console.warn(\n             `AnimationAPI.fromTo warning: key ('${key}') from 'fromData' missing in 'toData'; skipping this key.`);\n            continue;\n         }\n\n         if (data[key] !== void 0)\n         {\n            initial[key] = fromData[key];\n            destination[key] = toData[key];\n         }\n      }\n\n      convertRelative(initial, data);\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {PositionDataExtended} toData - The destination position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {AnimationControl}  A control object that can cancel animation and provides a `finished` Promise.\n    */\n   to(toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.to error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in toData)\n      {\n         if (data[key] !== void 0 && toData[key] !== data[key])\n         {\n            destination[key] = toData[key];\n            initial[key] = data[key];\n         }\n      }\n\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Returns a function that provides an optimized way to constantly update a to-tween.\n    *\n    * @param {Iterable<string>}  keys - The keys for quickTo.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {number}            [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {quickToCallback} quick-to tween function.\n    */\n   quickTo(keys, { duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key of keys)\n      {\n         if (typeof key !== 'string')\n         {\n            throw new TypeError(`AnimationAPI.quickTo error: key is not a string.`);\n         }\n\n         if (!animateKeys.has(key))\n         {\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n         }\n\n         if (data[key] !== void 0)\n         {\n            destination[key] = data[key];\n            initial[key] = data[key];\n         }\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el: void 0,\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         for (let cntr = keysArray.length; --cntr >= 0;)\n         {\n            const key = keysArray[cntr];\n            if (data[key] !== void 0) { initial[key] = data[key]; }\n         }\n\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n         if (isObject(args[0]))\n         {\n            const objData = args[0];\n\n            for (const key in objData)\n            {\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\n            }\n         }\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\n         {\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\n            {\n               const key = keysArray[cntr];\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\n            }\n         }\n\n         convertRelative(destination, data);\n\n         // Set initial data for transform values that are often null by default.\n         setNumericDefaults(initial);\n         setNumericDefaults(destination);\n\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n         const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n         animationData.el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\n         if (animationData.finished)\n         {\n            animationData.finished = false;\n            animationData.active = true;\n            animationData.current = 0;\n\n            this.#instanceCount++;\n            AnimationManager.add(animationData);\n         }\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n         {\n            const now = performance.now();\n\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n            // precise delayed time.\n            animationData.start = now + (AnimationManager.current - now);\n            animationData.current = 0;\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object}            [opts] - Optional parameters.\n       *\n       * @param {number}            [opts.duration] - Duration in seconds.\n       *\n       * @param {Function}          [opts.ease] - Easing function.\n       *\n       * @param {Function}          [opts.interpolate] - Interpolation function.\n       *\n       * @returns {quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = ({ duration, ease, interpolate } = {}) => // eslint-disable-line no-shadow\n      {\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n         }\n\n         if (ease !== void 0 && typeof ease !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'ease' is not a function.`);\n         }\n\n         if (interpolate !== void 0 && typeof interpolate !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'interpolate' is not a function.`);\n         }\n\n         if (duration >= 0) { animationData.duration = duration * 1000; }\n         if (ease) { animationData.ease = ease; }\n         if (interpolate) { animationData.interpolate = interpolate; }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * @callback quickToCallback\n *\n * @param {...number|object} args - Either individual numbers corresponding to the order in which keys are specified or\n *                                  a single object with keys specified and numerical values.\n *\n * @property {({duration?: number, ease?: Function, interpolate?: Function}) => quickToCallback} options - A function\n *                                  to update options for quickTo function.\n */\n","/**\n * Provides a basic {@link TJSBasicAnimation} implementation for a Position animation for a group of Position instances.\n */\nexport class AnimationGroupControl\n{\n   /** @type {AnimationControl[]} */\n   #animationControls;\n\n   /** @type {Promise<Awaited<unknown>[]>} */\n   #finishedPromise;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationGroupControl}\n    */\n   static #voidControl = new AnimationGroupControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n    *\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {AnimationControl[]} animationControls - An array of AnimationControl instances.\n    */\n   constructor(animationControls)\n   {\n      this.#animationControls = animationControls;\n   }\n\n   /**\n    * Get a promise that resolves when all animations are finished.\n    *\n    * @returns {Promise<Awaited<unknown>[]>|Promise<void>} Finished Promise for all animations.\n    */\n   get finished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return Promise.resolve(); }\n\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         const promises = [];\n         for (let cntr = animationControls.length; --cntr >= 0;)\n         {\n            promises.push(animationControls[cntr].finished);\n         }\n\n         this.#finishedPromise = Promise.all(promises);\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether there are active animation instances for this group.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n    * determine if all animations in the group are finished.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isActive()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return false; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (animationControls[cntr].isActive) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns whether all animations in the group are finished.\n    *\n    * @returns {boolean} Are all animation instances finished.\n    */\n   get isFinished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return true; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (!animationControls[cntr].isFinished) { return false; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Cancels the all animations.\n    */\n   cancel()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return; }\n\n      for (let cntr = this.#animationControls.length; --cntr >= 0;)\n      {\n         this.#animationControls[cntr].cancel();\n      }\n   }\n}\n","import {\n   isIterable,\n   isObject }                    from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationManager }      from './AnimationManager.js';\nimport { AnimationAPI }          from './AnimationAPI.js';\nimport { AnimationGroupControl } from './AnimationGroupControl.js';\n\n/**\n * Provides a public API for grouping multiple {@link Position} animations together with the AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the Position static / group Animation API `instanceof`\n * checks are not done against Position. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#isPosition}.\n *\n * @see AnimationAPI\n */\nexport class AnimationGroupAPI\n{\n   /**\n    * Checks of the given object is a Position instance by checking for AnimationAPI.\n    *\n    * @param {*}  object - Any data.\n    *\n    * @returns {boolean} Is Position.\n    */\n   static #isPosition(object)\n   {\n      return object !== null && typeof object === 'object' && object.animate instanceof AnimationAPI;\n   }\n\n   /**\n    * Cancels any animation for given Position data.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    */\n   static cancel(position)\n   {\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const actualPosition = this.#isPosition(entry) ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.cancel warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            AnimationManager.cancel(actualPosition);\n         }\n      }\n      else\n      {\n         const actualPosition = this.#isPosition(position) ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.cancel warning: No Position instance found.`);\n            return;\n         }\n\n         AnimationManager.cancel(actualPosition);\n      }\n   }\n\n   /**\n    * Cancels all Position animation.\n    */\n   static cancelAll() { AnimationManager.cancelAll(); }\n\n   /**\n    * Gets all animation controls for the given position data.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @returns {{position: Position, data: object|void, controls: AnimationControl[]}[]} Results array.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            const controls = AnimationManager.getScheduled(actualPosition);\n\n            results.push({ position: actualPosition, data: isPosition ? void 0 : entry, controls });\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found.`);\n            return results;\n         }\n\n         const controls = AnimationManager.getScheduled(actualPosition);\n\n         results.push({ position: actualPosition, data: isPosition ? void 0 : position, controls });\n      }\n\n      return results;\n   }\n\n   /**\n    * Provides the `from` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static from(position, fromData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof fromData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.from warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (typeof actualFromData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.from warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (typeof actualFromData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `fromTo` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static fromTo(position, fromData, toData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n      }\n\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasFromCallback = typeof fromData === 'function';\n      const hasToCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasFromCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (typeof actualFromData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasToCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (typeof actualToData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasFromCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (typeof actualFromData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasToCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (typeof actualToData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {TJSBasicAnimation} Basic animation control.\n    */\n   static to(position, toData, options)\n   {\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.to warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (typeof actualToData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.to warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (typeof actualToData !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more Position instances as a group.\n    *\n    * @param {Position|{position: Position}|Iterable<Position>|Iterable<{position: Position}>} position -\n    *\n    * @param {Iterable<string>}  keys -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {quickToCallback} Basic animation control.\n    */\n   static quickTo(position, keys, options)\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {quickToCallback[]}\n       */\n      const quickToCallbacks = [];\n\n      let index = -1;\n\n      const hasOptionCallback = typeof options === 'function';\n\n      const callbackOptions = { index, position: void 0, data: void 0 };\n\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            callbackOptions.index = index;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : entry;\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found.`);\n            return () => null;\n         }\n\n         callbackOptions.index = 0;\n         callbackOptions.position = position;\n         callbackOptions.data = isPosition ? void 0 : position;\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (typeof actualOptions !== 'object')\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         if (typeof args[0] === 'function')\n         {\n            const dataCallback = args[0];\n\n            index = -1;\n            let cntr = 0;\n\n            if (isIterable(position))\n            {\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition)) { continue; }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  const toData = dataCallback(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (toData === null || toData === void 0) { continue; }\n\n                  /**\n                   * @type {boolean}\n                   */\n                  const toDataIterable = isIterable(toData);\n\n                  if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\n                  {\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                      index}) failed to return a finite number, iterable list, or object.`);\n                  }\n\n                  if (toDataIterable)\n                  {\n                     quickToCallbacks[cntr++](...toData);\n                  }\n                  else\n                  {\n                     quickToCallbacks[cntr++](toData);\n                  }\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition)) { return; }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               const toData = dataCallback(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (toData === null || toData === void 0) { return; }\n\n               const toDataIterable = isIterable(toData);\n\n               if (!Number.isFinite(toData) && !toDataIterable && typeof toData !== 'object')\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                   index}) failed to return a finite number, iterable list, or object.`);\n               }\n\n               if (toDataIterable)\n               {\n                  quickToCallbacks[cntr++](...toData);\n               }\n               else\n               {\n                  quickToCallbacks[cntr++](toData);\n               }\n            }\n         }\n         else\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\n            {\n               quickToCallbacks[cntr](...args);\n            }\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object|Function}   [options] - Optional parameters.\n       *\n       * @param {number}            [options.duration] - Duration in seconds.\n       *\n       * @param {Function}          [options.ease] - Easing function.\n       *\n       * @param {Function}          [options.interpolate] - Interpolation function.\n       *\n       * @returns {quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\n      {\n         if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n         {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n         }\n\n         // Set options object for each quickTo callback.\n         if (isObject(options))\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\n         }\n         else if (typeof options === 'function')\n         {\n            if (isIterable(position))\n            {\n               index = -1;\n               let cntr = 0;\n\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition))\n                  {\n                     console.warn(\n                      `AnimationGroupAPI.quickTo.options warning: No Position instance found at index: ${index}.`);\n                     continue;\n                  }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  actualOptions = options(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (actualOptions === null || actualOptions === void 0) { continue; }\n\n                  if (typeof actualOptions !== 'object')\n                  {\n                     throw new TypeError(\n                      `AnimationGroupAPI.quickTo.options error: options callback function iteration(${\n                       index}) failed to return an object.`);\n                  }\n\n                  quickToCallbacks[cntr++].options(actualOptions);\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition))\n               {\n                  console.warn(`AnimationGroupAPI.quickTo.options warning: No Position instance found.`);\n                  return quickToCB;\n               }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               actualOptions = options(callbackOptions);\n\n               if (typeof actualOptions !== 'object')\n               {\n                  throw new TypeError(\n                   `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n               }\n\n               quickToCallbacks[0].options(actualOptions);\n            }\n         }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n","export class Centered\n{\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ element, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get element() { return this.#element; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   getLeft(width)\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   getTop(height)\n   {\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n","import { Centered } from './Centered.js';\n\nconst browserCentered = new Centered();\n\nexport { browserCentered, Centered };\n\n","export class PositionChangeSet\n{\n   constructor()\n   {\n      this.left = false;\n      this.top = false;\n      this.width = false;\n      this.height = false;\n      this.maxHeight = false;\n      this.maxWidth = false;\n      this.minHeight = false;\n      this.minWidth = false;\n      this.zIndex = false;\n      this.transform = false;\n      this.transformOrigin = false;\n   }\n\n   hasChange()\n   {\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n   }\n\n   set(value)\n   {\n      this.left = value;\n      this.top = value;\n      this.width = value;\n      this.height = value;\n      this.maxHeight = value;\n      this.maxWidth = value;\n      this.minHeight = value;\n      this.minWidth = value;\n      this.zIndex = value;\n      this.transform = value;\n      this.transformOrigin = value;\n   }\n}\n","/**\n * Defines stored positional data.\n */\nexport class PositionData\n{\n   constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null, minWidth = null,\n    rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null, translateY = null,\n     translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null } = {})\n   {\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.height = height;\n\n      /**\n       * @type {number|null}\n       */\n      this.left = left;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxHeight = maxHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxWidth = maxWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.minHeight = minHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.minWidth = minWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateX = rotateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateY = rotateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateZ = rotateZ;\n\n      /**\n       * @type {number|null}\n       */\n      this.scale = scale;\n\n      /**\n       * @type {number|null}\n       */\n      this.top = top;\n\n      /**\n       * @type {string|null}\n       */\n      this.transformOrigin = transformOrigin;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateX = translateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateY = translateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateZ = translateZ;\n\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.width = width;\n\n      /**\n       * @type {number|null}\n       */\n      this.zIndex = zIndex;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Copies given data to this instance.\n    *\n    * @param {PositionData}   data - Copy from this instance.\n    *\n    * @returns {PositionData} This instance.\n    */\n   copy(data)\n   {\n      this.height = data.height;\n      this.left = data.left;\n      this.maxHeight = data.maxHeight;\n      this.maxWidth = data.maxWidth;\n      this.minHeight = data.minHeight;\n      this.minWidth = data.minWidth;\n      this.rotateX = data.rotateX;\n      this.rotateY = data.rotateY;\n      this.rotateZ = data.rotateZ;\n      this.scale = data.scale;\n      this.top = data.top;\n      this.transformOrigin = data.transformOrigin;\n      this.translateX = data.translateX;\n      this.translateY = data.translateY;\n      this.translateZ = data.translateZ;\n      this.width = data.width;\n      this.zIndex = data.zIndex;\n\n      return this;\n   }\n}\n","import { linear }       from 'svelte/easing';\n\nimport { lerp }         from '@typhonjs-fvtt/runtime/svelte/math';\nimport { isIterable }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class PositionStateAPI\n{\n   /** @type {PositionData} */\n   #data;\n\n   /**\n    * @type {Map<string, PositionDataExtended>}\n    */\n   #dataSaved = new Map();\n\n   /** @type {Position} */\n   #position;\n\n   /** @type {Transforms} */\n   #transforms;\n\n   constructor(position, data, transforms)\n   {\n      this.#position = position;\n      this.#data = data;\n      this.#transforms = transforms;\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {PositionDataExtended} The saved data set.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - getSave error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Returns any associated default data.\n    *\n    * @returns {PositionDataExtended} Associated default data.\n    */\n   getDefault()\n   {\n      return this.#dataSaved.get('#defaultData');\n   }\n\n   /**\n    * Removes and returns any position state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {PositionDataExtended} Saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Resets data to default values and invokes set.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [opts.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      const defaultData = this.#dataSaved.get('#defaultData');\n\n      // Quit early if there is no saved default data.\n      if (typeof defaultData !== 'object') { return false; }\n\n      // Cancel all animations for Position if there are currently any scheduled.\n      if (this.#position.animate.isScheduled)\n      {\n         this.#position.animate.cancel();\n      }\n\n      const zIndex = this.#position.zIndex;\n\n      const data = Object.assign({}, defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Reset the transform data.\n      this.#transforms.reset(data);\n\n      // If current minimized invoke `maximize`.\n      if (this.#position.parent?.reactive?.minimized)\n      {\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\n      }\n\n      // Note next clock tick scheduling.\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\n\n      return true;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {Iterable<string>}  [params.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [params.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {PositionDataExtended|Promise<PositionDataExtended>} Saved position data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\n    ease = linear, interpolate = lerp })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.#position.transformOrigin)\n            {\n               this.#position.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.#position.animate.to(data, { duration, ease, interpolate }).finished.then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.#position.animate.to(data, { duration, ease, interpolate });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.#position.set(data);\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.extra] - Extra data to add to saved data.\n    *\n    * @returns {PositionData} Current position data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - save error: 'name' is not a string.`); }\n\n      const data = this.#position.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Directly sets a position state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.data] - Position data to set.\n    */\n   set({ name, ...data })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - set error: 'name' is not a string.`); }\n\n      this.#dataSaved.set(name, data);\n   }\n}\n","import { writable }           from 'svelte/store';\n\nimport { propertyStore }      from '@typhonjs-fvtt/runtime/svelte/store';\nimport { styleParsePixels }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class StyleCache\n{\n   constructor()\n   {\n      /** @type {HTMLElement|undefined} */\n      this.el = void 0;\n\n      /** @type {CSSStyleDeclaration} */\n      this.computed = void 0;\n\n      /** @type {number|undefined} */\n      this.marginLeft = void 0;\n\n      /** @type {number|undefined} */\n      this.marginTop = void 0;\n\n      /** @type {number|undefined} */\n      this.maxHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.maxWidth = void 0;\n\n      /** @type {number|undefined} */\n      this.minHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.minWidth = void 0;\n\n      /** @type {boolean} */\n      this.hasWillChange = false;\n\n      /**\n       * @type {ResizeObserverData}\n       */\n      this.resizeObserved = {\n         contentHeight: void 0,\n         contentWidth: void 0,\n         offsetHeight: void 0,\n         offsetWidth: void 0\n      };\n\n      /**\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n       *\n       * @type {Writable<ResizeObserverData>}\n       */\n      const storeResizeObserved = writable(this.resizeObserved);\n\n      this.stores = {\n         element: writable(this.el),\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n         resizeObserved: storeResizeObserved,\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n      };\n   }\n\n   /**\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetHeight()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n      }\n\n      throw new Error(`StyleCache - get offsetHeight error: no element assigned.`);\n   }\n\n   /**\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetWidth()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n      }\n\n      throw new Error(`StyleCache - get offsetWidth error: no element assigned.`);\n   }\n\n   /**\n    * @param {HTMLElement} el -\n    *\n    * @returns {boolean} Does element match cached element.\n    */\n   hasData(el) { return this.el === el; }\n\n   /**\n    * Resets the style cache.\n    */\n   reset()\n   {\n      // Remove will-change inline style from previous element if it is still connected.\n      if (this.el instanceof HTMLElement && this.el.isConnected && !this.hasWillChange)\n      {\n         this.el.style.willChange = null;\n      }\n\n      this.el = void 0;\n      this.computed = void 0;\n      this.marginLeft = void 0;\n      this.marginTop = void 0;\n      this.maxHeight = void 0;\n      this.maxWidth = void 0;\n      this.minHeight = void 0;\n      this.minWidth = void 0;\n\n      this.hasWillChange = false;\n\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n      this.resizeObserved.contentHeight = void 0;\n      this.resizeObserved.contentWidth = void 0;\n      this.resizeObserved.offsetHeight = void 0;\n      this.resizeObserved.offsetWidth = void 0;\n\n      // Reset the tracked element this Position instance is modifying.\n      this.stores.element.set(void 0);\n   }\n\n   /**\n    * Updates the style cache with new data from the given element.\n    *\n    * @param {HTMLElement} el - An HTML element.\n    */\n   update(el)\n   {\n      this.el = el;\n\n      this.computed = globalThis.getComputedStyle(el);\n\n      this.marginLeft = styleParsePixels(el.style.marginLeft) ?? styleParsePixels(this.computed.marginLeft);\n      this.marginTop = styleParsePixels(el.style.marginTop) ?? styleParsePixels(this.computed.marginTop);\n      this.maxHeight = styleParsePixels(el.style.maxHeight) ?? styleParsePixels(this.computed.maxHeight);\n      this.maxWidth = styleParsePixels(el.style.maxWidth) ?? styleParsePixels(this.computed.maxWidth);\n\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\n      this.minHeight = styleParsePixels(el.style.minHeight) ?? styleParsePixels(this.computed.minHeight);\n      this.minWidth = styleParsePixels(el.style.minWidth) ?? styleParsePixels(this.computed.minWidth);\n\n      // Tracks if there already is a will-change property on the inline or computed styles.\n      const willChange = el.style.willChange !== '' ? el.style.willChange : void 0 ?? this.computed.willChange;\n\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\n\n      // Update the tracked element this Position instance is modifying.\n      this.stores.element.set(el);\n   }\n}\n","import { mat4, vec3 }   from '@typhonjs-fvtt/runtime/svelte/math';\n\n/**\n * Provides the output data for {@link Transforms.getData}.\n */\nexport class TransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    *\n    * @type {DOMRect}\n    */\n   #boundingRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screenspace clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    *\n    * @type {Vector3[]}\n    */\n   #corners = [vec3.create(), vec3.create(), vec3.create(), vec3.create()];\n\n   /**\n    * Stores the current gl-matrix mat4 data.\n    *\n    * @type {Matrix4}\n    */\n   #mat4 = mat4.create();\n\n   /**\n    * Stores the pre & post origin translations to apply to matrix transforms.\n    *\n    * @type {Matrix4[]}\n    */\n   #originTranslations = [mat4.create(), mat4.create()];\n\n   /**\n    * @returns {DOMRect} The bounding rectangle.\n    */\n   get boundingRect() { return this.#boundingRect; }\n\n   /**\n    * @returns {Vector3[]} The transformed corner points as vec3 in screen space.\n    */\n   get corners() { return this.#corners; }\n\n   /**\n    * @returns {string} Returns the CSS style string for the transform matrix.\n    */\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns {Matrix4} The transform matrix.\n    */\n   get mat4() { return this.#mat4; }\n\n   /**\n    * @returns {Matrix4[]} The pre / post translation matrices for origin translation.\n    */\n   get originTranslations() { return this.#originTranslations; }\n}\n\n/**\n * @typedef {Float32Array} Vector3 - 3 Dimensional Vector.\n *\n * @see https://glmatrix.net/docs/module-vec3.html\n */\n\n/**\n * @typedef {Float32Array} Matrix4 - 4x4 Matrix; Format: column-major, when typed out it looks like row-major.\n *\n * @see https://glmatrix.net/docs/module-mat4.html\n */\n","/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is the only\n * required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the `.validators` getter in the main Position instance.\n * ```\n * const position = new Position(<PositionData>);\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nexport class AdapterValidators\n{\n   /**\n    * @type {ValidatorData[]}\n    */\n   #validatorData;\n\n   #mapUnsubscribe = new Map();\n\n   /**\n    * @returns {[AdapterValidators, ValidatorData[]]} Returns this and internal storage for validator adapter.\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n\n      return [this, this.#validatorData];\n   }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @returns {Generator<ValidatorData|undefined>} Generator / iterator of validators.\n    * @yields {ValidatorData<T>}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      let subscribeCount = 0;\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if (validatorType !== 'function' && validatorType !== 'object' || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         let data = void 0;\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validator !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validator' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validator: validator.validator.bind(validator),\n                  weight: validator.weight || 1,\n                  instance: validator\n               };\n\n               subscribeFn = validator.validator.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            // TODO: consider how to handle validator updates.\n            const unsubscribe = subscribeFn();\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Filter has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validator))\n            {\n               throw new Error(\n                'AdapterValidator error: Filter added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validator, unsubscribe);\n            subscribeCount++;\n         }\n      }\n\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an index update\n      // manually.\n      // TODO: handle validator updates.\n      // if (subscribeCount < validators.length) { this.#indexUpdate(); }\n   }\n\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      // TODO: handle validator updates.\n      // this.#indexUpdate();\n   }\n\n   /**\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n          data.validator : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validator === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Update the index a validator was removed.\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {function(*, ValidatorFn<T>, number): boolean} callback - Callback function to evaluate each validator\n    *                                                                  entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n}\n\n/**\n * @callback ValidatorFn - Position validator function that takes a {@link PositionData} instance potentially\n *                             modifying it or returning null if invalid.\n *\n * @param {ValidationData} valData - Validation data.\n *\n * @returns {PositionData|null} The validated position data or null to cancel position update.\n *\n */\n\n/**\n * @typedef {object} ValidatorData\n *\n * @property {*}           [id=undefined] - An ID associated with this validator. Can be used to remove the validator.\n *\n * @property {ValidatorFn} validator - Position validator function that takes a {@link PositionData} instance\n *                                     potentially modifying it or returning null if invalid.\n *\n * @property {number}      [weight=1] - A number between 0 and 1 inclusive to position this validator against others.\n *\n * @property {Function}    [subscribe] - Optional subscribe function following the Svelte store / subscribe pattern.\n */\n","export class BasicBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {PositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = valData.width = Math.clamped(valData.position.width, valData.minWidth, maxW);\n\n         if ((valData.width + valData.position.left + valData.marginLeft) > boundsWidth)\n         {\n            valData.position.left = boundsWidth - valData.width - valData.marginLeft;\n         }\n      }\n\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = valData.height = Math.clamped(valData.position.height, valData.minHeight, maxH);\n\n         if ((valData.height + valData.position.top + valData.marginTop) > boundsHeight)\n         {\n            valData.position.top = boundsHeight - valData.height - valData.marginTop;\n         }\n      }\n\n      const maxL = Math.max(boundsWidth - valData.width - valData.marginLeft, 0);\n      valData.position.left = Math.round(Math.clamped(valData.position.left, 0, maxL));\n\n      const maxT = Math.max(boundsHeight - valData.height - valData.marginTop, 0);\n      valData.position.top = Math.round(Math.clamped(valData.position.top, 0, maxT));\n\n      return valData.position;\n   }\n}\n","import { TransformData } from '../transform/TransformData.js';\n\nconst s_TRANSFORM_DATA = new TransformData();\n\nexport class TransformBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0 || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {PositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n      // true cap width bounds.\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = Math.clamped(valData.width, valData.minWidth, maxW);\n      }\n\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n      // is true cap height bounds.\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = Math.clamped(valData.height, valData.minHeight, maxH);\n      }\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      const data = valData.transforms.getData(valData.position, s_TRANSFORM_DATA, valData);\n\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n      // left oriented, so perform those checks last.\n\n      const initialX = data.boundingRect.x;\n      const initialY = data.boundingRect.y;\n\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\n      {\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\n      }\n\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\n      {\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\n      }\n\n      if (data.boundingRect.top - valData.marginTop < 0)\n      {\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\n      }\n\n      if (data.boundingRect.left - valData.marginLeft < 0)\n      {\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\n      }\n\n      valData.position.left -= initialX - data.boundingRect.x;\n      valData.position.top -= initialY - data.boundingRect.y;\n\n      return valData.position;\n   }\n}\n","import { BasicBounds }     from './BasicBounds.js';\nimport { TransformBounds } from './TransformBounds.js';\n\nconst basicWindow = new BasicBounds({ lock: true });\nconst transformWindow = new TransformBounds({ lock: true });\n\nexport { basicWindow, BasicBounds, transformWindow, TransformBounds };\n","import { degToRad, mat4, vec3 }  from '@typhonjs-fvtt/runtime/svelte/math';\n\nimport * as constants            from '../constants.js';\n\nimport { TransformData }         from './TransformData.js';\n\n/** @type {number[]} */\nconst s_SCALE_VECTOR = [1, 1, 1];\n\n/** @type {number[]} */\nconst s_TRANSLATE_VECTOR = [0, 0, 0];\n\n/** @type {Matrix4} */\nconst s_MAT4_RESULT = mat4.create();\n\n/** @type {Matrix4} */\nconst s_MAT4_TEMP = mat4.create();\n\n/** @type {Vector3} */\nconst s_VEC3_TEMP = vec3.create();\n\nexport class Transforms\n{\n   /**\n    * Stores the transform keys in the order added.\n    *\n    * @type {string[]}\n    */\n   #orderList = [];\n\n   constructor()\n   {\n      this._data = {};\n   }\n\n   /**\n    * @returns {boolean} Whether there are active transforms in local data.\n    */\n   get isActive() { return this.#orderList.length > 0; }\n\n   /**\n    * @returns {number|undefined} Any local rotateX data.\n    */\n   get rotateX() { return this._data.rotateX; }\n\n   /**\n    * @returns {number|undefined} Any local rotateY data.\n    */\n   get rotateY() { return this._data.rotateY; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ data.\n    */\n   get rotateZ() { return this._data.rotateZ; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ scale.\n    */\n   get scale() { return this._data.scale; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateX() { return this._data.translateX; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateY() { return this._data.translateY; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateZ() { return this._data.translateZ; }\n\n   /**\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateX === void 0) { this.#orderList.push('rotateX'); }\n\n         this._data.rotateX = value;\n      }\n      else\n      {\n         if (this._data.rotateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateX;\n      }\n   }\n\n   /**\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateY === void 0) { this.#orderList.push('rotateY'); }\n\n         this._data.rotateY = value;\n      }\n      else\n      {\n         if (this._data.rotateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateY;\n      }\n   }\n\n   /**\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\n\n         this._data.rotateZ = value;\n      }\n\n      else\n      {\n         if (this._data.rotateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateZ;\n      }\n   }\n\n   /**\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set scale(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.scale === void 0) { this.#orderList.push('scale'); }\n\n         this._data.scale = value;\n      }\n      else\n      {\n         if (this._data.scale !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.scale;\n      }\n   }\n\n   /**\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateX === void 0) { this.#orderList.push('translateX'); }\n\n         this._data.translateX = value;\n      }\n\n      else\n      {\n         if (this._data.translateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateX;\n      }\n   }\n\n   /**\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateY === void 0) { this.#orderList.push('translateY'); }\n\n         this._data.translateY = value;\n      }\n\n      else\n      {\n         if (this._data.translateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateY;\n      }\n   }\n\n   /**\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateZ === void 0) { this.#orderList.push('translateZ'); }\n\n         this._data.translateZ = value;\n      }\n\n      else\n      {\n         if (this._data.translateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateZ;\n      }\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSS(data = this._data)\n   {\n      return `matrix3d(${this.getMat4(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSSOrtho(data = this._data)\n   {\n      return `matrix3d(${this.getMat4Ortho(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Collects all data including a bounding rect, transform matrix, and points array of the given {@link PositionData}\n    * instance with the applied local transform data.\n    *\n    * @param {PositionData} position - The position data to process.\n    *\n    * @param {TransformData} [output] - Optional TransformData output instance.\n    *\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\n    *\n    * @returns {TransformData} The output TransformData instance.\n    */\n   getData(position, output = new TransformData(), validationData = {})\n   {\n      const valWidth = validationData.width ?? 0;\n      const valHeight = validationData.height ?? 0;\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.offsetLeft ?? 0;\n\n      position.top += valOffsetTop;\n      position.left += valOffsetLeft;\n\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\n\n      const rect = output.corners;\n\n      if (this.hasTransform(position))\n      {\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\n         rect[1][0] = width;\n         rect[1][1] = rect[1][2] = 0;\n         rect[2][0] = width;\n         rect[2][1] = height;\n         rect[2][2] = 0;\n         rect[3][0] = 0;\n         rect[3][1] = height;\n         rect[3][2] = 0;\n\n         const matrix = this.getMat4(position, output.mat4);\n\n         const translate = s_GET_ORIGIN_TRANSLATION(position.transformOrigin, width, height, output.originTranslations);\n\n         if (constants.transformOriginDefault === position.transformOrigin)\n         {\n            vec3.transformMat4(rect[0], rect[0], matrix);\n            vec3.transformMat4(rect[1], rect[1], matrix);\n            vec3.transformMat4(rect[2], rect[2], matrix);\n            vec3.transformMat4(rect[3], rect[3], matrix);\n         }\n         else\n         {\n            vec3.transformMat4(rect[0], rect[0], translate[0]);\n            vec3.transformMat4(rect[0], rect[0], matrix);\n            vec3.transformMat4(rect[0], rect[0], translate[1]);\n\n            vec3.transformMat4(rect[1], rect[1], translate[0]);\n            vec3.transformMat4(rect[1], rect[1], matrix);\n            vec3.transformMat4(rect[1], rect[1], translate[1]);\n\n            vec3.transformMat4(rect[2], rect[2], translate[0]);\n            vec3.transformMat4(rect[2], rect[2], matrix);\n            vec3.transformMat4(rect[2], rect[2], translate[1]);\n\n            vec3.transformMat4(rect[3], rect[3], translate[0]);\n            vec3.transformMat4(rect[3], rect[3], matrix);\n            vec3.transformMat4(rect[3], rect[3], translate[1]);\n         }\n\n         rect[0][0] = position.left + rect[0][0];\n         rect[0][1] = position.top + rect[0][1];\n         rect[1][0] = position.left + rect[1][0];\n         rect[1][1] = position.top + rect[1][1];\n         rect[2][0] = position.left + rect[2][0];\n         rect[2][1] = position.top + rect[2][1];\n         rect[3][0] = position.left + rect[3][0];\n         rect[3][1] = position.top + rect[3][1];\n      }\n      else\n      {\n         rect[0][0] = position.left;\n         rect[0][1] = position.top;\n         rect[1][0] = position.left + width;\n         rect[1][1] = position.top;\n         rect[2][0] = position.left + width;\n         rect[2][1] = position.top + height;\n         rect[3][0] = position.left;\n         rect[3][1] = position.top + height;\n\n         mat4.identity(output.mat4);\n      }\n\n      let maxX = Number.MIN_SAFE_INTEGER;\n      let maxY = Number.MIN_SAFE_INTEGER;\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (let cntr = 4; --cntr >= 0;)\n      {\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\n      }\n\n      const boundingRect = output.boundingRect;\n      boundingRect.x = minX;\n      boundingRect.y = minY;\n      boundingRect.width = maxX - minX;\n      boundingRect.height = maxY - minY;\n\n      position.top -= valOffsetTop;\n      position.left -= valOffsetLeft;\n\n      return output;\n   }\n\n   /**\n    * Creates a transform matrix based on local data applied in order it was added.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - PositionData instance or local transform data.\n    *\n    * @param {Matrix4}  [output] - The output mat4 instance.\n    *\n    * @returns {Matrix4} Transform matrix.\n    */\n   getMat4(data = this._data, output = mat4.create())\n   {\n      const matrix = mat4.identity(output);\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= constants.transformKeysBitwise.rotateX;\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= constants.transformKeysBitwise.rotateY;\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'scale':\n               seenKeys |= constants.transformKeysBitwise.scale;\n               s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n               mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n               break;\n\n            case 'translateX':\n               seenKeys |= constants.transformKeysBitwise.translateX;\n               s_TRANSLATE_VECTOR[0] = data.translateX;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = 0;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateY':\n               seenKeys |= constants.transformKeysBitwise.translateY;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = data.translateY;\n               s_TRANSLATE_VECTOR[2] = 0;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateZ':\n               seenKeys |= constants.transformKeysBitwise.translateZ;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = data.translateZ;\n               mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\n         {\n            const key = constants.transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'scale':\n                  s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n                  mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n                  break;\n\n               case 'translateX':\n                  s_TRANSLATE_VECTOR[0] = data[key];\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateY':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = data[key];\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateZ':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = data[key];\n                  mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n    *\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\n    * translate X / Y.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - PositionData instance or local transform data.\n    *\n    * @param {Matrix4}  [output] - The output mat4 instance.\n    *\n    * @returns {Matrix4} Transform matrix.\n    */\n   getMat4Ortho(data = this._data, output = mat4.create())\n   {\n      const matrix = mat4.identity(output);\n\n      // Attempt to retrieve values from passed in data otherwise default to 0.\n      // Always perform the translation last regardless of order added to local transform data.\n      // Add data.left to translateX and data.top to translateY.\n      s_TRANSLATE_VECTOR[0] = (data.left ?? 0) + (data.translateX ?? 0);\n      s_TRANSLATE_VECTOR[1] = (data.top ?? 0) + (data.translateY ?? 0);\n      s_TRANSLATE_VECTOR[2] = data.translateZ ?? 0;\n      mat4.multiply(matrix, matrix, mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n\n      // Scale can also be applied out of order.\n      if (data.scale !== null)\n      {\n         s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data.scale;\n         mat4.multiply(matrix, matrix, mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n      }\n\n      // Early out if there is not rotation data.\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\n\n      // Rotation transforms must be applied in the order they are added.\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= constants.transformKeysBitwise.rotateX;\n               mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= constants.transformKeysBitwise.rotateY;\n               mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= constants.transformKeysBitwise.rotateZ;\n               mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < constants.transformKeys.length; cntr++)\n         {\n            const key = constants.transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & constants.transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  mat4.multiply(matrix, matrix, mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  mat4.multiply(matrix, matrix, mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  mat4.multiply(matrix, matrix, mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Tests an object if it contains transform keys and the values are finite numbers.\n    *\n    * @param {object} data - An object to test for transform data.\n    *\n    * @returns {boolean} Whether the given PositionData has transforms.\n    */\n   hasTransform(data)\n   {\n      for (const key of constants.transformKeys)\n      {\n         if (Number.isFinite(data[key])) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Resets internal data from the given object containing valid transform keys.\n    *\n    * @param {object}   data - An object with transform data.\n    */\n   reset(data)\n   {\n      for (const key in data)\n      {\n         if (constants.transformKeys.includes(key))\n         {\n            if (Number.isFinite(data[key]))\n            {\n               this._data[key] = data[key];\n            }\n            else\n            {\n               const index = this.#orderList.findIndex((entry) => entry === key);\n               if (index >= 0) { this.#orderList.splice(index, 1); }\n\n               delete this._data[key];\n            }\n         }\n      }\n   }\n}\n\n/**\n * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n * translation.\n *\n * This method is used internally, but may be useful if you need the origin translation matrices to transform\n * bespoke points based on any `transformOrigin` set in {@link PositionData}.\n *\n * @param {string}   transformOrigin - The transform origin attribute from PositionData.\n *\n * @param {number}   width - The PositionData width or validation data width when 'auto'.\n *\n * @param {number}   height - The PositionData height or validation data height when 'auto'.\n *\n * @param {Matrix4[]}   output - Output Mat4 array.\n *\n * @returns {Matrix4[]} Output Mat4 array.\n */\nfunction s_GET_ORIGIN_TRANSLATION(transformOrigin, width, height, output)\n{\n   const vector = s_VEC3_TEMP;\n\n   switch (transformOrigin)\n   {\n      case 'top left':\n         vector[0] = vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top center':\n         vector[0] = -width * 0.5;\n         vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top right':\n         vector[0] = -width;\n         vector[1] = 0;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center left':\n         vector[0] = 0;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case null: // By default null / no transform is center.\n      case 'center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center right':\n         vector[0] = -width;\n         vector[1] = -height * 0.5;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height * 0.5;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom left':\n         vector[0] = 0;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom right':\n         vector[0] = -width;\n         vector[1] = -height;\n         mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height;\n         mat4.fromTranslation(output[1], vector);\n         break;\n\n      // No valid transform origin parameter; set identity.\n      default:\n         mat4.identity(output[0]);\n         mat4.identity(output[1]);\n         break;\n   }\n\n   return output;\n}\n","import { writable }        from 'svelte/store';\n\nimport { TransformData }   from '../transform/TransformData.js';\nimport { PositionData }    from '../PositionData.js';\n\nexport class UpdateElementData\n{\n   constructor()\n   {\n      /**\n       * Stores the private data from Position.\n       *\n       * @type {PositionData}\n       */\n      this.data = void 0;\n\n      /**\n       * Provides a copy of local data sent to subscribers.\n       *\n       * @type {PositionData}\n       */\n      this.dataSubscribers = new PositionData();\n\n      /**\n       * Stores the current dimension data used for the readable `dimension` store.\n       *\n       * @type {{width: number | 'auto', height: number | 'auto'}}\n       */\n      this.dimensionData = { width: 0, height: 0 };\n\n      /**\n       * @type {PositionChangeSet}\n       */\n      this.changeSet = void 0;\n\n      /**\n       * @type {PositionOptions}\n       */\n      this.options = void 0;\n\n      /**\n       * Stores if this Position / update data is queued for update.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      /**\n       * @type {StyleCache}\n       */\n      this.styleCache = void 0;\n\n      /**\n       * @type {Transforms}\n       */\n      this.transforms = void 0;\n\n      /**\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\n       * subscribers to the store or calculateTransform options is true.\n       *\n       * @type {TransformData}\n       */\n      this.transformData = new TransformData();\n\n      /**\n       * @type {(function(PositionData): void)[]}\n       */\n      this.subscriptions = void 0;\n\n      /**\n       * @type {Writable<{width: (number|\"auto\"), height: (number|\"auto\")}>}\n       */\n      this.storeDimension = writable(this.dimensionData);\n\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n\n      /**\n       * @type {Writable<TransformData>}\n       */\n      this.storeTransform = writable(this.transformData, () =>\n      {\n         this.options.transformSubscribed = true;\n         return () => this.options.transformSubscribed = false;\n      });\n\n      /**\n       * Stores the queued state for update element processing.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      // Seal data backing readable stores.\n      Object.seal(this.dimensionData);\n   }\n}\n","import { isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\n\n/**\n * Svelte doesn't provide any events for the animate directive.\n *\n * The provided function below wraps a Svelte animate directive function generating bubbling events for start & end of\n * animation.\n *\n * These events are `animate:start` and `animate:end`.\n *\n * This is useful for instance if you are animating several nodes in a scrollable container where the overflow parameter\n * needs to be set to `none` while animating such that the scrollbar is not activated by the animation.\n *\n * Optionally you may also provide a boolean writable store that will be set to true when animation is active. In some\n * cases this leads to an easier implementation for gating on animation state.\n *\n * @example <caption>With events</caption>\n * const flipWithEvents = animateEvents(flip);\n * </script>\n *\n * <main on:animate:start={() => console.log('animate:start')\n *       on:animate:end={() => console.log('animate:end')}>\n *    {#each someData as entry (entry.id)}\n *       <section animate:flipWithEvents />\n *    {/each}\n\n * @example <caption>With optional store</caption>\n * const isAnimating = writable(false);\n * const flipWithEvents = animateEvents(flip, isAnimating);\n * </script>\n *\n * <main class:no-scroll={$isAnimating}>\n *    {#each someData as entry (entry.id)}\n *       <section animate:flipWithEvents />\n *    {/each}\n *\n * @param {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) =>\n *  import('svelte/animate').AnimationConfig} fn - A Svelte animation function.\n *\n * @param {import('svelte/store').Writable<boolean>} [store] - An optional boolean writable store that is set to true\n *                                                             when animation is active.\n *\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: *) =>\n *  import('svelte/animate').AnimationConfig} Wrapped animation function.\n */\nfunction animateEvents(fn, store = void 0)\n{\n   if (typeof fn !== 'function') { throw new TypeError(`'fn' is not a function.`); }\n   if (store !== void 0 && !isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\n\n   // Track a single start / end sequence across all animations.\n   let startFired = false;\n   let endFired = false;\n\n   return (node, animations, params = {}) =>\n   {\n      const animationConfig = fn(node, animations, params);\n\n      // Store any existing tick function.\n      const existingTick = animationConfig.tick;\n\n      // Use tick callback to fire events only once when t / time is 0 and 1.\n      animationConfig.tick = (t, u) =>\n      {\n         // If there is any tick function then invoke it.\n         if (existingTick) { existingTick(t, u); }\n\n         if (!startFired && t === 0)\n         {\n            if (store) { store.set(true); }\n            node.dispatchEvent(new CustomEvent('animate:start', { bubbles: true }));\n            startFired = true;\n            endFired = false;\n         }\n\n         if (!endFired && t === 1)\n         {\n            if (store) { store.set(false); }\n            node.dispatchEvent(new CustomEvent('animate:end', { bubbles: true }));\n            endFired = true;\n            startFired = false;\n         }\n      };\n\n      return animationConfig;\n   }\n}\n\n/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime = performance.now();\n   for (;--cntr >= 0;)\n   {\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\n   }\n\n   return currentTime;\n}\n\nexport { animateEvents, nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","import { nextAnimationFrame }    from '@typhonjs-fvtt/runtime/svelte/animate';\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n */\nexport class UpdateElementManager\n{\n   static list = [];\n   static listCntr = 0;\n\n   static updatePromise;\n\n   static get promise() { return this.updatePromise; }\n\n   /**\n    * Potentially adds the given element and internal updateData instance to the list.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\n    *\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\n    */\n   static add(el, updateData)\n   {\n      if (this.listCntr < this.list.length)\n      {\n         const entry = this.list[this.listCntr];\n         entry[0] = el;\n         entry[1] = updateData;\n      }\n      else\n      {\n         this.list.push([el, updateData]);\n      }\n\n      this.listCntr++;\n      updateData.queued = true;\n\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\n\n      return this.updatePromise;\n   }\n\n   /**\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n    *\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\n    */\n   static async wait()\n   {\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.updatePromise = void 0;\n\n      for (let cntr = this.listCntr; --cntr >= 0;)\n      {\n         // Obtain data for entry.\n         const entry = this.list[cntr];\n         const el = entry[0];\n         const updateData = entry[1];\n\n         // Clear entry data.\n         entry[0] = void 0;\n         entry[1] = void 0;\n\n         // Reset queued state.\n         updateData.queued = false;\n\n         // Early out if the element is no longer connected to the DOM / shadow root.\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n         if (!el.isConnected) { continue; }\n\n         if (updateData.options.ortho)\n         {\n            s_UPDATE_ELEMENT_ORTHO(el, updateData);\n         }\n         else\n         {\n            s_UPDATE_ELEMENT(el, updateData);\n         }\n\n         // If calculate transform options is enabled then update the transform data and set the readable store.\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n         {\n            s_UPDATE_TRANSFORM(el, updateData);\n         }\n\n         // Update all subscribers with changed data.\n         this.updateSubscribers(updateData);\n      }\n\n      this.listCntr = 0;\n\n      return currentTime;\n   }\n\n   /**\n    * Potentially immediately updates the given element.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {UpdateElementData} updateData - An UpdateElementData instance.\n    */\n   static immediate(el, updateData)\n   {\n      // Early out if the element is no longer connected to the DOM / shadow root.\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n      if (!el.isConnected) { return; }\n\n      if (updateData.options.ortho)\n      {\n         s_UPDATE_ELEMENT_ORTHO(el, updateData);\n      }\n      else\n      {\n         s_UPDATE_ELEMENT(el, updateData);\n      }\n\n      // If calculate transform options is enabled then update the transform data and set the readable store.\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n      {\n         s_UPDATE_TRANSFORM(el, updateData);\n      }\n\n      // Update all subscribers with changed data.\n      this.updateSubscribers(updateData);\n   }\n\n   /**\n    * @param {UpdateElementData} updateData - Data change set.\n    */\n   static updateSubscribers(updateData)\n   {\n      const data = updateData.data;\n      const changeSet = updateData.changeSet;\n\n      if (!changeSet.hasChange()) { return; }\n\n      // Make a copy of the data.\n      const output = updateData.dataSubscribers.copy(data);\n\n      const subscriptions = updateData.subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](output); }\n      }\n\n      // Update dimension data if width / height has changed.\n      if (changeSet.width || changeSet.height)\n      {\n         updateData.dimensionData.width = data.width;\n         updateData.dimensionData.height = data.height;\n         updateData.storeDimension.set(updateData.dimensionData);\n      }\n\n      changeSet.set(false);\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.left)\n   {\n      el.style.left = `${data.left}px`;\n   }\n\n   if (changeSet.top)\n   {\n      el.style.top = `${data.top}px`;\n   }\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      // When set to 'center' we can simply set the transform to null which is center by default.\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n * element are in sync with the browser and potentially in the future be further throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT_ORTHO(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      // When set to 'center' we can simply set the transform to null which is center by default.\n      el.style.transformOrigin = data.transformOrigin === 'center' ? null : data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.left || changeSet.top || changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.getCSSOrtho(data);\n   }\n}\n\n/**\n * Updates the applied transform data and sets the readble `transform` store.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {UpdateElementData} updateData - Update element data.\n */\nfunction s_UPDATE_TRANSFORM(el, updateData)\n{\n   s_VALIDATION_DATA.height = updateData.data.height !== 'auto' ? updateData.data.height :\n    updateData.styleCache.offsetHeight;\n\n   s_VALIDATION_DATA.width = updateData.data.width !== 'auto' ? updateData.data.width :\n    updateData.styleCache.offsetWidth;\n\n   s_VALIDATION_DATA.marginLeft = updateData.styleCache.marginLeft;\n\n   s_VALIDATION_DATA.marginTop = updateData.styleCache.marginTop;\n\n   // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n   // when position width / height is 'auto'.\n   updateData.transforms.getData(updateData.data, updateData.transformData, s_VALIDATION_DATA);\n\n   updateData.storeTransform.set(updateData.transformData);\n}\n\nconst s_VALIDATION_DATA = {\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0\n};\n","import {\n   propertyStore,\n   subscribeIgnoreFirst }        from '@typhonjs-fvtt/runtime/svelte/store';\n\nimport {\n   isIterable,\n   isObject,\n   isPlainObject }               from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AnimationAPI }          from './animation/AnimationAPI.js';\nimport { AnimationGroupAPI }     from './animation/AnimationGroupAPI.js';\nimport * as constants            from './constants.js';\nimport { convertRelative }       from './convertRelative.js';\nimport * as positionInitial      from './initial/index.js';\nimport { PositionChangeSet }     from './PositionChangeSet.js';\nimport { PositionData }          from './PositionData.js';\nimport { PositionStateAPI }      from './PositionStateAPI.js';\nimport { StyleCache }            from './StyleCache.js';\nimport { TransformData }         from './transform/TransformData.js';\nimport { AdapterValidators }     from './validators/AdapterValidators.js';\nimport * as positionValidators   from './validators/index.js';\nimport { Transforms }            from './transform/Transforms.js';\nimport { UpdateElementData }     from './update/UpdateElementData.js';\nimport { UpdateElementManager }  from './update/UpdateElementManager.js';\n\n/**\n * Provides a store for position following the subscriber protocol in addition to providing individual writable derived\n * stores for each independent variable.\n */\nexport class Position\n{\n   /**\n    * @type {PositionData}\n    */\n   #data = new PositionData();\n\n   /**\n    * Provides the animation API.\n    *\n    * @type {AnimationAPI}\n    */\n   #animate = new AnimationAPI(this, this.#data);\n\n   /**\n    * Stores the style attributes that changed on update.\n    *\n    * @type {PositionChangeSet}\n    */\n   #positionChangeSet = new PositionChangeSet();\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    *\n    * @type {PositionOptions}\n    */\n   #options = {\n      calculateTransform: false,\n      initialHelper: void 0,\n      ortho: true,\n      transformSubscribed: false\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {PositionParent}\n    */\n   #parent;\n\n   /**\n    * @type {StorePosition}\n    */\n   #stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    *\n    * @type {StyleCache}\n    */\n   #styleCache;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(PositionData): void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {Transforms}\n    */\n   #transforms = new Transforms();\n\n   /**\n    * @type {UpdateElementData}\n    */\n   #updateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    *\n    * @type {Promise}\n    */\n   #updateElementPromise;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {PositionStateAPI}\n    */\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns {AnimationGroupAPI} Public Animation API.\n    */\n   static get Animate() { return AnimationGroupAPI; }\n\n   /**\n    * @returns {{browserCentered?: Centered, Centered?: *}} Initial position helpers.\n    */\n   static get Initial() { return positionInitial; }\n\n   /**\n    * Returns TransformData class / constructor.\n    *\n    * @returns {TransformData} TransformData class / constructor.\n    */\n   static get TransformData() { return TransformData; }\n\n   /**\n    * Returns default validators.\n    *\n    * Note: `basicWindow` and `BasicBounds` will eventually be removed.\n    *\n    * @returns {{basicWindow?: BasicBounds, transformWindow?: TransformBounds, TransformBounds?: *, BasicBounds?: *}}\n    *  Available validators.\n    */\n   static get Validators() { return positionValidators; }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators.\n    *\n    * // TODO: Consider more safety over options processing.\n    *\n    * @param {Position}          position - A position instance.\n    *\n    * @param {PositionOptions}   options - Position options.\n    *\n    * @returns {Position} A duplicate position instance.\n    */\n   static duplicate(position, options)\n   {\n      if (!(position instanceof Position)) { throw new TypeError(`'position' is not an instance of Position.`); }\n\n      const newPosition = new Position(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param {PositionParent|PositionOptionsAll}   [parent] - A potential parent element or object w/ `elementTarget`\n    *                                                      getter. May also be the PositionOptions object w/ 1 argument.\n    *\n    * @param {PositionOptionsAll}   [options] - Default values.\n    */\n   constructor(parent, options)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parent))\n      {\n         options = parent;\n      }\n      else\n      {\n         this.#parent = parent;\n      }\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      this.#styleCache = new StyleCache();\n\n      const updateData = new UpdateElementData();\n\n      updateData.changeSet = this.#positionChangeSet;\n      updateData.data = this.#data;\n      updateData.options = this.#options;\n      updateData.styleCache = this.#styleCache;\n      updateData.subscriptions = this.#subscriptions;\n      updateData.transforms = this.#transforms;\n\n      this.#updateElementData = updateData;\n\n      if (typeof options === 'object')\n      {\n         // Set Position options\n         if (typeof options.calculateTransform === 'boolean')\n         {\n            this.#options.calculateTransform = options.calculateTransform;\n         }\n\n         if (typeof options.ortho === 'boolean')\n         {\n            this.#options.ortho = options.ortho;\n         }\n\n         // Set default values from options.\n\n         if (Number.isFinite(options.height) || options.height === 'auto' || options.height === 'inherit' ||\n          options.height === null)\n         {\n            data.height = updateData.dimensionData.height = typeof options.height === 'number' ?\n             Math.round(options.height) : options.height;\n         }\n\n         if (Number.isFinite(options.left) || options.left === null)\n         {\n            data.left = typeof options.left === 'number' ? Math.round(options.left) : options.left;\n         }\n\n         if (Number.isFinite(options.maxHeight) || options.maxHeight === null)\n         {\n            data.maxHeight = typeof options.maxHeight === 'number' ? Math.round(options.maxHeight) : options.maxHeight;\n         }\n\n         if (Number.isFinite(options.maxWidth) || options.maxWidth === null)\n         {\n            data.maxWidth = typeof options.maxWidth === 'number' ? Math.round(options.maxWidth) : options.maxWidth;\n         }\n\n         if (Number.isFinite(options.minHeight) || options.minHeight === null)\n         {\n            data.minHeight = typeof options.minHeight === 'number' ? Math.round(options.minHeight) : options.minHeight;\n         }\n\n         if (Number.isFinite(options.minWidth) || options.minWidth === null)\n         {\n            data.minWidth = typeof options.minWidth === 'number' ? Math.round(options.minWidth) : options.minWidth;\n         }\n\n         if (Number.isFinite(options.rotateX) || options.rotateX === null)\n         {\n            transforms.rotateX = data.rotateX = options.rotateX;\n         }\n\n         if (Number.isFinite(options.rotateY) || options.rotateY === null)\n         {\n            transforms.rotateY = data.rotateY = options.rotateY;\n         }\n\n         if (Number.isFinite(options.rotateZ) || options.rotateZ === null)\n         {\n            transforms.rotateZ = data.rotateZ = options.rotateZ;\n         }\n\n         if (Number.isFinite(options.scale) || options.scale === null)\n         {\n            transforms.scale = data.scale = options.scale;\n         }\n\n         if (Number.isFinite(options.top) || options.top === null)\n         {\n            data.top = typeof options.top === 'number' ? Math.round(options.top) : options.top;\n         }\n\n         if (typeof options.transformOrigin === 'string' || options.transformOrigin === null)\n         {\n            data.transformOrigin = constants.transformOrigins.includes(options.transformOrigin) ?\n             options.transformOrigin : null;\n         }\n\n         if (Number.isFinite(options.translateX) || options.translateX === null)\n         {\n            transforms.translateX = data.translateX = options.translateX;\n         }\n\n         if (Number.isFinite(options.translateY) || options.translateY === null)\n         {\n            transforms.translateY = data.translateY = options.translateY;\n         }\n\n         if (Number.isFinite(options.translateZ) || options.translateZ === null)\n         {\n            transforms.translateZ = data.translateZ = options.translateZ;\n         }\n\n         if (Number.isFinite(options.width) || options.width === 'auto' || options.width === 'inherit' ||\n          options.width === null)\n         {\n            data.width = updateData.dimensionData.width = typeof options.width === 'number' ?\n             Math.round(options.width) : options.width;\n         }\n\n         if (Number.isFinite(options.zIndex) || options.zIndex === null)\n         {\n            data.zIndex = typeof options.zIndex === 'number' ? Math.round(options.zIndex) : options.zIndex;\n         }\n      }\n\n      this.#stores = {\n         // The main properties for manipulating Position.\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         translateX: propertyStore(this, 'translateX'),\n         translateY: propertyStore(this, 'translateY'),\n         translateZ: propertyStore(this, 'translateZ'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore(this, 'maxHeight'),\n         maxWidth: propertyStore(this, 'maxWidth'),\n         minHeight: propertyStore(this, 'minHeight'),\n         minWidth: propertyStore(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      };\n\n      // When resize change from any applied resizeObserver action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\n      {\n         const parent = this.#parent;\n         const el = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (el instanceof HTMLElement && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set(data);\n         }\n      });\n\n      this.#stores.transformOrigin.values = constants.transformOrigins;\n\n      [this.#validators, this.#validatorData] = new AdapterValidators();\n\n      if (options?.initial || options?.positionInitial)\n      {\n         const initialHelper = options.initial ?? options.positionInitial;\n\n         if (typeof initialHelper?.getLeft !== 'function' || typeof initialHelper?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initialHelper = options.initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator)) { this.validators.add(...options.validator); }\n         else { this.validators.add(options.validator); }\n      }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns {AnimationAPI} Animation API.\n    */\n   get animate()\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns {{width: number | 'auto', height: number | 'auto'}} Dimension data.\n    */\n   get dimension()\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns {HTMLElement|undefined} Current HTMLElement being positioned.\n    */\n   get element()\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link PositionParent} instance.\n    *\n    * @returns {PositionParent} The PositionParent instance.\n    */\n   get parent() { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns {PositionStateAPI} Position state API.\n    */\n   get state() { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {StorePosition} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns {TransformData} Transform Data.\n    */\n   get transform()\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {AdapterValidators} validators.\n    */\n   get validators() { return this.#validators; }\n\n   /**\n    * Sets the associated {@link PositionParent} instance. Resets the style cache and default data.\n    *\n    * @param {PositionParent|void} parent - A PositionParent instance.\n    */\n   set parent(parent)\n   {\n      if (parent !== void 0 && !(parent instanceof HTMLElement) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number|null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number|null} maxHeight\n    */\n   get maxHeight() { return this.#data.maxHeight; }\n\n   /**\n    * @returns {number|null} maxWidth\n    */\n   get maxWidth() { return this.#data.maxWidth; }\n\n   /**\n    * @returns {number|null} minHeight\n    */\n   get minHeight() { return this.#data.minHeight; }\n\n   /**\n    * @returns {number|null} minWidth\n    */\n   get minWidth() { return this.#data.minWidth; }\n\n   /**\n    * @returns {number|null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} alias for rotateZ\n    */\n   get rotation() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {string} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number|null} translateX\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number|null} translateY\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number|null} translateZ\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number|null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number|string|null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number|string|null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number|string|null} maxHeight -\n    */\n   set maxHeight(maxHeight)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param {number|string|null} maxWidth -\n    */\n   set maxWidth(maxWidth)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param {number|string|null} minHeight -\n    */\n   set minHeight(minHeight)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param {number|string|null} minWidth -\n    */\n   set minWidth(minWidth)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param {number|string|null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number|string|null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number|string|null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {string} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (constants.transformOrigins.includes(transformOrigin)) { this.#stores.transformOrigin.set(transformOrigin); }\n   }\n\n   /**\n    * @param {number|string|null} translateX -\n    */\n   set translateX(translateX)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param {number|string|null} translateY -\n    */\n   set translateY(translateY)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param {number|string|null} translateZ -\n    */\n   set translateZ(translateZ)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param {number|string|null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number|string|null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position to object passed into method.\n    *\n    * @param {object|PositionData}  [position] - Target to assign current position data.\n    *\n    * @param {PositionGetOptions}   [options] - Defines options for specific keys and substituting null for numeric\n    *                                           default values.\n    *\n    * @returns {PositionData} Passed in object with current position data.\n    */\n   get(position = {}, options)\n   {\n      const keys = options?.keys;\n      const excludeKeys = options?.exclude;\n      const numeric = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         // Replace any null values potentially with numeric default values.\n         if (numeric)\n         {\n            for (const key of keys) { position[key] = this[key] ?? constants.numericDefaults[key]; }\n         }\n         else // Accept current values.\n         {\n            for (const key of keys) { position[key] = this[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete position[key]; }\n         }\n\n         return position;\n      }\n      else\n      {\n         const data = Object.assign(position, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { constants.setNumericDefaults(data); }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns {PositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * Note: the logic for updating position is improved and changes a few aspects from the default\n    * {@link Application.setPosition}. The gate on `popOut` is removed, so to ensure no positional application occurs\n    * popOut applications can set `this.options.positionable` to false ensuring no positional inline styles are\n    * applied.\n    *\n    * The initial set call on an application with a target element will always set width / height as this is\n    * necessary for correct calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them from the application via\n    * `this.position.validators.add(<Function>)`.\n    *\n    * Updates to any target element are decoupled from the underlying Position data. This method returns this instance\n    * that you can then await on the target element inline style update by using {@link Position.elementUpdated}.\n    *\n    * @param {PositionDataExtended} [position] - Position data to set.\n    *\n    * @returns {Position} This Position instance.\n    */\n   set(position = {})\n   {\n      if (typeof position !== 'object') { throw new TypeError(`Position - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      // Callers can specify to immediately update an associated element. This is useful if set is called from\n      // requestAnimationFrame / rAF. Library integrations like GSAP invoke set from rAF.\n      const immediateElementUpdate = position.immediateElementUpdate === true;\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      const changeSet = this.#positionChangeSet;\n      const styleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            {\n               el.style.willChange = this.#options.ortho ? 'transform' : 'top, left, transform';\n            }\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any relative string position data to numeric inputs.\n         convertRelative(position, this);\n\n         position = this.#updatePosition(position, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (Number.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (Number.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.scale) || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? Math.max(0, Math.min(position.scale, 1000)) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && constants.transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateX) || position.translateX === null)\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateY) || position.translateY === null)\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      if (Number.isFinite(position.width) || position.width === 'auto' || position.width === 'inherit' ||\n       position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width) { data.width = position.width; changeSet.width = true; }\n      }\n\n      if (Number.isFinite(position.height) || position.height === 'auto' || position.height === 'inherit' ||\n       position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\n      }\n\n      if (el)\n      {\n         const defaultData = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (typeof defaultData !== 'object')\n         {\n            this.#state.save({ name: '#defaultData', ...Object.assign({}, data) });\n         }\n\n         // If `immediateElementUpdate` is true in position data passed to `set` then update the element immediately.\n         // This is for rAF based library integrations like GSAP.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    *\n    * @param {function(PositionData): void} handler - Callback function that is invoked on update / changes. Receives\n    *                                                 a copy of the PositionData.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * @param {PositionDataExtended} opts -\n    *\n    * @param {number|null} opts.left -\n    *\n    * @param {number|null} opts.top -\n    *\n    * @param {number|null} opts.maxHeight -\n    *\n    * @param {number|null} opts.maxWidth -\n    *\n    * @param {number|null} opts.minHeight -\n    *\n    * @param {number|null} opts.minWidth -\n    *\n    * @param {number|'auto'|null} opts.width -\n    *\n    * @param {number|'auto'|null} opts.height -\n    *\n    * @param {number|null} opts.rotateX -\n    *\n    * @param {number|null} opts.rotateY -\n    *\n    * @param {number|null} opts.rotateZ -\n    *\n    * @param {number|null} opts.scale -\n    *\n    * @param {string} opts.transformOrigin -\n    *\n    * @param {number|null} opts.translateX -\n    *\n    * @param {number|null} opts.translateY -\n    *\n    * @param {number|null} opts.translateZ -\n    *\n    * @param {number|null} opts.zIndex -\n    *\n    * @param {number|null} opts.rotation - alias for rotateZ\n    *\n    * @param {*} opts.rest -\n    *\n    * @param {object} parent -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {StyleCache} styleCache -\n    *\n    * @returns {null|PositionData} Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   } = {}, parent, el, styleCache)\n   {\n      let currentPosition = s_DATA_UPDATE.copy(this.#data);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (el.style.width === '' || width !== void 0)\n      {\n         if (width === 'auto' || (currentPosition.width === 'auto' && width !== null))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && width !== null))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (el.style.height === '' || height !== void 0)\n      {\n         if (height === 'auto' || (currentPosition.height === 'auto' && height !== null))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && height !== null))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (Number.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options.initialHelper?.getLeft === 'function' ?\n          this.#options.initialHelper.getLeft(width) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options.initialHelper?.getTop === 'function' ?\n          this.#options.initialHelper.getTop(height) : 0;\n      }\n\n      if (Number.isFinite(maxHeight) || maxHeight === null)\n      {\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (Number.isFinite(maxWidth) || maxWidth === null)\n      {\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (Number.isFinite(minHeight) || minHeight === null)\n      {\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (Number.isFinite(minWidth) || minWidth === null)\n      {\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\n\n      if (Number.isFinite(scale) || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? Math.max(0, Math.min(scale, 1000)) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = constants.transformOrigins.includes(transformOrigin) ? transformOrigin :\n          null;\n      }\n\n      if (Number.isFinite(zIndex) || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (validatorData.length)\n      {\n         s_VALIDATION_DATA.parent = parent;\n\n         s_VALIDATION_DATA.el = el;\n\n         s_VALIDATION_DATA.computed = styleCache.computed;\n\n         s_VALIDATION_DATA.transforms = this.#transforms;\n\n         s_VALIDATION_DATA.height = height;\n\n         s_VALIDATION_DATA.width = width;\n\n         s_VALIDATION_DATA.marginLeft = styleCache.marginLeft;\n\n         s_VALIDATION_DATA.marginTop = styleCache.marginTop;\n\n         s_VALIDATION_DATA.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         s_VALIDATION_DATA.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         const isMinimized = parent?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         s_VALIDATION_DATA.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         s_VALIDATION_DATA.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\n         {\n            s_VALIDATION_DATA.position = currentPosition;\n            s_VALIDATION_DATA.rest = rest;\n            currentPosition = validatorData[cntr].validator(s_VALIDATION_DATA);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nconst s_DATA_UPDATE = new PositionData();\n\n/**\n * @type {ValidationData}\n */\nconst s_VALIDATION_DATA = {\n   position: void 0,\n   parent: void 0,\n   el: void 0,\n   computed: void 0,\n   transforms: void 0,\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0,\n   maxHeight: void 0,\n   maxWidth: void 0,\n   minHeight: void 0,\n   minWidth: void 0,\n   rest: void 0\n};\n\nObject.seal(s_VALIDATION_DATA);\n\n/**\n * @typedef {object} InitialHelper\n *\n * @property {Function} getLeft - A function that takes the width parameter and returns the left position.\n *\n * @property {Function} getTop - A function that takes the height parameter and returns the top position.\n */\n\n/**\n * @typedef {object} PositionDataExtended\n *\n * @property {number|string|null} [height] -\n *\n * @property {number|string|null} [left] -\n *\n * @property {number|string|null} [maxHeight] -\n *\n * @property {number|string|null} [maxWidth] -\n *\n * @property {number|string|null} [minHeight] -\n *\n * @property {number|string|null} [minWidth] -\n *\n * @property {number|string|null} [rotateX] -\n *\n * @property {number|string|null} [rotateY] -\n *\n * @property {number|string|null} [rotateZ] -\n *\n * @property {number|string|null} [scale] -\n *\n * @property {number|string|null} [top] -\n *\n * @property {string|null} [transformOrigin] -\n *\n * @property {number|string|null} [translateX] -\n *\n * @property {number|string|null} [translateY] -\n *\n * @property {number|string|null} [translateZ] -\n *\n * @property {number|string|null} [width] -\n *\n * @property {number|string|null} [zIndex] -\n *\n * Extended properties -----------------------------------------------------------------------------------------------\n *\n * @property {boolean} [immediateElementUpdate] - When true any associated element is updated immediately.\n *\n * @property {number|null} [rotation] - Alias for `rotateZ`.\n */\n\n/**\n * @typedef {object} PositionGetOptions\n *\n * @property {Iterable<string>} keys - When provided only these keys are copied.\n *\n * @property {Iterable<string>} exclude - When provided these keys are excluded.\n *\n * @property {boolean} numeric - When true any `null` values are converted into defaults.\n */\n\n/**\n * @typedef {object} PositionOptions - Options set in constructor.\n *\n * @property {boolean} calculateTransform - When true always calculate transform data.\n *\n * @property {InitialHelper} initialHelper - Provides a helper for setting initial position data.\n *\n * @property {boolean} ortho - Sets Position to orthographic mode using just transform / matrix3d for positioning.\n *\n * @property {boolean} transformSubscribed - Set to true when there are subscribers to the readable transform store.\n */\n\n/**\n * @typedef {PositionOptions & PositionData} PositionOptionsAll\n */\n\n/**\n * @typedef {HTMLElement | object} PositionParent\n *\n * @property {Function} [elementTarget] - Potentially returns any parent object.\n */\n\n/**\n * @typedef {object} ResizeObserverData\n *\n * @property {number|undefined} contentHeight -\n *\n * @property {number|undefined} contentWidth -\n *\n * @property {number|undefined} offsetHeight -\n *\n * @property {number|undefined} offsetWidth -\n */\n\n/**\n * @typedef {object} StorePosition - Provides individual writable stores for {@link Position}.\n *\n * @property {import('svelte/store').Readable<{width: number, height: number}>} dimension - Readable store for dimension\n *                                                                                          data.\n *\n * @property {import('svelte/store').Readable<HTMLElement>} element - Readable store for current element.\n *\n * @property {import('svelte/store').Writable<number|null>} left - Derived store for `left` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} top - Derived store for `top` updates.\n *\n * @property {import('svelte/store').Writable<number|'auto'|null>} width - Derived store for `width` updates.\n *\n * @property {import('svelte/store').Writable<number|'auto'|null>} height - Derived store for `height` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} maxHeight - Derived store for `maxHeight` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} maxWidth - Derived store for `maxWidth` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} minHeight - Derived store for `minHeight` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} minWidth - Derived store for `minWidth` updates.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentHeight - Readable store for `contentHeight`.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeContentWidth - Readable store for `contentWidth`.\n *\n * @property {import('svelte/store').Writable<ResizeObserverData>} resizeObserved - Protected store for resize observer updates.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetHeight - Readable store for `offsetHeight`.\n *\n * @property {import('svelte/store').Readable<number|undefined>} resizeOffsetWidth - Readable store for `offsetWidth`.\n *\n * @property {import('svelte/store').Writable<number|null>} rotate - Derived store for `rotate` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateX - Derived store for `rotateX` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateY - Derived store for `rotateY` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} rotateZ - Derived store for `rotateZ` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} scale - Derived store for `scale` updates.\n *\n * @property {import('svelte/store').Readable<TransformData>} transform - Readable store for transform data.\n *\n * @property {import('svelte/store').Writable<string>} transformOrigin - Derived store for `transformOrigin`.\n *\n * @property {import('svelte/store').Writable<number|null>} translateX - Derived store for `translateX` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} translateY - Derived store for `translateY` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} translateZ - Derived store for `translateZ` updates.\n *\n * @property {import('svelte/store').Writable<number|null>} zIndex - Derived store for `zIndex` updates.\n */\n\n/**\n * @typedef {object} ValidationData\n *\n * @property {PositionData} position -\n *\n * @property {PositionParent} parent -\n *\n * @property {HTMLElement} el -\n *\n * @property {CSSStyleDeclaration} computed -\n *\n * @property {Transforms} transforms -\n *\n * @property {number} height -\n *\n * @property {number} width -\n *\n * @property {number|undefined} marginLeft -\n *\n * @property {number|undefined} marginTop -\n *\n * @property {number|undefined} maxHeight -\n *\n * @property {number|undefined} maxWidth -\n *\n * @property {number|undefined} minHeight -\n *\n * @property {number|undefined} minWidth -\n *\n * @property {object} rest - The rest of any data submitted to {@link Position.set}\n */\n","import { linear }    from \"svelte/easing\";\nimport { lerp }      from '@typhonjs-fvtt/runtime/svelte/math';\nimport { isObject }  from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class ApplicationState\n{\n   /** @type {ApplicationShellExt} */\n   #application;\n\n   /** @type {Map<string, ApplicationData>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {ApplicationShellExt}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {ApplicationData} Passed in object with current application state.\n    */\n   get(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: Object.assign({}, this.#application?.options),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {ApplicationData} The saved data set.\n    */\n   getSave({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - getSave error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Removes and returns any application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {ApplicationData} Saved application data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationData|Promise<ApplicationData>} Saved application data.\n    */\n   restore({ name, remove = false, async = false, animateTo = false, duration = 0.1, ease = linear,\n    interpolate = lerp })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         if (async)\n         {\n            return this.set(dataSaved, { async, animateTo, duration, ease, interpolate }).then(() => dataSaved);\n         }\n         else\n         {\n            this.set(dataSaved, { async, animateTo, duration, ease, interpolate });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\n    *\n    * @returns {ApplicationData} Current application data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {ApplicationData}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=linear] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationShellExt|Promise<ApplicationShellExt>} When synchronous the application or Promise when\n    *                                                             animating resolving with application.\n    */\n   set(data, { async = false, animateTo = false, duration = 0.1, ease = linear, interpolate = lerp } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\n         return application;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      if (animateTo && !rendered)\n      {\n         console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\n         return application;\n      }\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position,\n          { duration, ease, interpolate }).finished.then((cancelled) =>\n         {\n            if (cancelled) { return application; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            return application;\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n\n      return application;\n   }\n}\n\n/**\n * @typedef {object} ApplicationData\n *\n * @property {PositionDataExtended}   position - Application position.\n *\n * @property {object}         beforeMinimized - Any application saved position state for #beforeMinimized\n *\n * @property {object}         options - Application options.\n *\n * @property {object}         ui - Application UI state.\n */\n","/**\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\n */\nexport class GetSvelteData\n{\n   /**\n    * @type {MountedAppShell[]|null[]}\n    */\n   #applicationShellHolder;\n\n   /**\n    * @type {SvelteData[]}\n    */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {MountedAppShell[]|null[]}  applicationShellHolder - A reference to the MountedAppShell array.\n    *\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {MountedAppShell|null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return typeof data === 'object' ? data?.component : void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {Generator<Array<number|SvelteComponent>>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {Generator<SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index -\n    *\n    * @returns {SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {object} component - Svelte component.\n    *\n    * @returns {SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n","import {\n   isApplicationShell,\n   parseSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            opts - Optional parameters.\n *\n * @param {object}            opts.app - The target application\n *\n * @param {HTMLElement}       opts.template - Any HTML template.\n *\n * @param {object}            opts.config - Svelte component options\n *\n * @param {Function}          opts.elementRootUpdate - A callback to assign to the external context.\n *\n * @returns {SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig({ app, template, config, elementRootUpdate } = {})\n{\n   const svelteOptions = typeof config.options === 'object' ? config.options : {};\n\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (config.target instanceof HTMLElement)\n   {\n      target = config.target;\n   }\n   // A string target defines a selector to find in existing HTML.\n   else if (template instanceof HTMLElement && typeof config.target === 'string')\n   {\n      target = template.querySelector(config.target);\n   }\n   else                                            // No target defined, create a document fragment.\n   {\n      target = document.createDocumentFragment();\n   }\n\n   if (target === void 0)\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - could not find target selector, '${config.target}', for config:\\n`,\n       'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (typeof app._eventbus === 'object' && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   // Detect if target is a synthesized DocumentFragment with a child element. Child elements will be present\n   // if the Svelte component mounts and renders initial content into the document fragment.\n   if (target instanceof DocumentFragment && target.firstElementChild)\n   {\n      if (element === void 0) { element = target.firstElementChild; }\n      template.append(target);\n   }\n   else if (config.target instanceof HTMLElement && element === void 0)\n   {\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with no 'selectorElement' defined.\\n` +\n          `\\nNote: If configuring an application shell and directly targeting a HTMLElement did you bind an` +\n          `'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n          `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\n      element = target.querySelector(svelteOptions.selectorElement);\n\n      if (element === null || element === void 0)\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with 'selectorElement', '${\n           svelteOptions.selectorElement}', not found for config:\\n`,\n          'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n   }\n\n   // If the configuration / original target is an HTML element then do not inject HTML.\n   const injectHTML = !(config.target instanceof HTMLElement);\n\n   return { config: svelteConfig, component, element, injectHTML };\n}\n","import { derived, writable }  from \"svelte/store\";\n\nimport {\n   propertyStore,\n   subscribeIgnoreFirst }     from '@typhonjs-fvtt/runtime/svelte/store';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication.\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {SvelteStores} Internal methods to interact with Svelte stores.\n    * @package\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiOptionsUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * @inheritDoc\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n   /**\n    * Returns the title accessor from the parent Application class.\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string|undefined|null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * ` storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    * `zIndex` controls the z-index style of the element root.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the Foundry app options `headerButtonNoClose` to remove the close button and\n    * `headerButtonNoLabel` to true and labels will be removed from the header buttons.\n    *\n    * @param {object} opts - Optional parameters (for internal use)\n    *\n    * @param {boolean} opts.headerButtonNoClose - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} opts.headerButtonNoLabel - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n}\n","// import { Position }           from '@typhonjs-fvtt/runtime/svelte/store';\nimport { Position }           from './position/Position.js';\n\nimport {\n   deepMerge,\n   hasGetter,\n   isApplicationShell,\n   isHMRProxy,\n   outroAndDestroy }          from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   SvelteReactive }           from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to Application to control the app lifecycle appropriately. You can declaratively\n * load one or more components from `defaultOptions`.\n */\nexport class SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {MountedAppShell[]|null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {Position}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * {@link SvelteData}.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {SvelteStores}\n    */\n   #stores;\n\n   /**\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize Position with the position object set by Application.\n      this.#position = new Position(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve Position by `this.position`.\n       *\n       * @member {Position} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (typeof position === 'object') { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: Position.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true Position is optimized for orthographic use.\n         positionValidator: Position.Validators.transformWindow, // A function providing the default validator.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {ApplicationState} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html : [this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core. This is important / used for instance in dialog key handling for left / right button selection.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    */\n   bringToTop({ force = false } = {})\n   {\n      if (force || this.popOut) { super.bringToTop(); }\n\n      // If the activeElement is not `document.body` and not contained in this app via elementTarget then blur the\n      // current active element and make `document.body`focused. This allows <esc> key to close all open apps / windows.\n      if (document.activeElement !== document.body && !this.elementTarget.contains(document.activeElement))\n      {\n         // Blur current active element.\n         if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\n\n         // Make document body focused.\n         document.body.focus();\n      }\n\n      ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    * @ignore\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      /**\n       * @ignore\n       */\n      this._state = states.CLOSING;\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el) { return this._state = states.CLOSED; }\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * @param {Application} app                     The Application instance being closed\n          *\n          * @param {jQuery[]} html                       The application HTML when it is closed\n          *\n          * @function closeApplication\n          *\n          * @memberof hookEvents\n          */\n         Hooks.call(`close${cls.name}`, this, el);\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (typeof eventbus === 'object' && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.all(svelteDestroyPromises);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n      /**\n       * @ignore\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n      delete ui.windows[this.appId];\n      /**\n       * @ignore\n       */\n      this._minimized = false;\n      /**\n       * @ignore\n       */\n      this._scrollPositions = null;\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store options.\n      this.#stores.uiOptionsUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @param {JQuery} html -\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _injectHTML(html)\n   {\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\n      {\n         throw new Error(\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\n      }\n\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      if (Array.isArray(this.options.svelte))\n      {\n         for (const svelteConfig of this.options.svelte)\n         {\n            const svelteData = loadSvelteConfig({\n               app: this,\n               template: html[0],\n               config: svelteConfig,\n               elementRootUpdate\n            });\n\n            if (isApplicationShell(svelteData.component))\n            {\n               if (this.svelte.applicationShell !== null)\n               {\n                  throw new Error(\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                    ${JSON.stringify(svelteConfig)}`);\n               }\n\n               this.#applicationShellHolder[0] = svelteData.component;\n\n               // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n               // refreshes. Update the element root accordingly and force an update to Position.\n               // See this issue for info about `on_hmr`:\n               // https://github.com/sveltejs/svelte-hmr/issues/57\n               if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n               {\n                  svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n               }\n            }\n\n            this.#svelteData.push(svelteData);\n         }\n      }\n      else if (typeof this.options.svelte === 'object')\n      {\n         const svelteData = loadSvelteConfig({\n            app: this,\n            template: html[0],\n            config: this.options.svelte,\n            elementRootUpdate\n         });\n\n         if (isApplicationShell(svelteData.component))\n         {\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\n            if (this.svelte.applicationShell !== null)\n            {\n               throw new Error(\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                 ${JSON.stringify(this.options.svelte)}`);\n            }\n\n            this.#applicationShellHolder[0] = svelteData.component;\n\n            // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n            // refreshes. Update the element root accordingly and force an update to Position.\n            // See this issue for info about `on_hmr`:\n            // https://github.com/sveltejs/svelte-hmr/issues/57\n            if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n            {\n               svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n            }\n         }\n\n         this.#svelteData.push(svelteData);\n      }\n\n      // Detect if this is a synthesized DocumentFragment.\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\n\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\n      let injectHTML = true;\n      for (const svelteData of this.#svelteData)\n      {\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\n      }\n      if (injectHTML) { super._injectHTML(html); }\n\n      if (this.svelte.applicationShell !== null)\n      {\n         this._element = $(this.svelte.applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n          this.svelte.applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n          this.svelte.applicationShell.elementTarget : null;\n      }\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\n      {\n         for (const svelteData of this.#svelteData)\n         {\n            if (svelteData.element instanceof HTMLElement)\n            {\n               this._element = $(svelteData.element);\n               break;\n            }\n         }\n      }\n\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\n      // main element.\n      if (this.#elementTarget === null)\n      {\n         const element = typeof this.options.selectorTarget === 'string' ?\n          this._element.find(this.options.selectorTarget) : this._element;\n\n         this.#elementTarget = element[0];\n      }\n\n      // TODO VERIFY THIS CHECK ESPECIALLY `this.#elementTarget.length === 0`.\n      if (this.#elementTarget === null || this.#elementTarget === void 0 || this.#elementTarget.length === 0)\n      {\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\n      }\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      element.classList.remove('minimized');\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteMount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteRemount({ element, elementContent, elementTarget } = {}) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link Position.set}.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   async _render(force = false, options = {})\n   {\n      if (this._state === Application.RENDER_STATES.NONE &&\n       document.querySelector(`#${this.id}`) instanceof HTMLElement)\n      {\n         console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n         }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      await super._render(force, options);\n\n      if (!this.#onMount)\n      {\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\n    * JQuery element per the core Foundry API.\n    *\n    * @param {Object} data         The data used to render the inner template\n    *\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\n    *\n    * @protected\n    * @ignore\n    */\n   async _renderInner(data)\n   {\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\n       document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @returns {Promise<JQuery>} Outer frame / unused.\n    * @protected\n    * @ignore\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position.set}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link Position.validators} functionality.\n    *\n    * @param {PositionDataExtended}   [position] - Position data.\n    *\n    * @returns {Position} The updated position object for the application containing the new values\n    */\n   setPosition(position)\n   {\n      return this.position.set(position);\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            const element = typeof this.options.selectorTarget === 'string' ?\n             this._element.find(this.options.selectorTarget) : this._element;\n\n            this.#elementTarget = element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.#elementTarget]);\n\n         this.onSvelteRemount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n      }\n   }\n}\n\n/**\n * @typedef {object} SvelteData\n *\n * @property {object}                           config -\n *\n * @property {import('svelte').SvelteComponent} component -\n *\n * @property {HTMLElement}                      element -\n *\n * @property {boolean}                          injectHTML -\n */\n\n/**\n * @typedef {object} SvelteStores\n *\n * @property {import('svelte/store').Writable.update} appOptionsUpdate - Update function for app options store.\n *\n * @property {Function} subscribe - Subscribes to local stores.\n *\n * @property {import('svelte/store').Writable.update} uiOptionsUpdate - Update function for UI options store.\n *\n * @property {Function} unsubscribe - Unsubscribes from local stores.\n */\n","<script>\n   export let warn = false;\n   export let children = void 0;\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if Array.isArray(children)}\n    {#each children as child}\n        <svelte:component this={child.class} {...child.props} />\n    {/each}\n{:else if warn}\n    <p>Container warning: No children.</p>\n{/if}\n\n<style>\n    p {\n        color: red;\n        font-size: 18px;\n    }\n</style>","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/svelte/math';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = options.easing ?? linear;\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\n *\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\n *\n * @param {Function}    [options.easingRotate=linear] - The easing function to apply to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = options.easingFade || options.easing || linear;\n   const easingRotate = options.easingRotate || options.easing || linear;\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      options - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {Function}    [options.easing=linear] - The easing function to apply to both slide & fade transitions.\n *\n * @param {Function}    [options.easingFade=linear] - The easing function to apply to the fade transition.\n *\n * @param {Function}    [options.easingSlide=linear] - The easing function to apply to the slide transition.\n *\n * @returns {{duration: number, css: (function(*=): string), delay: number, easing: (x: number) => number}}\n *  Transition object.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = options.easingFade || options.easing || linear;\n   const slideEasing = options.easingSlide || options.easing || linear;\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node);\n\n   return {\n      delay: options.delay || 0,\n      duration: options.duration || 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, params?: object) => import('svelte/transition').TransitionConfig} fn - A Svelte transition\n *                                                                                                function.\n *\n * @returns {(node: Element, { from: DOMRect, to: DOMRect }, params?: object) =>\n *  import('svelte/transition').TransitionConfig} Transition function converted to an animation.\n */\nfunction toAnimation(fn) {\n   return (node, animations, params = {}) => fn(node, params);\n}\n\nconst s_DEFAULT_TRANSITION = () => void 0;\nconst s_DEFAULT_TRANSITION_OPTIONS = {};\n\nexport { rotate, rotateFade, s_DEFAULT_TRANSITION, s_DEFAULT_TRANSITION_OPTIONS, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","import { isUpdatableStore, isWritableStore } from '@typhonjs-fvtt/runtime/svelte/store';\nimport { styleParsePixels, debounce, hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { cubicOut } from 'svelte/easing';\n\n/**\n * Provides an action to always blur the element when any pointer up event occurs on the element.\n *\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\n */\nfunction alwaysBlur(node)\n{\n   function blur()\n   {\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\n   }\n\n   node.addEventListener('pointerup', blur);\n\n   return {\n      destroy: () => node.removeEventListener('pointerup', blur)\n   };\n}\n\n/**\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes are directly set on target.\n * - target is a function; the function is invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement}          node - The node associated with the action.\n *\n * @param {ResizeObserverTarget} target - An object or function to update with observed width & height changes.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\n */\nfunction resizeObserver(node, target)\n{\n   ResizeObserverManager.add(node, target);\n\n   return {\n      update: (newTarget) =>\n      {\n         ResizeObserverManager.remove(node, target);\n         target = newTarget;\n         ResizeObserverManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         ResizeObserverManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - An HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   if (!(el instanceof HTMLElement)) { throw new TypeError(`resizeObserverUpdate error: 'el' is not an HTMLElement.`); }\n\n   const subscribers = s_MAP.get(el);\n\n   if (Array.isArray(subscribers))\n   {\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\n\n      const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n      const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n      for (const subscriber of subscribers)\n      {\n         subscriber.styles.additionalWidth = additionalWidth;\n         subscriber.styles.additionalHeight = additionalHeight;\n         s_UPDATE_SUBSCRIBER(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n      }\n   }\n};\n\n// Below is the static ResizeObserverManager ------------------------------------------------------------------------\n\nconst s_MAP = new Map();\n\n/**\n * Provides a static / single instance of ResizeObserver that can notify listeners in different ways.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /**\n    * Add an HTMLElement and ResizeObserverTarget instance for monitoring. Create cached style attributes for the\n    * given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {ResizeObserverTarget} target - A target that contains one of several mechanisms for updating resize data.\n    */\n   static add(el, target)\n   {\n      const updateType = s_GET_UPDATE_TYPE(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`'target' does not match supported ResizeObserverManager update mechanisms.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = styleParsePixels(el.style.borderBottom) ?? styleParsePixels(computed.borderBottom) ?? 0;\n      const borderLeft = styleParsePixels(el.style.borderLeft) ?? styleParsePixels(computed.borderLeft) ?? 0;\n      const borderRight = styleParsePixels(el.style.borderRight) ?? styleParsePixels(computed.borderRight) ?? 0;\n      const borderTop = styleParsePixels(el.style.borderTop) ?? styleParsePixels(computed.borderTop) ?? 0;\n      const paddingBottom = styleParsePixels(el.style.paddingBottom) ?? styleParsePixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = styleParsePixels(el.style.paddingLeft) ?? styleParsePixels(computed.paddingLeft) ?? 0;\n      const paddingRight = styleParsePixels(el.style.paddingRight) ?? styleParsePixels(computed.paddingRight) ?? 0;\n      const paddingTop = styleParsePixels(el.style.paddingTop) ?? styleParsePixels(computed.paddingTop) ?? 0;\n\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (s_MAP.has(el))\n      {\n         const subscribers = s_MAP.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         s_MAP.set(el, [data]);\n      }\n\n      s_RESIZE_OBSERVER.observe(el);\n   }\n\n   /**\n    * Removes all targets from monitoring when just an element is provided otherwise removes a specific target\n    * from the monitoring map. If no more targets remain then the element is removed from monitoring.\n    *\n    * @param {HTMLElement}          el - Element to remove from monitoring.\n    *\n    * @param {ResizeObserverTarget} [target] - A specific target to remove from monitoring.\n    */\n   static remove(el, target = void 0)\n   {\n      const subscribers = s_MAP.get(el);\n      if (Array.isArray(subscribers))\n      {\n         const index = subscribers.findIndex((entry) => entry.target === target);\n         if (index >= 0)\n         {\n            // Update target subscriber with undefined values.\n            s_UPDATE_SUBSCRIBER(subscribers[index], void 0, void 0);\n\n            subscribers.splice(index, 1);\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            s_MAP.delete(el);\n            s_RESIZE_OBSERVER.unobserve(el);\n         }\n      }\n   }\n}\n\n/**\n * Defines the various shape / update type of the given target.\n *\n * @type {Record<string, number>}\n */\nconst s_UPDATE_TYPES = {\n   none: 0,\n   attribute: 1,\n   function: 2,\n   resizeObserved: 3,\n   setContentBounds: 4,\n   setDimension: 5,\n   storeObject: 6,\n   storesObject: 7\n};\n\nconst s_RESIZE_OBSERVER = new ResizeObserver((entries) =>\n{\n   for (const entry of entries)\n   {\n      const subscribers = s_MAP.get(entry?.target);\n\n      if (Array.isArray(subscribers))\n      {\n         const contentWidth = entry.contentRect.width;\n         const contentHeight = entry.contentRect.height;\n\n         for (const subscriber of subscribers)\n         {\n            s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight);\n         }\n      }\n   }\n});\n\n/**\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n *\n * @param {*}  target - The target instance.\n *\n * @returns {number} Update type value.\n */\nfunction s_GET_UPDATE_TYPE(target)\n{\n   if (target?.resizeObserved instanceof Function) { return s_UPDATE_TYPES.resizeObserved; }\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\n   if (target?.setContentBounds instanceof Function) { return s_UPDATE_TYPES.setContentBounds; }\n\n   const targetType = typeof target;\n\n   // Does the target have resizeObserved writable store?\n   if ((targetType === 'object' || targetType === 'function'))\n   {\n      if (isUpdatableStore(target.resizeObserved))\n      {\n         return s_UPDATE_TYPES.storeObject;\n      }\n\n      // Now check for a child stores object which is a common TRL pattern for exposing stores.\n      const stores = target?.stores;\n      if (typeof stores === 'object' || typeof stores === 'function')\n      {\n         if (isUpdatableStore(stores.resizeObserved))\n         {\n            return s_UPDATE_TYPES.storesObject;\n         }\n      }\n   }\n\n   if (targetType === 'object') { return s_UPDATE_TYPES.attribute; }\n\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\n\n   return s_UPDATE_TYPES.none;\n}\n\n/**\n * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n * the content values + cached styles.\n *\n * @param {object}            subscriber - Internal data about subscriber.\n *\n * @param {number|undefined}  contentWidth - ResizeObserver contentRect.width value or undefined.\n *\n * @param {number|undefined}  contentHeight - ResizeObserver contentRect.height value or undefined.\n */\nfunction s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight)\n{\n   const styles = subscriber.styles;\n\n   subscriber.contentWidth = contentWidth;\n   subscriber.contentHeight = contentHeight;\n\n   const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n   const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n   const target = subscriber.target;\n\n   switch (subscriber.updateType)\n   {\n      case s_UPDATE_TYPES.attribute:\n         target.contentWidth = contentWidth;\n         target.contentHeight = contentHeight;\n         target.offsetWidth = offsetWidth;\n         target.offsetHeight = offsetHeight;\n         break;\n\n      case s_UPDATE_TYPES.function:\n         target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.resizeObserved:\n         target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setContentBounds:\n         target.setContentBounds?.(contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setDimension:\n         target.setDimension?.(offsetWidth, offsetHeight);\n         break;\n\n      case s_UPDATE_TYPES.storeObject:\n         target.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n\n      case s_UPDATE_TYPES.storesObject:\n         target.stores.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n   }\n}\n\n/**\n * @typedef {object | Function} ResizeObserverTarget\n *\n * @property {number} [contentHeight] -\n *\n * @property {number} [contentWidth] -\n *\n * @property {number} [offsetHeight] -\n *\n * @property {number} [offsetWidth] -\n *\n * @property {Writable<object> | Function} [resizedObserver] - Either a function or a writable store.\n *\n * @property {Function} [setContentSize] - A function that is invoked with content width & height changes.\n *\n * @property {Function} [setDimension] - A function that is invoked with offset width & height changes.\n *\n * @property {{resizedObserver: Writable<object>}} [stores] - An object with a writable store.\n */\n\n/**\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\n * useful for instance providing a select box that controls the scrollable container.\n *\n * @param {HTMLElement} element - The target scrollable HTML element.\n *\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\n */\nfunction applyScrolltop(element, store)\n{\n   if (!isWritableStore(store))\n   {\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\n   }\n\n   function storeUpdate(value)\n   {\n      if (!Number.isFinite(value)) { return; }\n\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\n      setTimeout(() => element.scrollTop = value, 0);\n   }\n\n   let unsubscribe = store.subscribe(storeUpdate);\n\n   const resizeControl = resizeObserver(element, debounce(() => {\n      if (element.isConnected) { store.set(element.scrollTop); }\n   }, 500));\n\n   /**\n    * Save target `scrollTop` to the current set store.\n    *\n    * @param {Event} event -\n    */\n   function onScroll(event)\n   {\n      store.set(event.target.scrollTop);\n   }\n\n   const debounceFn = debounce((e) => onScroll(e), 500);\n\n   element.addEventListener('scroll', debounceFn);\n\n   return {\n      update: (newStore) =>\n      {\n         unsubscribe();\n         store = newStore;\n\n         if (!isWritableStore(store))\n         {\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\n         }\n\n         unsubscribe = store.subscribe(storeUpdate);\n      },\n\n      destroy: () =>\n      {\n         element.removeEventListener('scroll', debounceFn);\n         unsubscribe();\n         resizeControl.destroy();\n      }\n   };\n}\n\n/**\n * Provides an action to apply style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {object}      properties - Key / value object of properties to set.\n *\n * @returns {Function} Update function.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (typeof properties !== 'object') { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      update(newProperties)\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\n/**\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\n *\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\n */\nfunction autoBlur(node)\n{\n   function blur() { document.body.removeEventListener('pointerdown', onPointerDown); }\n   function focus() { document.body.addEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Blur the node if a pointer down event happens outside the node.\n    * @param {PointerEvent} event\n    */\n   function onPointerDown(event)\n   {\n      if (event.target === node || node.contains(event.target)) { return; }\n\n      if (document.activeElement === node) { node.blur(); }\n   }\n\n   node.addEventListener('blur', blur);\n   node.addEventListener('focus', focus);\n\n   return {\n      destroy: () =>\n      {\n         document.body.removeEventListener('pointerdown', onPointerDown);\n         node.removeEventListener('blur', blur);\n         node.removeEventListener('focus', focus);\n      }\n   };\n}\n\n/**\n * Provides an action to apply a Position instance to a HTMLElement and invoke `position.parent`\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {Position}          position - A position instance.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n */\nfunction applyPosition(node, position)\n{\n   if (hasSetter(position, 'parent')) { position.parent = node; }\n\n   return {\n      update: (newPosition) =>\n      {\n         // Sanity case to short circuit update if positions are the same instance.\n         if (newPosition === position && newPosition.parent === position.parent) { return; }\n\n         if (hasSetter(position)) { position.parent = void 0; }\n\n         position = newPosition;\n\n         if (hasSetter(position, 'parent')) { position.parent = node; }\n      },\n\n      destroy: () => { if (hasSetter(position, 'parent')) { position.parent = void 0; } }\n   };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given {@link Position}\n * instance provided. When the attached boolean store state changes the draggable action is enabled or disabled.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {object}            params - Required parameters.\n *\n * @param {Position}          params.position - A position instance.\n *\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\n *\n * @param {number}            [params.button=0] - MouseEvent button; {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button}.\n *\n * @param {Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\" state.\n *\n * @param {boolean}           [params.ease=true] - When true easing is enabled.\n *\n * @param {object}            [params.easeOptions] - Gsap `to / `quickTo` vars object.\n *\n * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n */\nfunction draggable(node, { position, active = true, button = 0, storeDragging = void 0, ease = false,\n easeOptions = { duration: 0.1, ease: cubicOut } })\n{\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   let initialDragPoint = {};\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n    *\n    * @type {quickToCallback}\n    */\n   let quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n\n   /**\n    * Remember event handlers associated with this action so they may be later unregistered.\n    *\n    * @type {object}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', (e) => onDragPointerDown(e), false],\n      dragMove: ['pointermove', (e) => onDragPointerChange(e), false],\n      dragUp: ['pointerup', (e) => onDragPointerUp(e), false]\n   };\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (active)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = position.get();\n      initialDragPoint = { x: event.clientX, y: event.clientY };\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (ease)\n      {\n         quickTo(newTop, newLeft);\n      }\n      else\n      {\n         s_POSITION_DATA.left = newLeft;\n         s_POSITION_DATA.top = newTop;\n\n         position.set(s_POSITION_DATA);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n   }\n\n   return {\n      // The default of active being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (typeof options.active === 'boolean')\n         {\n            active = options.active;\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (options.position !== void 0 && options.position !== position)\n         {\n            position = options.position;\n            quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n         }\n\n         if (typeof options.ease === 'boolean') { ease = options.ease; }\n\n         if (typeof options.easeOptions === 'object')\n         {\n            easeOptions = options.easeOptions;\n            quickTo.options(easeOptions);\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\nclass DraggableOptions\n{\n   #ease = false;\n\n   #easeOptions = { duration: 0.1, ease: cubicOut };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {(function(DraggableOptions): void)[]}\n    */\n   #subscriptions = [];\n\n   constructor({ ease, easeOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n      Object.defineProperty(this, 'ease', {\n         get: () => { return this.#ease; },\n         set: (newEase) =>\n         {\n            if (typeof newEase !== 'boolean') { throw new TypeError(`'ease' is not a boolean.`); }\n\n            this.#ease = newEase;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'easeOptions', {\n         get: () => { return this.#easeOptions; },\n         set: (newEaseOptions) =>\n         {\n            if (newEaseOptions === null || typeof newEaseOptions !== 'object')\n            {\n               throw new TypeError(`'easeOptions' is not an object.`);\n            }\n\n            if (newEaseOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newEaseOptions.duration))\n               {\n                  throw new TypeError(`'easeOptions.duration' is not a finite number.`);\n               }\n\n               if (newEaseOptions.duration < 0) { throw new Error(`'easeOptions.duration' is less than 0.`); }\n\n               this.#easeOptions.duration = newEaseOptions.duration;\n            }\n\n            if (newEaseOptions.ease !== void 0)\n            {\n               if (typeof newEaseOptions.ease !== 'function' && typeof newEaseOptions.ease !== 'string')\n               {\n                  throw new TypeError(`'easeOptions.ease' is not a function or string.`);\n               }\n\n               this.#easeOptions.ease = newEaseOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (ease !== void 0) { this.ease = ease; }\n      if (easeOptions !== void 0) { this.easeOptions = easeOptions; }\n   }\n\n\n   /**\n    * @returns {number} Get ease duration\n    */\n   get easeDuration() { return this.#easeOptions.duration; }\n\n   /**\n    * @returns {string|Function} Get easing function value.\n    */\n   get easeValue() { return this.#easeOptions.ease; }\n\n\n   /**\n    * @param {number}   duration - Set ease duration.\n    */\n   set easeDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { throw new Error(`'duration' is less than 0.`); }\n\n      this.#easeOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {string|Function} value - Get easing function value.\n    */\n   set easeValue(value)\n   {\n      if (typeof value !== 'function' && typeof value !== 'string')\n      {\n         throw new TypeError(`'value' is not a function or string.`);\n      }\n\n      this.#easeOptions.ease = value;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to default values.\n    */\n   reset()\n   {\n      this.#ease = false;\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets easing options to default values.\n    */\n   resetEase()\n   {\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {function(DraggableOptions): void} handler - Callback function that is invoked on update / changes.\n    *                                                 Receives the DraggableOptions object / instance.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableOptions instance.\n *\n * @returns {DraggableOptions} A new options instance.\n */\ndraggable.options = (options) => new DraggableOptions(options);\n\n/**\n * Used for direct call to `position.set`.\n *\n * @type {{top: number, left: number}}\n */\nconst s_POSITION_DATA = { left: 0, top: 0 };\n\nexport { alwaysBlur, applyPosition, applyScrolltop, applyStyles, autoBlur, draggable, resizeObserver };\n//# sourceMappingURL=index.js.map\n","/**\n * A helper to create a set of radio checkbox input elements in a named set.\n * The provided keys are the possible radio values while the provided values are human readable labels.\n *\n * @param {string} name         The radio checkbox field name\n *\n * @param {object} choices      A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options      Options which customize the radio boxes creation\n *\n * @param {string} options.checked    Which key is currently checked?\n *\n * @param {boolean} options.localize  Pass each label through string localization?\n *\n * @returns {string} HTML for radio boxes.\n *\n * @example <caption>The provided input data</caption>\n * let groupName = \"importantChoice\";\n * let choices = {a: \"Choice A\", b: \"Choice B\"};\n * let chosen = \"a\";\n *\n * @example <caption>The template HTML structure</caption>\n * <div class=\"form-group\">\n *   <label>Radio Group Label</label>\n *   <div class=\"form-fields\">\n *     {@html radioBoxes(groupName, choices, { checked: chosen, localize: true})}\n *   </div>\n * </div>\n */\nfunction radioBoxes(name, choices, options)\n{\n   const checked = options['checked'] || null;\n   const localize = options['localize'] || false;\n   let html = '';\n\n   for (let [key, label] of Object.entries(choices)) // eslint-disable-line prefer-const\n   {\n      if (localize) { label = game.i18n.localize(label); }\n      const isChecked = checked === key;\n      html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${key}\" ${\n       isChecked ? 'checked' : ''}> ${label}</label>`;\n   }\n\n   return html;\n}\n\n/**\n * Converts the `selectOptions` Handlebars helper to be Svelte compatible. This is useful when initially converting\n * over an app to Svelte and for essential usage to several dialogs that mirror the core Foundry experience. For\n * an example of usage see {@link TJSFolderPermissions}.\n *\n * A helper to create a set of <option> elements in a <select> block based on a provided dictionary.\n * The provided keys are the option values while the provided values are human-readable labels.\n * This helper supports both single-select as well as multi-select input fields.\n *\n * @param {object} choices                     A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options                     Helper options\n *\n * @param {string|string[]} [options.selected] Which key or array of keys that are currently selected?\n *\n * @param {boolean} [options.localize=false]   Pass each label through string localization?\n *\n * @param {string} [options.blank]             Add a blank option as the first option with this label\n *\n * @param {string} [options.nameAttr]          Look up a property in the choice object values to use as the option value\n *\n * @param {string} [options.labelAttr]         Look up a property in the choice object values to use as the option label\n *\n * @param {boolean} [options.inverted=false]   Use the choice object value as the option value, and the key as the label\n *                                             instead of vice-versa\n *\n * @returns {string} The <options> HTML element(s).\n *\n * @example <caption>The provided input data</caption>\n * let choices = {a: 'Choice A', b: 'Choice B'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices { selected: value, localize: true })}\n * </select>\n *\n * @example <caption>The resulting HTML</caption>\n * <select name=\"importantChoice\">\n *   <option value=\"a\" selected>Choice A</option>\n *   <option value=\"b\">Choice B</option>\n * </select>\n *\n * @example <caption>Using inverted</caption>\n * let choices = {'Choice A': 'a', 'Choice B': 'b'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, inverted: true })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with objects</caption>\n * let choices = {foo: {key: 'a', label: 'Choice A'}, bar: {key: 'b', label: 'Choice B'}};\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with arrays</caption>\n * let choices = [{key: 'a', label: 'Choice A'}, {key: 'b', label: 'Choice B'}];\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n */\nfunction selectOptions(choices, options)\n{\n   const localize = options['localize'] ?? false;\n   let selected = options['selected'] ?? null;\n   const blank = options['blank'] ?? null;\n   const nameAttr = options['nameAttr'];\n   const labelAttr = options['labelAttr'];\n   const inverted = !!options['inverted'];\n\n   selected = selected instanceof Array ? selected.map(String) : [String(selected)];\n\n   // Create an option\n   const option = (name, label) =>\n   {\n      if (localize) { label = game.i18n.localize(label); }\n      const isSelected = selected.includes(String(name));\n\n      html += `<option value=\"${name}\" ${isSelected ? \"selected\" : \"\"}>${label}</option>`;\n   };\n\n   // Create the options\n   let html = '';\n   if (blank !== null) { option('', blank); }\n\n   // Options as an Array\n   if (choices instanceof Array)\n   {\n      for (const choice of choices) { option(choice[nameAttr], choice[labelAttr]); }\n   }\n\n   // Choices as an Object\n   else\n   {\n      for (const choice of Object.entries(choices))\n      {\n         let [key, value] = inverted ? choice.reverse() : choice;\n         if (nameAttr) { key = value[nameAttr]; }\n         if (labelAttr) { value = value[labelAttr]; }\n         option(key, value);\n      }\n   }\n\n   return html;\n}\n\n/**\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\n * keys.\n *\n * @param {string}   stringId - The string ID to translate.\n *\n * @param {object}   [data] - Provided input data.\n *\n * @returns {string} The translated and formatted string\n */\nfunction localize(stringId, data)\n{\n   const result = typeof data !== 'object' ? game.i18n.localize(stringId) : game.i18n.format(stringId, data);\n   return result !== void 0 ? result : '';\n}\n\nexport { localize, radioBoxes, selectOptions };\n//# sourceMappingURL=index.js.map\n","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link ApplicationHeaderButton} type. Additionally a\n    * `title` field is supported to give a tool tip for the button. The `onclick` function if defined is invoked when\n    * the button is clicked and state is updated accordingly.\n    */\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action';\n   import { localize }      from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   export let button = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   let icon, label, title, styles\n\n   $: if (button)\n   {\n      title = typeof button.title === 'string' ? localize(button.title) : '';\n\n      // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n      icon = typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ? button.icon :\n       `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\n\n      label = typeof button.label === 'string' ? localize(button.label) : '';\n\n      styles = typeof button.styles === 'object' ? button.styles : void 0;\n   }\n\n   function onClick(event)\n   {\n      // Accept either callback or onclick as the function / data to invoke.\n      const invoke = button.callback ?? button.onclick;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n</script>\n\n<svelte:options accessors={true}/>\n\n<!-- Need to capture pointerdown / dblclick to prevent further action by TJSApplicationHeader -->\n<a on:click|capture|preventDefault|stopPropagation={onClick}\n   on:pointerdown|capture|preventDefault|stopPropagation={()=>null}\n   on:mousedown|capture|preventDefault|stopPropagation={()=>null}\n   on:dblclick|capture|preventDefault|stopPropagation={()=>null}\n   use:applyStyles={styles}\n   class=\"header-button {button.class}\">\n    {@html icon}{label}\n</a>\n","<script>\n   import { getContext }            from 'svelte';\n   import { cubicOut }              from 'svelte/easing';\n\n   import {\n      draggable as dragDefault }    from '@typhonjs-fvtt/runtime/svelte/action';\n\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   import { isSvelteComponent }     from '@typhonjs-fvtt/runtime/svelte/util';\n\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\n\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   const application = getContext('external').application;\n\n   const storeTitle = application.reactive.storeAppOptions.title;\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\n   const storeDragging = application.reactive.storeUIState.dragging;\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\n   const storeMinimized = application.reactive.storeUIState.minimized;\n\n   let dragOptions;\n\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\n\n   // Combines external options with defaults for TJSApplicationHeader.\n   // $: dragOptions = Object.assign({}, typeof draggableOptions === 'object' ? draggableOptions : {},\n   //  { position: application.position, active: $storeDraggable, storeDragging });\n\n   // Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n   // 0.1 and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n   // `storeDragging` are always overridden by application position / stores.\n   $: dragOptions = Object.assign({}, { ease: true, easeOptions: { duration: 0.1, ease: cubicOut } },\n    typeof draggableOptions === 'object' ? draggableOptions : {}, { position: application.position, active:\n     $storeDraggable, storeDragging });\n\n   let displayHeaderTitle;\n\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\n\n   let buttons;\n\n   $:\n   {\n      buttons = $storeHeaderButtons.reduce((array, button) =>\n      {\n         // If the button is a SvelteComponent set it as the class otherwise use `TJSHeaderButton` w/ button as props.\n         array.push(isSvelteComponent(button) ? { class: button, props: {} } :\n          { class: TJSHeaderButton, props: { button } });\n\n         return array;\n      }, []);\n   }\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = application._onToggleMinimize.bind(application);\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n</script>\n\n{#key draggable}\n   <header class=\"window-header flexrow\"\n           use:draggable={dragOptions}\n           use:minimizable={$storeMinimizable}>\n      <h4 class=window-title style:display={displayHeaderTitle}>{localize($storeTitle)}</h4>\n      {#each buttons as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n   </header>\n{/key}\n\n<style>\n   .window-title {\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n   }\n</style>\n","<script>\n   import { getContext }         from 'svelte';\n\n   export let isResizable = false;\n\n   const application = getContext('external').application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('storeElementRoot');\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         application.position.set({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         application._onResize(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     use:resizable={{active: $storeResizable, storeResizing}}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n","<script>\n   import { getContext, setContext }   from 'svelte';\n   import { writable }                 from 'svelte/store';\n\n   import {\n      applyStyles,\n      resizeObserver }                 from '@typhonjs-fvtt/runtime/svelte/action';\n\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSContainer                 from '../TJSContainer.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   import {\n      s_DEFAULT_TRANSITION,\n      s_DEFAULT_TRANSITION_OPTIONS }   from '@typhonjs-fvtt/runtime/svelte/transition';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   export let children = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // If the application is a popOut application then when clicked bring to top. Bound to on pointerdown.\n   const bringToTop = (event) =>\n   {\n      if (typeof application.options.popOut === 'boolean' && application.options.popOut)\n      {\n         if (application !== ui?.activeWindow) { application.bringToTop.call(application); }\n\n         // If the activeElement is not `document.body` and the event target isn't the activeElement then blur the\n         // current active element and make `document.body` focused. This allows <esc> key to close all open apps /\n         // windows.\n         if (document.activeElement !== document.body && event.target !== document.activeElement)\n         {\n            // Blur current active element.\n            if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\n\n            // Make document body focused.\n            document.body.focus();\n         }\n      }\n   }\n\n   // Use a writable store to make `elementContent` and `elementRoot` accessible. A store is used in the case when\n   // One root component with an `elementRoot` is replaced with another. Due to timing issues and the onDestroy / outro\n   // transitions either of these may be set to null. I will investigate more and file a bug against Svelte.\n   if (!getContext('storeElementContent')) { setContext('storeElementContent', writable(elementContent)); }\n   if (!getContext('storeElementRoot')) { setContext('storeElementRoot', writable(elementRoot)); }\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('storeElementContent').set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('storeElementRoot').set(elementRoot);\n   }\n\n   const context = getContext('external');\n\n   // Store Foundry Application reference.\n   const application = context.application;\n\n   // This component can host multiple children defined via props or in the TyphonJS SvelteData configuration object\n   // that are potentially mounted in the content area. If no children defined then this component mounts any slotted\n   // child.\n   const allChildren = Array.isArray(children) ? children :\n    typeof context === 'object' ? context.children : void 0;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = s_DEFAULT_TRANSITION;\n   export let outTransition = s_DEFAULT_TRANSITION;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n   export let outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = s_DEFAULT_TRANSITION !== transition && typeof transition === 'function' ? transition :\n       s_DEFAULT_TRANSITION;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== s_DEFAULT_TRANSITION_OPTIONS && typeof transitionOptions === 'object' ?\n       transitionOptions : s_DEFAULT_TRANSITION_OPTIONS;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = s_DEFAULT_TRANSITION; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = s_DEFAULT_TRANSITION; }\n\n      // Set jquery close animation to either run or not when an out transition is changed.\n      if (application && typeof application?.options?.defaultCloseAnimation === 'boolean')\n      {\n         application.options.defaultCloseAnimation = outTransition === s_DEFAULT_TRANSITION;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof inTransitionOptions !== 'object') { inTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (typeof outTransitionOptions !== 'object') { outTransitionOptions = s_DEFAULT_TRANSITION_OPTIONS; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<div id={application.id}\n     class=\"app window-app {application.options.classes.join(' ')}\"\n     data-appid={application.appId}\n     bind:this={elementRoot}\n     in:inTransition={inTransitionOptions}\n     out:outTransition={outTransitionOptions}\n     on:pointerdown|capture={bringToTop}\n     use:applyStyles={stylesApp}\n     use:appResizeObserver={resizeObservedApp}>\n   <TJSApplicationHeader {draggable} {draggableOptions} />\n   <section class=window-content\n            bind:this={elementContent}\n            use:applyStyles={stylesContent}\n            use:contentResizeObserver={resizeObservedContent}>\n      {#if Array.isArray(allChildren)}\n         <TJSContainer children={allChildren} />\n      {:else}\n         <slot />\n      {/if}\n   </section>\n   <ResizableHandle />\n</div>\n\n<style>\n   .window-app {\n      overflow: inherit;\n   }\n\n   /* Note: this is different than stock Foundry that sets `flex: 1`. This greatly aids control of content */\n   .window-app .window-content > * {\n      flex: none;\n   }\n</style>\n","import { isWritableStore, DynArrayReducer, subscribeIgnoreFirst, TJSGameSettings } from '@typhonjs-fvtt/runtime/svelte/store';\nimport { isObject, uuidv4, debounce, klona, normalizeString, isIterable } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { writable, get } from 'svelte/store';\nimport { isWritableStore as isWritableStore$1 } from '@typhonjs-fvtt/runtime/svelte/store';\n\n/**\r\n * Provides a base implementation for store entries in {@link ArrayObjectStore}.\r\n *\r\n * In particular providing the required getting / accessor for the 'id' property.\r\n */\r\nclass ObjectEntryStore\r\n{\r\n   /**\r\n    * @type {object}\r\n    */\r\n   #data;\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(object): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @param {object}   data -\r\n    */\r\n   constructor(data = {})\r\n   {\r\n      if (!isObject(data)) { throw new TypeError(`'data' is not an object.`); }\r\n\r\n      this.#data = data;\r\n\r\n      // If an id is missing then add it.\r\n      if (typeof data.id !== 'string') { this.#data.id = uuidv4(); }\r\n\r\n      if (!uuidv4.isValid(data.id)) { throw new Error(`'data.id' (${data.id}) is not a valid UUIDv4 string.`)}\r\n   }\r\n\r\n   /**\r\n    * Invoked by ArrayObjectStore to provide custom duplication. Override this static method in your entry store.\r\n    *\r\n    * @param {object}   data - A copy of local data w/ new ID already set.\r\n    *\r\n    * @param {ArrayObjectStore} arrayStore - The source ArrayObjectStore instance.\r\n    */\r\n   static duplicate(data, arrayStore) {}\r\n\r\n   /**\r\n    * @returns {object}\r\n    * @protected\r\n    */\r\n   get _data() { return this.#data; }\r\n\r\n   // ----------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get id() { return this.#data.id; }\r\n\r\n   toJSON()\r\n   {\r\n      return this.#data;\r\n   }\r\n\r\n   /**\r\n    * @param {function(object): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler);  // add handler to the array of subscribers\r\n\r\n      handler(this.#data);                // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * @protected\r\n    */\r\n   _updateSubscribers()\r\n   {\r\n      const subscriptions = this.#subscriptions;\r\n\r\n      const data = this.#data;\r\n\r\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\r\n   }\r\n}\n\n/**\r\n * @typedef {typeof import('svelte/store').Writable & { get id: string }} BaseEntryStore\r\n */\r\n\r\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nclass ArrayObjectStore\r\n{\r\n   /** @type {T[]} */\r\n   #data = [];\r\n\r\n   /**\r\n    * @type {Map<string, { store: T, unsubscribe: Function}>}\r\n    */\r\n   #dataMap = new Map();\r\n\r\n   /**\r\n    * @type {DynArrayReducer<T>}\r\n    */\r\n   #dataReducer;\r\n\r\n   /**\r\n    * @type {boolean}\r\n    */\r\n   #manualUpdate;\r\n\r\n   #StoreClass;\r\n\r\n   /**\r\n    * Stores the subscribers.\r\n    *\r\n    * @type {(function(T[]): void)[]}\r\n    */\r\n   #subscriptions = [];\r\n\r\n   /**\r\n    * @type {Function}\r\n    */\r\n   #updateSubscribersBound;\r\n\r\n   /**\r\n    * @returns {ObjectEntryStore}\r\n    */\r\n   static get EntryStore() { return ObjectEntryStore; }\r\n\r\n   /**\r\n    * @param {ArrayObjectStoreParams} params -\r\n    */\r\n   constructor({ StoreClass, defaultData = [], childDebounce = 250, dataReducer = false, manualUpdate = false } = {})\r\n   {\r\n      if (!Number.isInteger(childDebounce) || childDebounce < 0 || childDebounce > 1000)\r\n      {\r\n         throw new TypeError(`'childDebounce' must be an integer between and including 0 - 1000.`);\r\n      }\r\n\r\n      if (typeof manualUpdate !== 'boolean') { throw new TypeError(`'manualUpdate' is not a boolean.`); }\r\n\r\n      if (!isWritableStore(StoreClass.prototype))\r\n      {\r\n         throw new TypeError(`'StoreClass' is not a writable store constructor.`);\r\n      }\r\n\r\n      let hasIDGetter = false;\r\n\r\n      // Walk parent prototype chain. Check for descriptor at each prototype level.\r\n      for (let o = StoreClass.prototype; o; o = Object.getPrototypeOf(o))\r\n      {\r\n         const descriptor = Object.getOwnPropertyDescriptor(o, 'id');\r\n         if (descriptor !== void 0 && descriptor.get !== void 0)\r\n         {\r\n            hasIDGetter = true;\r\n            break;\r\n         }\r\n      }\r\n\r\n      if (!hasIDGetter)\r\n      {\r\n         throw new TypeError(`'StoreClass' does not have a getter accessor for 'id' property.`);\r\n      }\r\n\r\n      if (!Array.isArray(defaultData)) { throw new TypeError(`'defaultData' is not an array.`); }\r\n\r\n      this.#manualUpdate = manualUpdate;\r\n\r\n      this.#StoreClass = StoreClass;\r\n\r\n      if (dataReducer) { this.#dataReducer = new DynArrayReducer({ data: this.#data }); }\r\n\r\n      // Prepare a debounced callback that is used for all child store entry subscriptions.\r\n      this.#updateSubscribersBound = childDebounce === 0 ? this.updateSubscribers.bind(this) :\r\n       debounce((data) => this.updateSubscribers(data), childDebounce);\r\n   }\r\n\r\n   /**\r\n    * Provide an iterator for public access to entry stores.\r\n    *\r\n    * @returns {Generator<T | void>}\r\n    * @yields {T|void}\r\n    */\r\n   *[Symbol.iterator]()\r\n   {\r\n      if (this.#data.length === 0) { return; }\r\n\r\n      for (const entryStore of this.#data) { yield entryStore; }\r\n   }\r\n\r\n   /**\r\n    * @returns {T[]}\r\n    * @protected\r\n    */\r\n   get _data() { return this.#data; }\r\n\r\n   /**\r\n    * @returns {DynArrayReducer<T>}\r\n    */\r\n   get dataReducer()\r\n   {\r\n      if (!this.#dataReducer)\r\n      {\r\n         throw new Error(\r\n          `'dataReducer' is not initialized; did you forget to specify 'dataReducer' as true in constructor options?`);\r\n      }\r\n\r\n      return this.#dataReducer;\r\n   }\r\n\r\n   /**\r\n    * @returns {number}\r\n    */\r\n   get length() { return this.#data.length; }\r\n\r\n   /**\r\n    * Removes all child store entries.\r\n    */\r\n   clearEntries()\r\n   {\r\n      for (const storeEntryData of this.#dataMap.values()) { storeEntryData.unsubscribe(); }\r\n\r\n      this.#dataMap.clear();\r\n      this.#data.length = 0;\r\n\r\n      this.updateSubscribers();\r\n   }\r\n\r\n   /**\r\n    * Creates a new store from given data.\r\n    *\r\n    * @param {object}   entryData -\r\n    *\r\n    * @returns {T}\r\n    */\r\n   createEntry(entryData = {})\r\n   {\r\n      if (!isObject(entryData)) { throw new TypeError(`'entryData' is not an object.`); }\r\n\r\n      if (typeof entryData.id !== 'string') { entryData.id = uuidv4(); }\r\n\r\n      if (this.#data.findIndex((entry) => entry.id === entryData.id) >= 0)\r\n      {\r\n         throw new Error(`'entryData.id' (${entryData.id}) already in this ArrayObjectStore instance.`)\r\n      }\r\n\r\n      const store = this.#createStore(entryData);\r\n\r\n      this.updateSubscribers();\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Add a new store entry from the given data.\r\n    *\r\n    * @param {object}   entryData\r\n    *\r\n    * @returns {T} New store entry instance.\r\n    */\r\n   #createStore(entryData)\r\n   {\r\n      const store = new this.#StoreClass(entryData, this);\r\n\r\n      if (!uuidv4.isValid(store.id))\r\n      {\r\n         throw new Error(`'store.id' (${store.id}) is not a UUIDv4 compliant string.`);\r\n      }\r\n\r\n      const unsubscribe = subscribeIgnoreFirst(store, this.#updateSubscribersBound);\r\n\r\n      this.#data.push(store);\r\n      this.#dataMap.set(entryData.id, { store, unsubscribe });\r\n\r\n      return store;\r\n   }\r\n\r\n   /**\r\n    * Deletes a given entry store by ID from this world setting array store instance.\r\n    *\r\n    * @param {string}  id - ID of entry to delete.\r\n    *\r\n    * @returns {boolean} Delete operation successful.\r\n    */\r\n   deleteEntry(id)\r\n   {\r\n      const result = this.#deleteStore(id);\r\n\r\n      if (result) { this.updateSubscribers(); }\r\n\r\n      return result;\r\n   }\r\n\r\n   #deleteStore(id)\r\n   {\r\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\r\n\r\n      const storeEntryData = this.#dataMap.get(id);\r\n      if (storeEntryData)\r\n      {\r\n         storeEntryData.unsubscribe();\r\n\r\n         this.#dataMap.delete(id);\r\n\r\n         const index = this.#data.findIndex((entry) => entry.id === id);\r\n         if (index >= 0) { this.#data.splice(index, 1); }\r\n\r\n         return true;\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   /**\r\n    * Duplicates an entry store by the given ID.\r\n    *\r\n    * @param {string}   id - UUIDv4 string.\r\n    *\r\n    * @returns {*} Instance of StoreClass.\r\n    */\r\n   duplicateEntry(id)\r\n   {\r\n      if (typeof id !== 'string') { throw new TypeError(`'id' is not a string.`); }\r\n\r\n      const storeEntryData = this.#dataMap.get(id);\r\n\r\n      if (storeEntryData)\r\n      {\r\n         const data = klona(storeEntryData.store.toJSON());\r\n         data.id = uuidv4();\r\n\r\n         // Allow StoreClass to statically perform any specialized duplication.\r\n         this.#StoreClass?.duplicate?.(data, this);\r\n\r\n         return this.createEntry(data);\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n\r\n   /**\r\n    * Find an entry in the backing child store array.\r\n    *\r\n    * @param {function(T): T|void}  predicate - A predicate function\r\n    *\r\n    * @returns {T|void} Found entry in array or undefined.\r\n    */\r\n   findEntry(predicate)\r\n   {\r\n      return this.#data.find(predicate);\r\n   }\r\n\r\n   /**\r\n    * Finds an entry store instance by 'id' / UUIDv4.\r\n    *\r\n    * @param {string}   id - A UUIDv4 string.\r\n    *\r\n    * @returns {T|void} Entry store instance.\r\n    */\r\n   getEntry(id)\r\n   {\r\n      const storeEntryData = this.#dataMap.get(id);\r\n      return storeEntryData ? storeEntryData.store : void 0;\r\n   }\r\n\r\n   /**\r\n    * Sets the children store data by 'id', adds new entry store instances, or removes entries that are no longer in the\r\n    * update list.\r\n    *\r\n    * @param {T[]}   updateList\r\n    */\r\n   set(updateList)\r\n   {\r\n      if (!Array.isArray(updateList))\r\n      {\r\n         console.warn(`ArrayObjectStore.set warning: aborting set operation as 'updateList' is not an array.`);\r\n         return;\r\n      }\r\n\r\n      const data = this.#data;\r\n      const dataMap = this.#dataMap;\r\n\r\n      // Create a set of all current entry IDs.\r\n      const removeIDSet = new Set(dataMap.keys());\r\n\r\n      let rebuildIndex = false;\r\n\r\n      for (let updateIndex = 0; updateIndex < updateList.length; updateIndex++)\r\n      {\r\n         const updateData = updateList[updateIndex];\r\n\r\n         const id = updateData.id;\r\n\r\n         if (typeof id !== 'string') { throw new Error(`'updateData.id' is not a string.`)}\r\n\r\n         const localIndex = data.findIndex((entry) => entry.id === id);\r\n\r\n         if (localIndex >= 0)\r\n         {\r\n            const localEntry = data[localIndex];\r\n\r\n            // Update the entry data.\r\n            localEntry.set(updateData);\r\n\r\n            // Must move to correct position\r\n            if (localIndex !== updateIndex)\r\n            {\r\n               // Remove from current location.\r\n               data.splice(localIndex, 1);\r\n\r\n               if (updateIndex < data.length)\r\n               {\r\n                  // Insert at new location.\r\n                  data.splice(updateIndex, 0, localEntry);\r\n               }\r\n               else\r\n               {\r\n                  // Local data length is less than update data index; rebuild index.\r\n                  rebuildIndex = true;\r\n               }\r\n            }\r\n\r\n            // Delete from removeIDSet as entry is still in local data.\r\n            removeIDSet.delete(id);\r\n         }\r\n         else\r\n         {\r\n            this.#createStore(updateData);\r\n         }\r\n      }\r\n\r\n      if (rebuildIndex)\r\n      {\r\n         // Must invoke unsubscribe for all child stores.\r\n         for (const storeEntryData of dataMap.values()) { storeEntryData.unsubscribe(); }\r\n\r\n         data.length = 0;\r\n         dataMap.clear();\r\n\r\n         for (const updateData of updateList) { this.#createStore(updateData); }\r\n      }\r\n      else\r\n      {\r\n         // Remove entries that are no longer in data.\r\n         for (const id of removeIDSet) { this.#deleteStore(id); }\r\n      }\r\n\r\n      this.updateSubscribers();\r\n   }\r\n\r\n   toJSON()\r\n   {\r\n      return this.#data;\r\n   }\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n   /**\r\n    * @param {function(T[]): void} handler - Callback function that is invoked on update / changes.\r\n    *\r\n    * @returns {(function(): void)} Unsubscribe function.\r\n    */\r\n   subscribe(handler)\r\n   {\r\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\r\n\r\n      handler(this.#data);                     // call handler with current value\r\n\r\n      // Return unsubscribe function.\r\n      return () =>\r\n      {\r\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\r\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\r\n      };\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers.\r\n    *\r\n    * @param {ArrayObjectUpdateData}  [update] -\r\n    */\r\n   updateSubscribers(update)\r\n   {\r\n      const updateGate = typeof update === 'boolean' ? update : !this.#manualUpdate;\r\n\r\n      if (updateGate)\r\n      {\r\n         const subscriptions = this.#subscriptions;\r\n\r\n         const data = this.#data;\r\n\r\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](data); }\r\n      }\r\n\r\n      // This will update the filtered data and `dataReducer` store and forces an update to subscribers.\r\n      if (this.#dataReducer) { this.#dataReducer.index.update(true); }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {object} ArrayObjectStoreParams\r\n *\r\n * @property {BaseEntryStore} StoreClass - The entry store class that is instantiated.\r\n *\r\n * @property {object[]}       [defaultData=[]] - An array of default data objects.\r\n *\r\n * @property {number}         [childDebounce=250] - An integer between and including 0 - 1000; a debounce time in\r\n *                            milliseconds for child store subscriptions to invoke\r\n *                            {@link ArrayObjectStore.updateSubscribers} notifying subscribers to this array\r\n *                            store.\r\n *\r\n * @property {boolean}        [dataReducer=false] - When true a DynArrayReducer will be instantiated wrapping store\r\n *                                                  data and accessible from {@link ArrayObjectStore.dataReducer}.\r\n *\r\n * @property {boolean}        [manualUpdate=false] - When true {@link ArrayObjectStore.updateSubscribers} must be\r\n *                            invoked with a single boolean parameter for subscribers to be updated.\r\n */\r\n\r\n/**\r\n * @typedef {boolean|object|undefined} ArrayObjectUpdateData\r\n */\n\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nclass CrudArrayObjectStore extends ArrayObjectStore\r\n{\r\n   /** @type {CrudDispatch} */\r\n   #crudDispatch;\r\n\r\n   /** @type {object} */\r\n   #extraData;\r\n\r\n   /**\r\n    * @param {object}                  [opts] - Optional parameters.\r\n    *\r\n    * @param {CrudDispatch}            [opts.crudDispatch] -\r\n    *\r\n    * @param {object}                  [opts.extraData] -\r\n    *\r\n    * @param {ArrayObjectStoreParams}  [opts.rest] - Rest of ArrayObjectStore parameters.\r\n    */\r\n   constructor({ crudDispatch, extraData, ...rest })\r\n   {\r\n      // 'manualUpdate' is set to true if 'crudUpdate' is defined, but can be overridden by `...rest`.\r\n      super({\r\n         manualUpdate: typeof crudDispatch === 'function',\r\n         ...rest,\r\n      });\r\n\r\n      if (crudDispatch !== void 0 && typeof crudDispatch !== 'function')\r\n      {\r\n         throw new TypeError(`'crudDispatch' is not a function.`);\r\n      }\r\n\r\n      if (extraData !== void 0 && !isObject(extraData))\r\n      {\r\n         throw new TypeError(`'extraData' is not an object.`);\r\n      }\r\n\r\n      this.#crudDispatch = crudDispatch;\r\n      this.#extraData = extraData ?? {};\r\n   }\r\n\r\n   /**\r\n    * Removes all child store entries.\r\n    */\r\n   clearEntries()\r\n   {\r\n      super.clearEntries();\r\n\r\n      if (this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({ action: 'clear', ...this.#extraData });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Creates a new store from given data.\r\n    *\r\n    * @param {object}   entryData -\r\n    *\r\n    * @returns {T}\r\n    */\r\n   createEntry(entryData = {})\r\n   {\r\n      const store = super.createEntry(entryData);\r\n\r\n      if (store && this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({\r\n            action: 'create',\r\n            ...this.#extraData,\r\n            id: store.id,\r\n            data: store.toJSON()\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Deletes a given entry store by ID from this world setting array store instance.\r\n    *\r\n    * @param {string}  id - ID of entry to delete.\r\n    *\r\n    * @returns {boolean} Delete operation successful.\r\n    */\r\n   deleteEntry(id)\r\n   {\r\n      const result = super.deleteEntry(id);\r\n\r\n      if (result && this.#crudDispatch)\r\n      {\r\n         this.#crudDispatch({ action: 'delete', ...this.#extraData, id });\r\n      }\r\n\r\n      return result;\r\n   }\r\n\r\n   /**\r\n    * Updates subscribers, but provides special handling when WorldSettingArrayStore has an `crudDispatch` function\r\n    * attached. When the update is an object with a valid UUIDv4 string as the id property the `crudDispatch`\r\n    * function is invoked with  along with the data payload\r\n    *\r\n    * @param {ArrayObjectUpdateData} [update] -\r\n    */\r\n   updateSubscribers(update)\r\n   {\r\n      if (this.#crudDispatch && isObject(update) && uuidv4.isValid(update.id))\r\n      {\r\n         const result = this.#crudDispatch({\r\n            action: 'update',\r\n            ...this.#extraData,\r\n            id: update.id,\r\n            data: update  // TODO: Consider using klona to clone data.\r\n         });\r\n\r\n         // If the crudDispatch function returns a boolean then invoke 'ArrayObjectStore.updateSubscribers' with it.\r\n         super.updateSubscribers(typeof result === 'boolean' ? result : update);\r\n      }\r\n      else\r\n      {\r\n         super.updateSubscribers(update);\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @typedef {ArrayObjectStoreParams} CrudArrayObjectStoreParams\r\n *\r\n * @property {CrudDispatch}   [crudDispatch] -\r\n *\r\n * @property {object}         [extraData] -\r\n */\r\n\r\n/**\r\n * @typedef {({ action: string, id?: string, data?: object }) => boolean} CrudDispatch\r\n *\r\n * A function that accepts an object w/ 'action', 'moduleId', 'key' properties and optional 'id' / UUIDv4 string and\r\n * 'data' property.\r\n */\n\n/**\r\n * Creates a filter function to compare objects by a give property key against a regex test. The returned function\r\n * is also a writable Svelte store that builds a regex from the stores value.\r\n *\r\n * This filter function can be used w/ DynArrayReducer and bound as a store to input elements.\r\n *\r\n * @param {string|Iterable<string>}   properties - Property key to compare.\r\n *\r\n * @param {object}   [opts] - Optional parameters.\r\n *\r\n * @param {boolean}  [opts.caseSensitive=false] - When true regex test is case-sensitive.\r\n *\r\n * @param {import('svelte/store').Writable<string>}  [opts.store=void] - Use the provided store to instead of creating\r\n *                                                                       a default writable store.\r\n *\r\n * @returns {(data: object) => boolean} The query string filter.\r\n */\r\nfunction createFilterQuery(properties, { caseSensitive = false, store } = {})\r\n{\r\n   let keyword = '';\r\n   let regex;\r\n\r\n   if (store !== void 0 && !isWritableStore(store))\r\n   {\r\n      throw new TypeError(`createFilterQuery error: 'store' is not a writable store.`);\r\n   }\r\n\r\n   const storeKeyword = store ? store : writable(keyword);\r\n\r\n   // If an existing store is provided then set initial values.\r\n   if (store)\r\n   {\r\n      const current = get(store);\r\n\r\n      if (typeof current === 'string')\r\n      {\r\n         keyword = normalizeString(current);\r\n         regex = new RegExp(RegExp.escape(keyword), caseSensitive ? '' : 'i');\r\n      }\r\n      else\r\n      {\r\n         store.set(keyword);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\r\n    * created from the search input element.\r\n    *\r\n    * @param {object} data - Data object to test against regex.\r\n    *\r\n    * @returns {boolean} AnimationStore filter state.\r\n    */\r\n   function filterQuery(data)\r\n   {\r\n      if (keyword === '' || !regex) { return true; }\r\n\r\n      if (isIterable(properties))\r\n      {\r\n         for (const property of properties)\r\n         {\r\n            if (regex.test(normalizeString(data?.[property]))) { return true; }\r\n         }\r\n\r\n         return false;\r\n      }\r\n      else\r\n      {\r\n         return regex.test(normalizeString(data?.[properties]));\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Create a custom store that changes when the search keyword changes.\r\n    *\r\n    * @param {(string) => void} handler - A callback function that accepts strings.\r\n    *\r\n    * @returns {import('svelte/store').Unsubscriber}\r\n    */\r\n   filterQuery.subscribe = (handler) =>\r\n   {\r\n      return storeKeyword.subscribe(handler);\r\n   };\r\n\r\n   /**\r\n    * Set\r\n    *\r\n    * @param {string}   value - A new value for the keyword / regex test.\r\n    */\r\n   filterQuery.set = (value) =>\r\n   {\r\n      if (typeof value === 'string')\r\n      {\r\n         keyword = normalizeString(value);\r\n         regex = new RegExp(RegExp.escape(keyword), caseSensitive ? '' : 'i');\r\n         storeKeyword.set(keyword);\r\n      }\r\n   };\r\n\r\n   return filterQuery;\r\n}\n\n/**\r\n * @template {BaseEntryStore} T\r\n */\r\nclass WorldSettingArrayStore extends CrudArrayObjectStore\r\n{\r\n   /** @type {string} */\r\n   #key;\r\n\r\n   /** @type {string} */\r\n   #namespace;\r\n\r\n   /**\r\n    *\r\n    * @param {object}            [opts] - Optional parameters.\r\n    *\r\n    * @param {TJSGameSettings}   [opts.gameSettings] - An instance of TJSGameSettings.\r\n    *\r\n    * @param {string}            [opts.namespace] - Game setting 'namespace' field.\r\n    *\r\n    * @param {string}            [opts.key] - Game setting 'key' field.\r\n    *\r\n    * @param {CrudArrayObjectStoreParams} [opts.rest] - Rest of CrudArrayObjectStore parameters.\r\n    */\r\n   constructor({ gameSettings, namespace, key, ...rest })\r\n   {\r\n      super({\r\n         ...rest,\r\n         extraData: { namespace, key }\r\n      });\r\n\r\n      if (gameSettings !== void 0 && !(gameSettings instanceof TJSGameSettings))\r\n      {\r\n         throw new TypeError(`'gameSettings' is not an instance of TJSGameSettings.`);\r\n      }\r\n\r\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\r\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\r\n\r\n      this.#namespace = namespace;\r\n      this.#key = key;\r\n\r\n      if (gameSettings)\r\n      {\r\n         gameSettings.register({\r\n            namespace,\r\n            key,\r\n            store: this,\r\n            options: {\r\n               scope: 'world',\r\n               config: false,\r\n               default: Array.isArray(rest.defaultData) ? rest.defaultData : [],\r\n               type: Array\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get key() { return this.#key; }\r\n\r\n   /**\r\n    * @returns {string}\r\n    */\r\n   get namespace() { return this.#namespace; }\r\n}\n\n/**\r\n * Wraps a writable stores set method invoking a callback after the store is set. This allows hard coupled parent /\r\n * child relationships between stores to update directly without having to subscribe to the child store. This is a\r\n * particular powerful pattern when the `setCallback` is a debounced function that syncs a parent store and / or\r\n * serializes data.\r\n *\r\n * Note: Do consider carefully if this is an optimum solution; this is a quick implementation helper, but a better\r\n * solution is properly managing store relationships through subscription.\r\n *\r\n * @template T\r\n *\r\n * @param {import('svelte/store').Writable<T>} store - A store to wrap.\r\n *\r\n * @param {(store?: import('svelte/store').Writable<T>, value?: T) => void} setCallback - A callback to invoke after\r\n *                                                                                        store set.\r\n *\r\n * @returns {import('svelte/store').Writable<T>} Wrapped store.\r\n */\r\nfunction storeCallback(store, setCallback)\r\n{\r\n   if (!isWritableStore$1(store)) { throw new TypeError(`'store' is not a writable store.`); }\r\n   if (typeof setCallback !== 'function') { throw new TypeError(`'setCallback' is not a function.`); }\r\n\r\n   /** @type {import('svelte/store').Writable<T>} */\r\n   return {\r\n      set: (value) => {\r\n         store.set(value);\r\n         setCallback(store, value);\r\n      },\r\n\r\n      subscribe: store.subscribe,\r\n\r\n      update: typeof store.update === 'function' ? store.update : void 0\r\n   };\r\n}\n\nexport { ArrayObjectStore, CrudArrayObjectStore, ObjectEntryStore, WorldSettingArrayStore, createFilterQuery, storeCallback };\n//# sourceMappingURL=index.js.map\n","export async function createFolderWithActors(folderName, actorNames) {\r\n\r\n    let folder = game.folders?.getName(folderName);\r\n\r\n    if (!folder) {\r\n        folder = await Folder.create({\r\n            name: folderName,\r\n            type: 'Actor',\r\n            color: \"#646cdd\",\r\n            parent: null\r\n        });\r\n    }\r\n\r\n    const folderId = folder.id;\r\n\r\n    const monsterPack = game.packs.get(\"dnd5e.monsters\");\r\n\r\n    if (!monsterPack) return [];\r\n\r\n    // Loop through each actor name and try to find them in the D&D 5e monsters compendia\r\n    const actors = [];\r\n    for (const name of actorNames) {\r\n\r\n        const creature = await monsterPack.getDocuments({ \"name\": name })\r\n\r\n        if (!creature.length) continue\r\n        actors.push(await Actor.create({\r\n            ...creature[0].toObject(),\r\n            folder: folderId\r\n        }));\r\n    }\r\n\r\n    return actors;\r\n\r\n}\r\n\r\nexport function checkModules() {\r\n    let error = false;\r\n\r\n    if (!game.modules.get(\"jb2a_patreon\")?.active) {\r\n        let installed = game.modules.get(\"jb2a_patreon\") && !game.modules.get(\"jb2a_patreon\").active ? \"enabled\" : \"installed\";\r\n        error = `You need to have the JB2A Patreon module ${installed} to cast this spell!`;\r\n    }\r\n\r\n    if (!game.modules.get(\"socketlib\")?.active) {\r\n        let installed = game.modules.get(\"socketlib\") && !game.modules.get(\"socketlib\").active ? \"enabled\" : \"installed\";\r\n        error = `You need to have SocketLib ${installed} to cast this spell!`;\r\n    }\r\n    if (!game.modules.get(\"tagger\")?.active) {\r\n        let installed = game.modules.get(\"tagger\") && !game.modules.get(\"tagger\").active ? \"enabled\" : \"installed\";\r\n        error = `You need to have Tagger${installed} to cast this spell!`;\r\n    }\r\n    if (!game.modules.get(\"sequencer\")?.active) {\r\n        let installed = game.modules.get(\"sequencer\") && !game.modules.get(\"sequencer\").active ? \"enabled\" : \"installed\";\r\n        error = `You need to have Sequencer ${installed} to cast this spell!`;\r\n    }\r\n    if (!game.modules.get(\"warpgate\")?.active) {\r\n        let installed = game.modules.get(\"warpgate\") && !game.modules.get(\"warpgate\").active ? \"enabled\" : \"installed\";\r\n        error = `You need to have Warpgate ${installed} to cast this spell!`;\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\nexport function getDistanceClassic(pointA, pointB) {\r\n    return Math.sqrt(Math.pow((pointA.x - pointB.x), 2) + Math.pow((pointA.y - pointB.y), 2));\r\n}\r\n\r\nexport function measureDistance(pointA, pointB) {\r\n    const ray = new Ray({ x: pointA.x, y: pointA.y }, { x: pointB.x, y: pointB.y });\r\n    const segments = [{ ray }];\r\n    let dist = canvas.grid.measureDistances(segments, { gridSpaces: true })[0]\r\n    return dist;\r\n}\r\n\r\nexport function getRandomNumber(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function strikeThrough(text) {\r\n    return text\r\n        .split('')\r\n        .map(char => char + '\\u0336')\r\n        .join('')\r\n}\r\n\r\nexport function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function componentToHex(c) {\r\n    let hex = c.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\nexport function rgbToHex(r, g, b) {\r\n    return \"0x\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport function getRandomColor(type) {\r\n    let color = rgbToHex(getRandomInt(0, 155), getRandomInt(0, 155), getRandomInt(0, 155));\r\n    if (type == \"0x\") {\r\n        return color;\r\n    } else if (type == \"#\") {\r\n        return \"#\" + color.substring(2);\r\n    }\r\n    return color;\r\n}\r\n\r\nexport function convertColorHexTo0x(color) {\r\n    return \"0x\" + color.substring(1);\r\n}\r\n\r\nexport function convertColor0xToHex(color) {\r\n    return \"#\" + color.substring(2);\r\n}\r\n\r\nexport function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function getCenter(pos, width = 1) {\r\n    return ({ x: pos.x + ((canvas.grid.size / 2) * width), y: pos.y + ((canvas.grid.size / 2) * width) });\r\n}\r\n\r\nexport function getTileCenter(tile) {\r\n    //return position offset by tile width/2 and height/2\r\n    return ({ x: tile.x + (tile.width / 2), y: tile.y + (tile.height / 2) })\r\n}\r\n\r\nexport async function wait(ms) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\r\n\r\nexport function convertDuration(itemDuration, inCombat) {\r\n    // TAKEN FROM DYNAMIC ACTIVE EFFECTS --\r\n    const useTurns = inCombat && game.modules.get(\"times-up\")?.active;;\r\n    if (!itemDuration)\r\n        return { type: \"seconds\", seconds: 0, rounds: 0, turns: 0 };\r\n    if (!game.modules.get(\"times-up\")?.active) {\r\n        switch (itemDuration.units) {\r\n            case \"turn\":\r\n            case \"turns\": return { type: useTurns ? \"turns\" : \"seconds\", seconds: 1, rounds: 0, turns: itemDuration.value };\r\n            case \"round\":\r\n            case \"rounds\": return { type: useTurns ? \"turns\" : \"seconds\", seconds: itemDuration.value * CONFIG.time.roundTime, rounds: itemDuration.value, turns: 0 };\r\n            case \"second\":\r\n            case \"seconds\":\r\n                return { type: useTurns ? \"turns\" : \"seconds\", seconds: itemDuration.value, rounds: itemDuration.value / CONFIG.time.roundTime, turns: 0 };\r\n            case \"minute\":\r\n            case \"minutes\":\r\n                let durSeconds = itemDuration.value * 60;\r\n                if (durSeconds / CONFIG.time.roundTime <= 10) {\r\n                    return { type: useTurns ? \"turns\" : \"seconds\", seconds: durSeconds, rounds: durSeconds / CONFIG.time.roundTime, turns: 0 };\r\n                }\r\n                else {\r\n                    return { type: \"seconds\", seconds: durSeconds, rounds: durSeconds / CONFIG.time.roundTime, turns: 0 };\r\n                }\r\n            case \"hour\":\r\n            case \"hours\": return { type: \"seconds\", seconds: itemDuration.value * 60 * 60, rounds: 0, turns: 0 };\r\n            case \"day\":\r\n            case \"days\": return { type: \"seconds\", seconds: itemDuration.value * 60 * 60 * 24, rounds: 0, turns: 0 };\r\n            case \"week\":\r\n            case \"weeks\": return { type: \"seconds\", seconds: itemDuration.value * 60 * 60 * 24 * 7, rounds: 0, turns: 0 };\r\n            case \"month\":\r\n            case \"months\": return { type: \"seconds\", seconds: itemDuration.value * 60 * 60 * 24 * 30, rounds: 0, turns: 0 };\r\n            case \"year\":\r\n            case \"years\": return { type: \"seconds\", seconds: itemDuration.value * 60 * 60 * 24 * 30 * 365, rounds: 0, turns: 0 };\r\n            case \"inst\": return { type: useTurns ? \"turns\" : \"seconds\", seconds: 1, rounds: 0, turns: 1 };\r\n            default:\r\n                console.warn(\"dae | unknown time unit found\", itemDuration.units);\r\n                return { type: useTurns ? \"none\" : \"seconds\", seconds: undefined, rounds: undefined, turns: undefined };\r\n        }\r\n    }\r\n    else {\r\n        switch (itemDuration.units) {\r\n            case \"turn\":\r\n            case \"turns\": return { type: useTurns ? \"turns\" : \"seconds\", seconds: 1, rounds: 0, turns: itemDuration.value };\r\n            case \"round\":\r\n            case \"rounds\": return { type: useTurns ? \"turns\" : \"seconds\", seconds: itemDuration.value * CONFIG.time.roundTime, rounds: itemDuration.value, turns: 0 };\r\n            case \"second\": return { type: useTurns ? \"turns\" : \"seconds\", seconds: itemDuration.value, rounds: itemDuration.value / CONFIG.time.roundTime, turns: 0 };\r\n            default:\r\n                let interval = {};\r\n                interval[itemDuration.units] = itemDuration.value;\r\n                //@ts-ignore\r\n                const durationSeconds = window.SimpleCalendar.api.timestampPlusInterval(game.time.worldTime, interval) - game.time.worldTime;\r\n                if (durationSeconds / CONFIG.time.roundTime <= 10) {\r\n                    return { type: useTurns ? \"turns\" : \"seconds\", seconds: durationSeconds, rounds: Math.floor(durationSeconds / CONFIG.time.roundTime), turns: 0 };\r\n                }\r\n                else {\r\n                    return { type: \"seconds\", seconds: durationSeconds, rounds: Math.floor(durationSeconds / CONFIG.time.roundTime), turns: 0 };\r\n                }\r\n            //      default: return {type: combat ? \"none\" : \"seconds\", seconds: CONFIG.time.roundTime, rounds: 0, turns: 1};\r\n        }\r\n    }\r\n}\r\n\r\nexport function getSelfTarget(actor) {\r\n    if (actor.token)\r\n        return actor.token;\r\n    const speaker = ChatMessage.getSpeaker({ actor });\r\n    if (speaker.token)\r\n        return canvas.tokens?.get(speaker.token);\r\n    return new CONFIG.Token.documentClass(actor.getTokenData(), { actor });\r\n}\r\n\r\nexport function getAssetFilePaths(assetDBPaths) {\r\n    let assetFilePaths = [];\r\n    //console.log(assetDBPaths);\r\n    for (let DBPath of assetDBPaths) {\r\n        //console.log(DBPath);\r\n        let sequencesUnderPath = Sequencer.Database.getEntry(DBPath).constructor === Array ? Sequencer.Database.getEntry(DBPath) : [Sequencer.Database.getEntry(DBPath)];\r\n        //console.log(sequencesUnderPath);\r\n        for (let sequence of sequencesUnderPath) {\r\n            //console.log(sequence);\r\n            if (typeof sequence === \"string\") {\r\n                //console.log(sequencesUnderPath);\r\n                assetFilePaths.push(sequence);\r\n            }\r\n            else if (typeof sequence.file === \"string\") {\r\n                //console.log(sequencesUnderPath.file);\r\n                assetFilePaths.push(sequence.file);\r\n            }\r\n            else {\r\n                // iterate over sequencer.file using for...in\r\n                //console.log(sequence);\r\n                for (let file in sequence.file) {\r\n                    //console.log('Sequence under path not a string: ', file);\r\n                    if (sequence.file[file].constructor === Array) {\r\n                        for (let filePath of sequence.file[file]) {\r\n                            //console.log(filePath);\r\n                            assetFilePaths.push(filePath);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //console.log(sequence.file[file]);\r\n                        assetFilePaths.push(sequence.file[file]);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return assetFilePaths;\r\n}\r\n\r\nexport function getAllItemsNamed(name) {\r\n    let actors = game.actors.contents;\r\n    let scenes = game.scenes.contents;\r\n    let itemsWithName = [];\r\n    for (let actor of actors) {\r\n        let items = actor.items.filter(item => item.name == name && item.data.flags.advancedspelleffects?.enableASE);\r\n        items.forEach(item => {\r\n            itemsWithName.push(item);\r\n        });\r\n    }\r\n    for (let scene of scenes) {\r\n        let tokensInScene = Array.from(scene.tokens);\r\n        tokensInScene.forEach(token => {\r\n            let items = token.actor.items.filter(item => item.name == name && item.data.flags.advancedspelleffects?.enableASE);\r\n            items.forEach(item => {\r\n                itemsWithName.push(item);\r\n            });\r\n        });\r\n    }\r\n    return itemsWithName;\r\n}\r\n\r\nexport function firstGM() {\r\n    return game.users.find(u => u.isGM && u.active);\r\n}\r\n\r\nexport function isFirstGM() {\r\n    return game.user.id === firstGM()?.id;\r\n}\r\n\r\nexport function getDBOptions(rawSet) {\r\n    let returnData = [];\r\n    let tempObj = {};\r\n    let setOptions = Sequencer.Database.getPathsUnder(rawSet);\r\n\r\n    if (setOptions) {\r\n        setOptions.forEach((elem) => {\r\n            tempObj = {};\r\n            tempObj[elem] = capitalizeFirstLetter(elem);\r\n            returnData.push(tempObj);\r\n        });\r\n    }\r\n\r\n    return returnData;\r\n}\r\nexport function getDBOptionsIcons(rawSet) {\r\n    let returnData = [];\r\n    let tempObj = {};\r\n    let options = {};\r\n    const seqFiles = Sequencer.Database.getEntry(rawSet);\r\n    if (seqFiles.length > 0) {\r\n        seqFiles.forEach((elem) => {\r\n            tempObj = {};\r\n            tempObj[elem.dbPath] = elem.dbPath.substring(10);\r\n            returnData.push(tempObj);\r\n        });\r\n    }\r\n    return returnData;\r\n}\r\n\r\nexport function isMidiActive() {\r\n    if (game.modules.get(\"midi-qol\")?.active) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getContainedCustom(tokenD, crosshairs) {\r\n    let tokenCenter = getCenter(tokenD.data, tokenD.data.width);\r\n    let tokenCrosshairsDist = canvas.grid.measureDistance(tokenCenter, crosshairs);\r\n    let crosshairsDistance = crosshairs.data?.distance ?? crosshairs.distance;\r\n    //console.log(`Crosshairs distance: ${crosshairsDistance}`);\r\n    let distanceRequired = (crosshairsDistance - 2.5) + (2.5 * tokenD.data.width);\r\n    if ((tokenCrosshairsDist) < distanceRequired) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport async function checkCrosshairs(crosshairs) {\r\n    //console.log(crosshairs);\r\n    let collected;\r\n    while (crosshairs.inFlight) {\r\n        //wait for initial render\r\n        await warpgate.wait(100);\r\n        collected = warpgate.crosshairs.collect(crosshairs, ['Token'], getContainedCustom)['Token'];\r\n        let tokensOutOfRange = canvas.tokens.placeables.filter(token => {\r\n            return !collected.find(t => t.id === token.id);\r\n        });\r\n        crosshairs.label = `${collected.length} targets`;\r\n        for await (let tokenD of collected) {\r\n            let token = canvas.tokens.get(tokenD.id);\r\n            //console.log(token);\r\n            let markerEffect = 'jb2a.ui.indicator.red.01.01';\r\n            let markerApplied = Sequencer.EffectManager.getEffects({ name: `ase-crosshairs-marker-${token.id}` });\r\n            if (markerApplied.length == 0) {\r\n                new Sequence()\r\n                    .effect()\r\n                    .file(markerEffect)\r\n                    .atLocation(token)\r\n                    .scale(0.5)\r\n                    .offset({ y: 100 })\r\n                    .mirrorY()\r\n                    .persist()\r\n                    .name(`ase-crosshairs-marker-${token.id}`)\r\n                    .play();\r\n            }\r\n        }\r\n        for await (let token of tokensOutOfRange) {\r\n            let markerApplied = Sequencer.EffectManager.getEffects({ name: `ase-crosshairs-marker-${token.id}` });\r\n            if (markerApplied.length > 0) {\r\n                Sequencer.EffectManager.endEffects({ name: `ase-crosshairs-marker-${token.id}` });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanUpTemplateGridHighlights() {\r\n    const ASETemplates = canvas.scene?.templates.filter((template) => { return template.data.flags.advancedspelleffects }) ?? [];\r\n    for (let template of ASETemplates) {\r\n        const highlight = canvas.grid.getHighlightLayer(`Template.${template.id}`);\r\n        if (highlight) {\r\n            highlight.clear();\r\n        }\r\n    }\r\n}\r\n// function to detect when a line crosses another line\r\nexport function lineCrossesLine(a, b, c, d) {\r\n    const aSide = (d.x - c.x) * (a.y - c.y) - (d.y - c.y) * (a.x - c.x) > 0;\r\n    const bSide = (d.x - c.x) * (b.y - c.y) - (d.y - c.y) * (b.x - c.x) > 0;\r\n    const cSide = (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) > 0;\r\n    const dSide = (b.x - a.x) * (d.y - a.y) - (b.y - a.y) * (d.x - a.x) > 0;\r\n    //console.log(aSide, bSide, cSide, dSide);\r\n    return aSide !== bSide && cSide !== dSide;\r\n};\r\n\r\nexport function lineCrossesCircle(pointA, pointB, circleCenter, radius) {\r\n\r\n\r\n    const x = circleCenter.x;\r\n    const y = circleCenter.y;\r\n    const x1 = pointA.x;\r\n    const y1 = pointA.y;\r\n    const x2 = pointB.x;\r\n    const y2 = pointB.y;\r\n\r\n    let A = x - x1;\r\n    let B = y - y1;\r\n    let C = x2 - x1;\r\n    let D = y2 - y1;\r\n\r\n    let dot = A * C + B * D;\r\n    let len_sq = C * C + D * D;\r\n    let param = -1;\r\n    if (len_sq != 0)\r\n        param = dot / len_sq;\r\n\r\n    let xx, yy;\r\n\r\n    if (param < 0) {\r\n        xx = x1;\r\n        yy = y1;\r\n    }\r\n    else if (param > 1) {\r\n        xx = x2;\r\n        yy = y2;\r\n    }\r\n    else {\r\n        xx = x1 + param * C;\r\n        yy = y1 + param * D;\r\n    }\r\n\r\n    let dx = x - xx;\r\n    let dy = y - yy;\r\n    let distanceToLine = Math.sqrt(dx * dx + dy * dy);\r\n    //return true if distanceToLine < radius and at least one point is outside the circle grid y increases downwards\r\n    return distanceToLine < radius && (Math.abs(x - x1) > radius || Math.abs(y - y1) > radius || Math.abs(x - x2) > radius || Math.abs(y - y2) > radius);\r\n}\r\n\r\nexport function isPointOnLeft(a, b, c) {\r\n    return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) > 0;\r\n}\r\n\r\nexport function isPointNearLine(linePointA, linePointB, checkPoint, range) {\r\n\r\n    const x = checkPoint.x;\r\n    const y = checkPoint.y;\r\n    const x1 = linePointA.x;\r\n    const y1 = linePointA.y;\r\n    const x2 = linePointB.x;\r\n    const y2 = linePointB.y;\r\n\r\n    let A = x - x1;\r\n    let B = y - y1;\r\n    let C = x2 - x1;\r\n    let D = y2 - y1;\r\n\r\n    let dot = A * C + B * D;\r\n    let len_sq = C * C + D * D;\r\n    let param = -1;\r\n    if (len_sq != 0)\r\n        param = dot / len_sq;\r\n\r\n    let xx, yy;\r\n\r\n    if (param < 0) {\r\n        xx = x1;\r\n        yy = y1;\r\n    }\r\n    else if (param > 1) {\r\n        xx = x2;\r\n        yy = y2;\r\n    }\r\n    else {\r\n        xx = x1 + param * C;\r\n        yy = y1 + param * D;\r\n    }\r\n\r\n    let dx = x - xx;\r\n    let dy = y - yy;\r\n    let distanceToLine = Math.sqrt(dx * dx + dy * dy);\r\n    return distanceToLine <= range;\r\n}\r\n\r\nexport function isPointInCircle(circleCenter, checkPoint, insideRange, outsideRange) {\r\n    const x = circleCenter.x;\r\n    const y = circleCenter.y;\r\n    const x1 = checkPoint.x;\r\n    const y1 = checkPoint.y;\r\n\r\n    let dx = x - x1;\r\n    let dy = y - y1;\r\n    let distanceToPoint = Math.sqrt(dx * dx + dy * dy);\r\n    //console.log('distance: ', distanceToPoint);\r\n    return distanceToPoint > insideRange && distanceToPoint < outsideRange;\r\n}\r\n\r\n","import * as utilFunctions from \"./utilityFunctions.js\";\r\n\r\nexport var aseSocket = undefined;\r\n\r\nexport function setupASESocket() {\r\n\r\n    if (game.modules.get(\"socketlib\")?.active) {\r\n        aseSocket = window.socketlib.registerModule(\"advancedspelleffects\");\r\n        aseSocket.register(\"placeTiles\", placeTiles);\r\n        aseSocket.register(\"placeWalls\", placeWalls);\r\n        aseSocket.register(\"deleteTiles\", deleteTiles);\r\n        aseSocket.register(\"deleteTemplates\", deleteTemplates);\r\n        aseSocket.register(\"updateFlag\", updateFlag);\r\n        aseSocket.register(\"removeFlag\", removeFlag);\r\n        aseSocket.register(\"moveWalls\", moveWalls);\r\n        aseSocket.register(\"moveTile\", moveTile);\r\n        aseSocket.register(\"fadeTile\", fadeTile);\r\n        aseSocket.register(\"placeSounds\", placeSounds);\r\n        aseSocket.register(\"moveSound\", moveSound);\r\n        aseSocket.register(\"updateDocument\", updateDocument);\r\n        aseSocket.register(\"updateDocuments\", updateDocuments);\r\n        aseSocket.register(\"checkGMAlwaysAccept\", checkGMAlwaysAccept);\r\n        aseSocket.register(\"createGMChat\", createGMChat);\r\n    }\r\n};\r\n\r\nasync function createGMChat(data) {\r\n        let gm = utilFunctions.firstGM();\r\n        await ChatMessage.create({ content: data.content, whisper: ChatMessage.getWhisperRecipients(gm.name) });\r\n        await ui.chat.scrollBottom();\r\n        return;\r\n}\r\n\r\nasync function checkGMAlwaysAccept() {\r\n\r\n    const alwaysAccept = game.settings.get(\"warpgate\", \"alwaysAccept\");\r\n    console.log(\"GM Always Accept: \", alwaysAccept);\r\n    if (!alwaysAccept) {\r\n        ui.notifications.info(\"Warpgate 'Always Accept' is disabled. You must manually accept the mutation.\");\r\n    }\r\n}\r\n\r\nasync function updateDocument(objectId, updateData) {\r\n    let object = canvas.scene.tiles.get(objectId)\r\n        || canvas.scene.tokens.get(objectId)\r\n        || canvas.scene.drawings.get(objectId)\r\n        || canvas.scene.walls.get(objectId)\r\n        || canvas.scene.lights.get(objectId)\r\n        || game.scenes.get(objectId)\r\n        || game.users.get(objectId)\r\n        || game.actors.get(objectId);\r\n    if (object) {\r\n        await object.update(updateData, { animate: false });\r\n    }\r\n}\r\nasync function updateDocuments(objectType = '', updateData) {\r\n\r\n    if (updateData.length > 0 && objectType != '') {\r\n        await canvas.scene.updateEmbeddedDocuments(objectType, updateData);\r\n    }\r\n\r\n}\r\n\r\nasync function updateFlag(objectId, flag, value) {\r\n    let object = canvas.scene.tiles.get(objectId)\r\n        || canvas.scene.tokens.get(objectId)\r\n        || canvas.scene.drawings.get(objectId)\r\n        || canvas.scene.walls.get(objectId)\r\n        || canvas.scene.lights.get(objectId)\r\n        || game.scenes.get(objectId)\r\n        || game.users.get(objectId);\r\n    if (object) {\r\n        await object.setFlag(\"advancedspelleffects\", flag, value);\r\n    }\r\n}\r\n\r\nasync function removeFlag(objectId, flag) {\r\n    let object = canvas.scene.tiles.get(objectId)\r\n        || canvas.scene.tokens.get(objectId)\r\n        || canvas.scene.drawings.get(objectId)\r\n        || canvas.scene.walls.get(objectId)\r\n        || canvas.scene.lights.get(objectId)\r\n        || game.scenes.get(objectId)\r\n        || game.users.get(objectId);\r\n    if (object) {\r\n        await object.unsetFlag(\"advancedspelleffects\", flag);\r\n    }\r\n}\r\n\r\nasync function placeTiles(tileData) {\r\n    return (await canvas.scene.createEmbeddedDocuments(\"Tile\", tileData));\r\n}\r\n\r\nasync function deleteTiles(tileIds) {\r\n    await canvas.scene.deleteEmbeddedDocuments(\"Tile\", tileIds);\r\n}\r\n\r\nasync function deleteTemplates(tileIds) {\r\n    await canvas.scene.deleteEmbeddedDocuments(\"MeasuredTemplate\", tileIds);\r\n}\r\n\r\nasync function moveTile(newLocation, tileId) {\r\n    let tile = canvas.scene.tiles.get(tileId);\r\n    const distance = utilFunctions.getDistanceClassic({ x: tile.data.x + canvas.grid.size, y: tile.data.y + canvas.grid.size }, { x: newLocation.x, y: newLocation.y });\r\n    //console.log('Distance: ', distance);\r\n\r\n    const moveSpeed = Math.floor(distance / 50);\r\n    //console.log('Move Speed: ', moveSpeed);\r\n\r\n    let moveTileSeq = new Sequence(\"Advanced Spell Effects\")\r\n        .animation()\r\n        .on(tile)\r\n        .moveTowards(newLocation, { ease: \"easeInOutQuint\" })\r\n        .offset({ x: -canvas.grid.size, y: -canvas.grid.size })\r\n        .moveSpeed(moveSpeed)\r\n    await moveTileSeq.play();\r\n\r\n\r\n}\r\n\r\nasync function fadeTile(fade, tileId) {\r\n    //console.log(\"Fading in Moonbeam Tile...\");\r\n    let tile = canvas.scene.tiles.get(tileId);\r\n    if (!tile) {\r\n        ui.notifications.error(game.i18n.localize(\"ASE.TileNotFound\"));\r\n        return;\r\n    }\r\n    let fadeTileSeq = new Sequence(\"Advanced Spell Effects\")\r\n        .animation()\r\n        .on(tile);\r\n    if (fade.type == \"fadeIn\") {\r\n        fadeTileSeq.fadeIn(fade.duration);\r\n    }\r\n    else if (fade.type == \"fadeOut\") {\r\n        fadeTileSeq.fadeOut(fade.duration);\r\n    }\r\n\r\n    await fadeTileSeq.play();\r\n\r\n}\r\n\r\nasync function placeWalls(wallData) {\r\n    return (await canvas.scene.createEmbeddedDocuments(\"Wall\", wallData));\r\n}\r\n\r\nasync function moveWalls(tileId, wallType, numWalls) {\r\n    let tileD = canvas.scene.tiles.get(tileId) ?? canvas.scene.templates.get(tileId);\r\n    let placedX = tileD.data.x + (tileD.data.width / 2);\r\n    let placedY = tileD.data.y + (tileD.data.height / 2);\r\n    let outerCircleRadius = tileD.data.width / 2.2;\r\n    let wall_angles = 2 * Math.PI / numWalls;\r\n    let walls = [];\r\n    let wallDocuments = [];\r\n    let wallPoints = [];\r\n\r\n    walls = await Tagger.getByTag([`${wallType}Wall-${tileD.id}`]);\r\n    walls.forEach((wall) => {\r\n        wallDocuments.push(wall.id);\r\n    });\r\n    walls = [];\r\n    if (canvas.scene.getEmbeddedDocument(\"Wall\", wallDocuments[0])) {\r\n        await canvas.scene.deleteEmbeddedDocuments(\"Wall\", wallDocuments);\r\n        for (let i = 0; i < numWalls; i++) {\r\n            let x = placedX + outerCircleRadius * Math.cos(i * wall_angles);\r\n            let y = placedY + outerCircleRadius * Math.sin(i * wall_angles);\r\n            wallPoints.push({ x: x, y: y });\r\n        }\r\n        for (let i = 0; i < wallPoints.length; i++) {\r\n            if (i < wallPoints.length - 1) {\r\n                walls.push({\r\n                    c: [wallPoints[i].x, wallPoints[i].y, wallPoints[i + 1].x, wallPoints[i + 1].y],\r\n                    flags: { tagger: { tags: [`${wallType}Wall-${tileD.id}`] } },\r\n                    move: 0\r\n                })\r\n            }\r\n            else {\r\n                walls.push({\r\n                    c: [wallPoints[i].x, wallPoints[i].y, wallPoints[0].x, wallPoints[0].y],\r\n                    flags: { tagger: { tags: [`${wallType}Wall-${tileD.id}`] } },\r\n                    move: 0\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n    await canvas.scene.createEmbeddedDocuments(\"Wall\", walls);\r\n}\r\n\r\nasync function placeSounds(soundData, delay) {\r\n    await warpgate.wait(delay);\r\n    return (await canvas.scene.createEmbeddedDocuments(\"AmbientSound\", soundData));\r\n}\r\n\r\nasync function moveSound(sourceId, newLoc) {\r\n    let source = canvas.scene.tiles.get(sourceId)\r\n        || canvas.scene.tokens.get(sourceId);\r\n    if (!source) {\r\n        ui.notifications.error(game.i18n.localize(\"ASE.SoundSourceNotFound\"));\r\n        return;\r\n    }\r\n    if (source.getFlag(\"advancedspelleffects\", \"moving\")) {\r\n        return;\r\n    }\r\n    const attachedSounds = (await Tagger.getByTag([`ase-source-${sourceId}`]));\r\n    if (!attachedSounds.length > 0) {\r\n        ui.notifications.error(game.i18n.localize(\"ASE.SoundNotFound\"));\r\n        return;\r\n    }\r\n    const oldSoundData = attachedSounds[0].data;\r\n    //console.log('Old Sound Data: ', oldSoundData);\r\n    const sourceWidth = source.data.hitArea?.width || source.data.width;\r\n    const sourceHeight = source.data.hitArea?.height || source.data.height;\r\n    const newSoundData = [{\r\n        easing: oldSoundData.easing,\r\n        path: oldSoundData.path,\r\n        radius: oldSoundData.radius,\r\n        type: oldSoundData.type,\r\n        volume: oldSoundData.volume,\r\n        x: newLoc.x,\r\n        y: newLoc.y,\r\n        flags: oldSoundData.flags\r\n    }];\r\n    //console.log('New Sound Data: ', newSoundData);\r\n    if (oldSoundData.x != newSoundData[0].x || oldSoundData.y != newSoundData[0].y) {\r\n        await canvas.scene.createEmbeddedDocuments(\"AmbientSound\", newSoundData);\r\n        if (canvas.scene.getEmbeddedDocument(\"AmbientSound\", attachedSounds[0].id)) {\r\n            await canvas.scene.deleteEmbeddedDocuments(\"AmbientSound\", attachedSounds.map(s => s.id));\r\n        }\r\n    }\r\n\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class animateDeadDialog extends FormApplication {\r\n    constructor(corpses, options = { raiseLimit: 1, effectSettings: { summons: { skeleton: { actor: \"\" }, zombie: { actor: \"\" } }, effectAColor: \"blue\", effectBColor: \"blue\", magicSchool: \"evocation\", magicSchoolColor: \"blue\" } }) {\r\n        super(options);\r\n        foundry.utils.mergeObject(this.options, options);\r\n        this.data = {};\r\n        this.data.corpses = corpses;\r\n        this.data.noCorpses = corpses.length === 0;\r\n        this.data.raiseLimit = this.options.raiseLimit;\r\n        this.data.effectSettings = this.options.effectSettings;\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            template: './modules/advancedspelleffects/src/templates/animate-dead-dialog.html',\r\n            id: 'animate-dead-dialog',\r\n            title: game.i18n.localize(\"ASE.AnimateDead\"),\r\n            resizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            close: () => { ui.notify }\r\n        });\r\n    }\r\n\r\n    async getData() {\r\n        return { data: this.data };\r\n    }\r\n\r\n    async _updateObject(event, formData) { }\r\n\r\n    activateListeners(html) {\r\n        //console.log(html);\r\n        super.activateListeners(html);\r\n        html.find('.corpseToken').on(\"mouseenter\", function (e) {\r\n            let token = canvas.tokens.get($(this).attr('id'));\r\n            token._onHoverIn(e);\r\n        });\r\n        html.find('.corpseToken').on(\"mouseleave\", function (e) {\r\n            let token = canvas.tokens.get($(this).attr('id'));\r\n            token._onHoverOut(e);\r\n        });\r\n        html.find('.raiseCorpse').on(\"click\", this._raiseCorpse);\r\n    }\r\n\r\n    async _raiseCorpse(event) {\r\n        let corpseToken = canvas.tokens.get($(this).attr('id'));\r\n        const corpseType = event.currentTarget.innerText.toLowerCase();\r\n\r\n        const effectAColor = document.getElementById(\"hdnEffectAColor\").value;\r\n        const effectASound = document.getElementById(\"hdnEffectASound\").value;\r\n        const effectASoundDelay = document.getElementById(\"hdnEffectASoundDelay\").value;\r\n        const effectASoundVolume = document.getElementById(\"hdnEffectASoundVolume\").value;\r\n\r\n        const effectBColor = document.getElementById(\"hdnEffectBColor\").value;\r\n        const effectBSound = document.getElementById(\"hdnEffectBSound\").value;\r\n        const effectBSoundDelay = document.getElementById(\"hdnEffectBSoundDelay\").value;\r\n        const effectBSoundVolume = document.getElementById(\"hdnEffectBSoundVolume\").value;\r\n\r\n        const magicSchool = document.getElementById(\"hdnMagicSchool\").value;\r\n        const magicSchoolColor = document.getElementById(\"hdnMagicSchoolColor\").value;\r\n        const magicSchoolSound = document.getElementById(\"hdnMagicSchoolSound\").value;\r\n        const magicSchoolSoundDelay = document.getElementById(\"hdnMagicSchoolSoundDelay\").value;\r\n        const magicSchoolVolume = document.getElementById(\"hdnMagicSchoolVolume\").value;\r\n        const magicSchoolSoundOutro = document.getElementById(\"hdnMagicSchoolSoundOutro\").value;\r\n        const magicSchoolSoundDelayOutro = document.getElementById(\"hdnMagicSchoolSoundDelayOutro\").value;\r\n        const magicSchoolVolumeOutro = document.getElementById(\"hdnMagicSchoolVolumeOutro\").value;\r\n\r\n        const effectSettings = {\r\n            token: corpseToken,\r\n            summonTokenData: {},\r\n            colorA: effectAColor,\r\n            soundA: effectASound,\r\n            soundADelay: effectASoundDelay,\r\n            soundAVolume: effectASoundVolume,\r\n            colorB: effectBColor,\r\n            soundB: effectBSound,\r\n            soundBDelay: effectBSoundDelay,\r\n            soundBVolume: effectBSoundVolume,\r\n            magicSchool: magicSchool,\r\n            magicSchoolColor: magicSchoolColor,\r\n            magicSchoolSound: magicSchoolSound,\r\n            magicSchoolSoundDelay: magicSchoolSoundDelay,\r\n            magicSchoolVolume: magicSchoolVolume,\r\n            magicSchoolSoundOutro: magicSchoolSoundOutro,\r\n            magicSchoolSoundDelayOutro: magicSchoolSoundDelayOutro,\r\n            magicSchoolVolumeOutro: magicSchoolVolumeOutro\r\n        };\r\n\r\n        const zombieActorId = document.getElementById(\"hdnZombieActorId\").value;\r\n        const skeletonActorId = document.getElementById(\"hdnSkeletonActorId\").value;\r\n        let zombieTokenData;\r\n        let skeletonTokenData;\r\n        if (zombieActorId && skeletonActorId) {\r\n            zombieTokenData = (await game.actors.get(zombieActorId).getTokenData()).toObject();\r\n            skeletonTokenData = (await game.actors.get(skeletonActorId).getTokenData()).toObject();\r\n            delete zombieTokenData.x;\r\n            delete zombieTokenData.y;\r\n            delete skeletonTokenData.x;\r\n            delete skeletonTokenData.y;\r\n            zombieTokenData = mergeObject(corpseToken.data.toObject(), zombieTokenData, { inplace: false });\r\n            skeletonTokenData = mergeObject(corpseToken.data.toObject(), skeletonTokenData, { inplace: false });\r\n        }\r\n        else {\r\n            ui.notifications.error(game.i18n.localize(\"ASE.AssociatedActorNotFoundNotification\"));\r\n            return;\r\n        }\r\n        switch (corpseType) {\r\n            case \"zombie\":\r\n                effectSettings.summonTokenData = zombieTokenData;\r\n                break;\r\n            case \"skeleton\":\r\n                effectSettings.summonTokenData = skeletonTokenData;\r\n                break;\r\n        }\r\n        await playEffect(effectSettings);\r\n\r\n        console.log(`Raised ${corpseToken.name} as a ${event.currentTarget.innerText}!`);\r\n        document.getElementById(\"raiseLimit\").value--;\r\n        document.getElementById(corpseToken.id).remove();\r\n        if (document.getElementById(\"raiseLimit\").value == 0) {\r\n            ui.notifications.info(game.i18n.localize(\"ASE.RaisedAllCorpsesNotification\"));\r\n            document.querySelector('button[type=\"submit\"]').click();\r\n        }\r\n        async function playEffect(effectSettings) {\r\n\r\n            console.log(effectSettings);\r\n            const colorA = effectSettings.colorA;\r\n            const soundA = effectSettings.soundA ?? \"\";\r\n            const soundADelay = Number(effectSettings.soundADelay) ?? 0;\r\n            const soundAVolume = effectSettings.soundAVolume == \"\" ? 1 : Number(effectSettings.soundAVolume);\r\n\r\n            const colorB = effectSettings.colorB;\r\n            const soundB = effectSettings.soundB ?? \"\";\r\n            const soundBDelay = Number(effectSettings.soundBDelay) ?? 0;\r\n            const soundBVolume = effectSettings.soundBVolume == \"\" ? 1 : Number(effectSettings.soundBVolume);\r\n\r\n            const schoolName = effectSettings.magicSchool;\r\n            const schoolColor = effectSettings.magicSchoolColor;\r\n            const schoolSound = effectSettings.magicSchoolSound ?? \"\";\r\n            const SchoolSoundDelay = Number(effectSettings.magicSchoolSoundDelay) ?? 0;\r\n            const schoolVolume = effectSettings.magicSchoolVolume == \"\" ? 1 : Number(effectSettings.magicSchoolVolume);\r\n\r\n            const schoolSoundOutro = effectSettings.magicSchoolSoundOutro ?? \"\";\r\n            const schoolSoundDelayOutro = Number(effectSettings.magicSchoolSoundDelayOutro) ?? 0;\r\n            const schoolVolumeOutro = effectSettings.magicSchoolVolumeOutro == \"\" ? 1 : Number(effectSettings.magicSchoolVolumeOutro);\r\n\r\n            const token = effectSettings.token;\r\n            const summonTokenData = effectSettings.summonTokenData;\r\n\r\n            // console.log(\"Corpse to Mutate: \", corpseDoc);\r\n            let animLoc = utilFunctions.getCenter(token);\r\n            let portalAnimIntro = `jb2a.magic_signs.circle.02.${schoolName}.intro.${schoolColor}`;\r\n            let portalAnimLoop = `jb2a.magic_signs.circle.02.${schoolName}.loop.${schoolColor}`;\r\n            let portalAnimOutro = `jb2a.magic_signs.circle.02.${schoolName}.outro.${schoolColor}`;\r\n            let effectAAnim = `jb2a.eldritch_blast.${colorA}.05ft`;\r\n            let effectBAnim = `jb2a.energy_strands.complete.${colorB}.01`;\r\n\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(schoolSound)\r\n                .delay(SchoolSoundDelay)\r\n                .volume(schoolVolume)\r\n                .playIf(schoolSound != \"\")\r\n                .effect()\r\n                .file(portalAnimIntro)\r\n                .atLocation(animLoc)\r\n                .belowTokens()\r\n                .scale(0.25)\r\n                .waitUntilFinished(-2000)\r\n                .effect()\r\n                .file(portalAnimLoop)\r\n                .atLocation(animLoc)\r\n                .belowTokens()\r\n                .scale(0.25)\r\n                .persist()\r\n                .fadeOut(750, { ease: \"easeInQuint\" })\r\n                .name(\"portalAnimLoop\")\r\n                .sound()\r\n                .file(soundA)\r\n                .delay(soundADelay)\r\n                .volume(soundAVolume)\r\n                .playIf(soundA != \"\")\r\n                .effect()\r\n                .file(effectAAnim)\r\n                .atLocation(animLoc)\r\n                .waitUntilFinished(-1000)\r\n                .endTime(3300)\r\n                .playbackRate(0.7)\r\n                .scaleOut(0, 500)\r\n                .scale(1.5)\r\n                .zIndex(1)\r\n                .center()\r\n                .sound()\r\n                .file(soundB)\r\n                .delay(soundBDelay)\r\n                .volume(soundBVolume)\r\n                .playIf(soundB != \"\")\r\n                .effect()\r\n                .file(effectBAnim)\r\n                .atLocation(animLoc)\r\n                .zIndex(1)\r\n                .scale(0.4)\r\n                .fadeOut(500)\r\n                .scaleIn(0, 1000, { ease: \"easeInOutBack\" })\r\n                .waitUntilFinished(-2250)\r\n                .thenDo(async () => {\r\n                    try {\r\n                        let corpseDoc = token.document;\r\n                        let summonActorData = game.actors.get(summonTokenData.actorId).data.toObject();\r\n                        delete summonActorData.items;\r\n                        delete summonActorData.effects;\r\n                        delete summonActorData._id;\r\n                        const sheet = token.actor.sheet;\r\n                        await token.actor.sheet.close();\r\n                        token.actor._sheet = null;\r\n                        delete token.actor.apps[sheet.appId];\r\n                        let mutateUpdates = { token: summonTokenData, actor: summonActorData };\r\n                        await aseSocket.executeAsGM(\"checkGMAlwaysAccept\");\r\n                        await warpgate.mutate(corpseDoc, mutateUpdates);\r\n                    }\r\n                    catch (err) {\r\n                        console.log(err);\r\n                    };\r\n                })\r\n                .sound()\r\n                .file(schoolSoundOutro)\r\n                .delay(schoolSoundDelayOutro)\r\n                .volume(schoolVolumeOutro)\r\n                .playIf(schoolSoundOutro != \"\")\r\n                .effect()\r\n                .file(portalAnimOutro)\r\n                .atLocation(animLoc)\r\n                .belowTokens()\r\n                .scale(0.25)\r\n                .thenDo(async () => {\r\n                    await Sequencer.EffectManager.endEffects({ name: \"portalAnimLoop\" });\r\n                })\r\n                .play()\r\n        }\r\n    }\r\n\r\n}\r\nexport default animateDeadDialog;","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport async function AnimateDeadSequence(effectSettings, token, summonTokenData) {\r\n\r\n    console.log('ASE Animate Dead Sequence: ', effectSettings);\r\n    const colorA = effectSettings.effectAColor ?? 'green';\r\n    const soundA = effectSettings.effectASound ?? \"\";\r\n    const soundADelay = Number(effectSettings.effectASoundDelay) ?? 0;\r\n    const soundAVolume = effectSettings.effectASoundVolume == \"\" ? 1 : Number(effectSettings.effectASoundVolume);\r\n\r\n    const colorB = effectSettings.effectBColor;\r\n    const soundB = effectSettings.effectBSound ?? \"\";\r\n    const soundBDelay = Number(effectSettings.effectBSoundDelay) ?? 0;\r\n    const soundBVolume = effectSettings.effectBSoundVolume == \"\" ? 1 : Number(effectSettings.effectBSoundVolume);\r\n\r\n    const schoolName = effectSettings.magicSchool;\r\n    const schoolColor = effectSettings.magicSchoolColor;\r\n    const schoolSound = effectSettings.magicSchoolSound ?? \"\";\r\n    const SchoolSoundDelay = Number(effectSettings.magicSchoolSoundDelay) ?? 0;\r\n    const schoolVolume = effectSettings.magicSchoolVolume == \"\" ? 1 : Number(effectSettings.magicSchoolVolume);\r\n\r\n    const schoolSoundOutro = effectSettings.magicSchoolSoundOutro ?? \"\";\r\n    const schoolSoundDelayOutro = Number(effectSettings.magicSchoolSoundDelayOutro) ?? 0;\r\n    const schoolVolumeOutro = effectSettings.magicSchoolVolumeOutro == \"\" ? 1 : Number(effectSettings.magicSchoolVolumeOutro);\r\n\r\n\r\n    // console.log(\"Corpse to Mutate: \", corpseDoc);\r\n    let animLoc = utilFunctions.getCenter(token);\r\n    let portalAnimIntro = `jb2a.magic_signs.circle.02.${schoolName}.intro.${schoolColor}`;\r\n    let portalAnimLoop = `jb2a.magic_signs.circle.02.${schoolName}.loop.${schoolColor}`;\r\n    let portalAnimOutro = `jb2a.magic_signs.circle.02.${schoolName}.outro.${schoolColor}`;\r\n    let effectAAnim = `jb2a.eldritch_blast.${colorA}.05ft`;\r\n    let effectBAnim = `jb2a.energy_strands.complete.${colorB}.01`;\r\n\r\n    let returnSeq = new Sequence(\"Advanced Spell Effects\")\r\n                        .sound()\r\n                        .file(schoolSound)\r\n                        .delay(SchoolSoundDelay)\r\n                        .volume(schoolVolume)\r\n                        .playIf(schoolSound != \"\")\r\n                        .effect()\r\n                        .file(portalAnimIntro)\r\n                        .atLocation(animLoc)\r\n                        .belowTokens()\r\n                        .scale(0.25)\r\n                        .waitUntilFinished(-2000)\r\n                        .effect()\r\n                        .file(portalAnimLoop)\r\n                        .atLocation(animLoc)\r\n                        .belowTokens()\r\n                        .scale(0.25)\r\n                        .persist()\r\n                        .fadeOut(750, { ease: \"easeInQuint\" })\r\n                        .name(\"portalAnimLoop\")\r\n                        .sound()\r\n                        .file(soundA)\r\n                        .delay(soundADelay)\r\n                        .volume(soundAVolume)\r\n                        .playIf(soundA != \"\")\r\n                        .effect()\r\n                        .file(effectAAnim)\r\n                        .atLocation(animLoc)\r\n                        .waitUntilFinished(-1000)\r\n                        .endTime(3300)\r\n                        .playbackRate(0.7)\r\n                        .scaleOut(0, 500)\r\n                        .scale(1.5)\r\n                        .zIndex(1)\r\n                        .center()\r\n                        .sound()\r\n                        .file(soundB)\r\n                        .delay(soundBDelay)\r\n                        .volume(soundBVolume)\r\n                        .playIf(soundB != \"\")\r\n                        .effect()\r\n                        .file(effectBAnim)\r\n                        .atLocation(animLoc)\r\n                        .zIndex(1)\r\n                        .scale(0.4)\r\n                        .fadeOut(500)\r\n                        .scaleIn(0, 1000, { ease: \"easeInOutBack\" })\r\n                        .waitUntilFinished(-1500)\r\n                        .thenDo(async () => {\r\n                            try {\r\n                                let corpseDoc = token.document;\r\n                                let summonActorData = game.actors.get(summonTokenData.actorId).data.toObject();\r\n                                //delete summonActorData.items;\r\n                                //delete summonActorData.effects;\r\n                                delete summonActorData._id;\r\n                                const sheet = token.actor.sheet;\r\n                                await token.actor.sheet.close();\r\n                                token.actor._sheet = null;\r\n                                delete token.actor.apps[sheet.appId];\r\n                                let mutateUpdates = { token: summonTokenData, actor: summonActorData };\r\n                                await aseSocket.executeAsGM(\"checkGMAlwaysAccept\");\r\n                                await warpgate.mutate(corpseDoc, mutateUpdates);\r\n                            }\r\n                            catch (err) {\r\n                                console.log(err);\r\n                            };\r\n                        })\r\n                        .sound()\r\n                        .file(schoolSoundOutro)\r\n                        .delay(schoolSoundDelayOutro)\r\n                        .volume(schoolVolumeOutro)\r\n                        .playIf(schoolSoundOutro != \"\")\r\n                        .effect()\r\n                        .file(portalAnimOutro)\r\n                        .atLocation(animLoc)\r\n                        .belowTokens()\r\n                        .scale(0.25)\r\n                        .thenDo(async () => {\r\n                            await Sequencer.EffectManager.endEffects({ name: \"portalAnimLoop\" });\r\n                        });\r\n    return returnSeq;\r\n}","<svelte:options accessors={true} />\r\n\r\n\r\n<script> \r\n    import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n    import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n    import { getContext } from \"svelte\";\r\n    import { setContext } from \"svelte\";\r\n    import { writable } from 'svelte/store';\r\n    import { onDestroy } from 'svelte';\r\n\r\n    import { AnimateDeadSequence } from \"../sequences/AnimateDeadSequence.js\";\r\n\r\n    export let elementRoot;\r\n    export let corpses;\r\n    export let raiseLimit;\r\n    export let effectSettings;\r\n\r\n    let raisesLeft = raiseLimit;\r\n\r\n    const { application } = getContext(\"external\");\r\n    let form = void 0;\r\n\r\n    console.log(\"Animate Dead App Shell: ------ Entering App Shell -------\");\r\n    console.log(\"Animate Dead App Shell: corpses: \", corpses);\r\n    console.log(\"Animate Dead App Shell: raiseLimit: \", raiseLimit);\r\n    console.log(\"Animate Dead App Shell: effectSettings: \", effectSettings);\r\n\r\n    onDestroy(async () => {\r\n\t\tconsole.log('the component is being destroyed...');\r\n\t});\r\n\r\n    async function raiseCorpse(corpse, type){\r\n        console.log(`Animate Dead App Shell: Raising ${corpse.name ?? 'body'}as ${type}: `, corpse);\r\n\r\n        raisesLeft--;\r\n        corpses.splice(corpses.indexOf(corpse), 1);\r\n        corpses = corpses;\r\n\r\n        let zombieTokenData = (await game.actors.get(effectSettings.zombieActor).getTokenData()).toObject();\r\n        let skeletonTokenData = (await game.actors.get(effectSettings.skeletonActor).getTokenData()).toObject();\r\n\r\n        if(!zombieTokenData || !skeletonTokenData){\r\n            ui.notifications.error(game.i18n.localize(\"ASE.AssociatedActorNotFoundNotification\"));\r\n            console.log(\"Animate Dead App Shell: ERROR: Zombie or Skeleton Token Data not found!, Check spell Settings to ensure the actors are set up\");\r\n            if(raisesLeft <= 0 || corpses.length == 0){\r\n                console.log(\"Animate Dead App Shell: All raises used up, closing app...\");\r\n                application.close();\r\n            }\r\n            return;\r\n        }\r\n\r\n        delete zombieTokenData.x;\r\n        delete zombieTokenData.y;\r\n        delete skeletonTokenData.x;\r\n        delete skeletonTokenData.y;\r\n        zombieTokenData = mergeObject(corpse.data.toObject(), zombieTokenData, { inplace: false });\r\n        skeletonTokenData = mergeObject(corpse.data.toObject(), skeletonTokenData, { inplace: false });\r\n\r\n        let effectSequence;\r\n\r\n        switch (type) {\r\n            case \"zombie\":\r\n                effectSequence = await AnimateDeadSequence(effectSettings, corpse, zombieTokenData);\r\n                break;\r\n            case \"skeleton\":\r\n                effectSequence = await AnimateDeadSequence(effectSettings, corpse, skeletonTokenData);\r\n                break;\r\n        }\r\n        console.log(\"Animate Dead App Shell: effectSequence: \", effectSequence);\r\n        effectSequence.play();\r\n        if(raisesLeft <= 0 || corpses.length == 0){\r\n            console.log(\"Animate Dead App Shell: All raises used up, closing app...\");\r\n            application.close();\r\n        }\r\n    }\r\n</script>\r\n\r\n<ApplicationShell\r\n    bind:elementRoot>\r\n    <form\r\n        bind:this={form}\r\n        on:submit|preventDefault\r\n        autocomplete=\"off\"\r\n        id=\"animte-dead-shell\"\r\n        class=\"overview\">\r\n        <section class=\"content\">\r\n            <p>{localize(\"ASE.AnimateDeadDialogRaiseMessage\")} {raisesLeft}</p>\r\n                <table width=\"100%\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>{localize(\"ASE.AnimateDeadDialogHeaderCorpse\")}</th>\r\n                            <th>{localize(\"ASE.AnimateDeadDialogHeaderRaise\")}</th>\r\n                        </tr>\r\n                        {#each corpses as corpse (corpse.id)}\r\n                            <tr class='corpseToken' id={corpse.id} on:mouseenter=\"{corpse._onHoverIn()}\" on:mouseleave=\"{corpse._onHoverOut()}\">\r\n                                <td><img src=\"{corpse.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\" alt=\"Token\"> -\r\n                                    {corpse.name}\r\n                                </td>\r\n                                <td><button id=\"{corpse.id}-zombie\" on:click={raiseCorpse(corpse,\"zombie\")}>{localize(\"ASE.ZombieLabel\")}\r\n                                </td>\r\n                                <td><button id=\"{corpse.id}-skeleton\" on:click={raiseCorpse(corpse, \"skeleton\")}>{localize(\"ASE.SkeletonLabel\")}</td>\r\n                            </tr>\r\n                        {/each}\r\n                    </tbody>\r\n                </table>\r\n        </section>\r\n</form>\r\n</ApplicationShell>","import { SvelteApplication } from '@typhonjs-fvtt/runtime/svelte/application';\r\nimport AnimateDeadAppShell from './AnimateDeadAppShell.svelte';\r\nimport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n\r\nexport default class AnimateDeadDialog extends SvelteApplication {\r\n    constructor(data) {\r\n        super({\r\n            title: localize(\"ASE.AnimateDead\"),\r\n            id: 'animate-dead-dialog',\r\n            zIndex: 102,\r\n            svelte: {\r\n                class: AnimateDeadAppShell,\r\n                target: document.body,\r\n                props: {\r\n                    corpses: data.corpses,\r\n                    raiseLimit: data.raiseLimit,\r\n                    effectSettings: data.effectSettings\r\n                }\r\n            }\r\n        });\r\n        console.log(\"ASE: Launching Animate Dead Dialog!\", data);\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            resizable: true,\r\n            minimizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            closeOnSubmit: true,\r\n        })\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\n\r\nexport class darkness {\r\n\r\n    static registerHooks() {\r\n        if (!game.user.isGM) return;\r\n        Hooks.on(\"updateTile\", darkness._updateTile);\r\n        Hooks.on(\"deleteTile\", darkness._deleteTile);\r\n    }\r\n\r\n    static async _updateTile(tileD) {\r\n        await aseSocket.executeAsGM(\"moveWalls\", tileD.id, 'Darkness', 12);\r\n    }\r\n\r\n    static async _deleteTile(tileD) {\r\n        let walls = [];\r\n        let wallDocuments = [];\r\n        walls = await Tagger.getByTag([`DarknessWall-${tileD.id}`]);\r\n        walls.forEach((wall) => {\r\n            wallDocuments.push(wall.id);\r\n        });\r\n        //console.log(\"Deleting walls: \" + wallDocuments);\r\n        if (canvas.scene.getEmbeddedDocument(\"Wall\", wallDocuments[0])) {\r\n            await canvas.scene.deleteEmbeddedDocuments(\"Wall\", wallDocuments);\r\n        }\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        //console.log(\"Handling concentration removal for ASE Darknes...\");\r\n        let darknessTiles = await Tagger.getByTag(`DarknessTile-${casterActor.id}`);\r\n        if (darknessTiles.length > 0) {\r\n            aseSocket.executeAsGM(\"deleteTiles\", [darknessTiles[0].id]);\r\n        }\r\n    }\r\n\r\n    static async createDarkness(midiData) {\r\n        const item = midiData.item;\r\n        const displayCrosshairs = async (crosshairs) => {\r\n            //console.log(\"Displaying crosshairs...\");\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect()\r\n                .file(\"jb2a.darkness.black\")\r\n                .attachTo(crosshairs)\r\n                .persist()\r\n                .opacity(0.5)\r\n                .play()\r\n\r\n        }\r\n        let crosshairsConfig = {\r\n            size: 6,\r\n            icon: item.img,\r\n            label: game.i18n.localize(\"ASE.Darkness\"),\r\n            tag: 'darkness-crosshairs',\r\n            drawIcon: true,\r\n            drawOutline: false,\r\n            interval: 1\r\n        }\r\n        let template = await warpgate.crosshairs.show(crosshairsConfig, { show: displayCrosshairs });\r\n        const caster = await canvas.tokens.get(midiData.tokenId);\r\n        const casterActor = caster.actor;\r\n        const effectOptions = item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        const sound = effectOptions.darknessSound ?? \"\";\r\n        const soundDelay = Number(effectOptions.darknessSoundDelay) ?? 0;\r\n        const volume = effectOptions.darknessVolume ?? 1;\r\n\r\n        const soundOptions = {\r\n            sound: sound,\r\n            volume: volume,\r\n            delay: soundDelay\r\n        };\r\n\r\n        await placeCloudAsTile(template, casterActor.id, soundOptions);\r\n        //await changeSelfItemMacro();\r\n\r\n        async function placeCloudAsTile(templateData, casterId, soundOptions) {\r\n            // console.log(\"Template given: \", template);\r\n            let tileWidth;\r\n            let tileHeight;\r\n            let tileX;\r\n            let tileY;\r\n            let placedX = templateData.x;\r\n            let placedY = templateData.y;\r\n            let wallPoints = [];\r\n            let walls = [];\r\n            tileWidth = (templateData.width * canvas.grid.size);\r\n            tileHeight = (templateData.width * canvas.grid.size);\r\n\r\n            let outerCircleRadius = tileWidth / 2.2;\r\n            tileX = templateData.x - (tileWidth / 2);\r\n            tileY = templateData.y - (tileHeight / 2);\r\n\r\n            let data = [{\r\n                alpha: 1,\r\n                width: tileWidth,\r\n                height: tileHeight,\r\n                img: \"modules/jb2a_patreon/Library/2nd_Level/Darkness/Darkness_01_Black_600x600.webm\",\r\n                overhead: true,\r\n                occlusion: {\r\n                    alpha: 0,\r\n                    mode: 3,\r\n                },\r\n                video: {\r\n                    autoplay: true,\r\n                    loop: true,\r\n                    volume: 0,\r\n                },\r\n                x: tileX,\r\n                y: tileY,\r\n                z: 100,\r\n                flags: { tagger: { tags: [`DarknessTile-${casterId}`] } }\r\n            }]\r\n            //console.log(\"Placing as tile: \", data);\r\n            let createdTiles = await aseSocket.executeAsGM(\"placeTiles\", data);\r\n            let tileId = createdTiles[0].id ?? createdTiles[0]._id;\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(soundOptions.sound)\r\n                .delay(soundOptions.delay)\r\n                .volume(soundOptions.volume)\r\n                .playIf(soundOptions.sound !== \"\")\r\n                .play();\r\n            //console.log(\"ASE DARKNESS: Darknes Tile Created: \",tileD);\r\n            let wall_number = 12;\r\n            let wall_angles = 2 * Math.PI / wall_number\r\n            for (let i = 0; i < wall_number; i++) {\r\n                let x = placedX + outerCircleRadius * Math.cos(i * wall_angles);\r\n                let y = placedY + outerCircleRadius * Math.sin(i * wall_angles);\r\n                wallPoints.push({ x: x, y: y });\r\n            }\r\n\r\n            for (let i = 0; i < wallPoints.length; i++) {\r\n                if (i < wallPoints.length - 1) {\r\n                    walls.push({\r\n                        c: [wallPoints[i].x, wallPoints[i].y, wallPoints[i + 1].x, wallPoints[i + 1].y],\r\n                        flags: { tagger: { tags: [`DarknessWall-${tileId}`] } },\r\n                        move: 0\r\n                    })\r\n                }\r\n                else {\r\n                    walls.push({\r\n                        c: [wallPoints[i].x, wallPoints[i].y, wallPoints[0].x, wallPoints[0].y],\r\n                        flags: { tagger: { tags: [`DarknessWall-${tileId}`] } },\r\n                        move: 0\r\n                    })\r\n                }\r\n            }\r\n\r\n            await aseSocket.executeAsGM(\"placeWalls\", walls);\r\n        }\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DarknessSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.darknessSound',\r\n            flagName: 'darknessSound',\r\n            flagValue: currFlags.darknessSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DarknessSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.darknessSoundDelay',\r\n            flagName: 'darknessSoundDelay',\r\n            flagValue: currFlags.darknessSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DarknessVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.darknessVolume',\r\n            flagName: 'darknessVolume',\r\n            flagValue: currFlags.darknessVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class detectMagic {\r\n\r\n    static registerHooks() {\r\n        Hooks.on(\"updateToken\", detectMagic._updateToken);\r\n    }\r\n    static async _preloadAssets() {\r\n        console.log('Preloading assets for ASE Detect Magic...');\r\n        let assetDBPaths = [];\r\n        let animateDeadItems = utilFunctions.getAllItemsNamed(\"Detect Magic\");\r\n        if (animateDeadItems.length > 0) {\r\n            for await (let item of animateDeadItems) {\r\n                let aseSettings = item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n                //console.log(aseSettings);\r\n                let waveAnim = `jb2a.detect_magic.circle.${aseSettings.waveColor ?? 'blue'}`;\r\n                let auraLoopAnim = `jb2a.magic_signs.circle.02.divination.loop.${aseSettings.auraColor ?? 'blue'}`;\r\n                let auraIntroAnim = `jb2a.magic_signs.circle.02.divination.intro.${aseSettings.auraColor ?? 'blue'}`;\r\n\r\n                if (!assetDBPaths.includes(waveAnim)) assetDBPaths.push(waveAnim);\r\n                if (!assetDBPaths.includes(auraLoopAnim)) assetDBPaths.push(auraLoopAnim);\r\n                if (!assetDBPaths.includes(auraIntroAnim)) assetDBPaths.push(auraIntroAnim);\r\n                const magicalSchoolsEng = [\r\n                    \"abjuration\",\r\n                    \"conjuration\",\r\n                    \"divination\",\r\n                    \"enchantment\",\r\n                    \"evocation\",\r\n                    \"illusion\",\r\n                    \"necromancy\",\r\n                    \"transmutation\"\r\n                ];\r\n                let magicalSchools = magicalSchoolsEng;\r\n                let magicalColors = [\"blue\", \"green\", \"pink\", \"purple\", \"red\", \"yellow\"];\r\n\r\n                let objects = await Tagger.getByTag(\"magical\");\r\n                let magicalObjects = objects.map(o => {\r\n                    return {\r\n                        obj: o,\r\n                        school: Tagger.getTags(o).find(t => magicalSchools.includes(t.toLowerCase())) || false,\r\n                        color: Tagger.getTags(o).find(t => magicalColors.includes(t.toLowerCase())) || \"blue\"\r\n                    }\r\n                });\r\n                for await (let magical of magicalObjects) {\r\n                    if (!magical.school) {\r\n                        continue;\r\n                    }\r\n                    let runeIntroAnim = `jb2a.magic_signs.rune.${magical.school}.intro.${magical.color}`;\r\n                    let runeLoopAnim = `jb2a.magic_signs.rune.${magical.school}.loop.${magical.color}`;\r\n                    if (!assetDBPaths.includes(runeIntroAnim)) assetDBPaths.push(runeIntroAnim);\r\n                    if (!assetDBPaths.includes(runeLoopAnim)) assetDBPaths.push(runeLoopAnim);\r\n                }\r\n            }\r\n        }\r\n        //console.log('DB Paths about to be preloaded...', assetDBPaths);\r\n        //console.log('Files about to be preloaded...', assetFilePaths);\r\n        console.log(`Preloaded ${assetDBPaths.length} assets for Detect Magic!`);\r\n        await Sequencer.Preloader.preloadForClients(assetDBPaths, true);\r\n        return;\r\n    }\r\n    static async activateDetectMagic(midiData) {\r\n        //console.log(\"Detect Magic MIDI Data: \", midiData);\r\n        let item = midiData.item;\r\n        let aseFlags = item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n        let actor = midiData.actor;\r\n        let caster = canvas.tokens.get(midiData.tokenId);\r\n        let users = [];\r\n        let magicalObjects = [];\r\n        let waveColor = aseFlags.waveColor ?? 'blue';\r\n        let auraColor = aseFlags.auraColor ?? 'blue';\r\n        const waveSound = aseFlags.waveSound ?? \"\";\r\n        const waveSoundDelay = Number(aseFlags.waveSoundDelay) ?? 0;\r\n        const waveVolume = Number(aseFlags.waveVolume) ?? 1;\r\n\r\n        const magicalSchoolsEng = [\r\n            \"abjuration\",\r\n            \"conjuration\",\r\n            \"divination\",\r\n            \"enchantment\",\r\n            \"evocation\",\r\n            \"illusion\",\r\n            \"necromancy\",\r\n            \"transmutation\"\r\n        ];\r\n\r\n        for (const user in actor.data.permission) {\r\n            if (user == \"default\") continue;\r\n            if (game.users.get(user)) {\r\n                users.push(user);\r\n            }\r\n        }\r\n\r\n        let magicalSchools = magicalSchoolsEng;\r\n        let magicalColors = [\"blue\", \"green\", \"pink\", \"purple\", \"red\", \"yellow\"];\r\n\r\n        let objects = await Tagger.getByTag(\"magical\", { ignore: [caster] });\r\n        magicalObjects = objects.map(o => {\r\n            let pointA = { x: caster.data.x + (canvas.grid.size / 2), y: caster.data.y + (canvas.grid.size / 2) };\r\n            let pointB = { x: o.data.x + (canvas.grid.size / 2), y: o.data.y + (canvas.grid.size / 2) }\r\n            let distance = utilFunctions.measureDistance(pointA, pointB);\r\n\r\n            return {\r\n                delay: distance * 55,\r\n                distance: distance,\r\n                obj: o,\r\n                school: Tagger.getTags(o).find(t => magicalSchools.includes(t.toLowerCase())) || false,\r\n                color: Tagger.getTags(o).find(t => magicalColors.includes(t.toLowerCase())) || \"blue\"\r\n            }\r\n        }).filter(o => o.distance <= 30)\r\n\r\n        let dmSequence = new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(waveSound)\r\n            .volume(waveVolume)\r\n            .delay(waveSoundDelay)\r\n            .playIf(waveSound != \"\")\r\n            .effect(`jb2a.detect_magic.circle.${waveColor}`)\r\n            .attachTo(caster)\r\n            .belowTiles()\r\n            .scale(2.33333)\r\n            .effect()\r\n            .file(`jb2a.magic_signs.circle.02.divination.intro.${auraColor}`)\r\n            .attachTo(caster)\r\n            .scale(0.2)\r\n            .belowTokens()\r\n            .waitUntilFinished(-1000)\r\n            .fadeOut(1000, { ease: \"easeInQuint\" })\r\n            .effect()\r\n            .file(`jb2a.magic_signs.circle.02.divination.loop.${auraColor}`)\r\n            .attachTo(caster)\r\n            .persist()\r\n            .extraEndDuration(750)\r\n            .fadeOut(750, { ease: \"easeInQuint\" })\r\n            .scale(0.2)\r\n            .loopProperty(\"sprite\", \"rotation\", { duration: 20000, from: 0, to: 360 })\r\n            .name(`${caster.id}-detectMagicAura`)\r\n            .belowTokens();\r\n        console.log('Magical Objects', magicalObjects);\r\n        for await (let magical of magicalObjects) {\r\n            if (!magical.school) {\r\n                continue;\r\n            }\r\n            await aseSocket.executeAsGM(\"updateFlag\", magical.obj.id, \"magicDetected\", true);\r\n\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect(\"jb2a.magic_signs.rune.{{school}}.intro.{{color}}\")\r\n                .forUsers(users)\r\n                .attachTo(magical.obj)\r\n                .scale(0.25)\r\n                .delay(magical.delay)\r\n                .setMustache(magical)\r\n                .waitUntilFinished(-1200)\r\n                .zIndex(0)\r\n                .effect(\"jb2a.magic_signs.rune.{{school}}.loop.{{color}}\")\r\n                .name(`${magical.obj.id}-magicRune`)\r\n                .delay(magical.delay)\r\n                .forUsers(users)\r\n                .scale(0.25)\r\n                .attachTo(magical.obj)\r\n                .persist(true)\r\n                .setMustache(magical)\r\n                .waitUntilFinished(-750)\r\n                .fadeOut(750, { ease: \"easeInQuint\" })\r\n                .zIndex(1)\r\n                .play()\r\n        }\r\n        dmSequence.play();\r\n\r\n\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        let users = [];\r\n        for (const user in casterActor.data.permission) {\r\n            if (user == \"default\") continue;\r\n            if (game.users.get(user)) {\r\n                users.push(user);\r\n            }\r\n        }\r\n        const magicalSchoolsEng = [\r\n            \"abjuration\",\r\n            \"conjuration\",\r\n            \"divination\",\r\n            \"enchantment\",\r\n            \"evocation\",\r\n            \"illusion\",\r\n            \"necromancy\",\r\n            \"transmutation\"\r\n        ];\r\n        let objects = await Tagger.getByTag(\"magical\", { ignore: [casterToken] });\r\n        let magicalSchools = magicalSchoolsEng;\r\n        let magicalColors = [\"blue\", \"green\", \"pink\", \"purple\", \"red\", \"yellow\"];\r\n        let magicalObjects = [];\r\n\r\n        magicalObjects = objects.map(o => {\r\n            let pointA = { x: casterToken.data.x + (canvas.grid.size / 2), y: casterToken.data.y + (canvas.grid.size / 2) };\r\n            let pointB = { x: o.data.x + (canvas.grid.size / 2), y: o.data.y + (canvas.grid.size / 2) }\r\n            let distance = utilFunctions.measureDistance(pointA, pointB);\r\n            return {\r\n                delay: 0,\r\n                distance: distance,\r\n                obj: o,\r\n                school: Tagger.getTags(o).find(t => magicalSchools.includes(t.toLowerCase())) || false,\r\n                color: Tagger.getTags(o).find(t => magicalColors.includes(t.toLowerCase())) || \"blue\"\r\n            }\r\n        })\r\n        for await (let magical of magicalObjects) {\r\n            if (!magical.school) {\r\n                continue;\r\n            }\r\n            if (magical.obj.getFlag(\"advancedspelleffects\", \"magicDetected\")) {\r\n                await aseSocket.executeAsGM(\"updateFlag\", magical.obj.id, \"magicDetected\", false);\r\n                await Sequencer.EffectManager.endEffects({ name: `${magical.obj.id}-magicRune`, object: magical.obj._object });\r\n                new Sequence(\"Advanced Spell Effects\")\r\n                    .effect(\"jb2a.magic_signs.rune.{{school}}.outro.{{color}}\")\r\n                    .forUsers(users)\r\n                    .attachTo(magical.obj)\r\n                    .playIf(magical.distance <= 30)\r\n                    .scale(0.25)\r\n                    .setMustache(magical)\r\n                    .zIndex(0)\r\n                    .play();\r\n            }\r\n        }\r\n        await Sequencer.EffectManager.endEffects({ name: `${casterToken.id}-detectMagicAura`, object: casterToken });\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .effect()\r\n            .file(`jb2a.magic_signs.circle.02.divination.outro.${effectOptions.auraColor}`)\r\n            .scale(0.2)\r\n            .belowTokens()\r\n            .attachTo(casterToken)\r\n            .play()\r\n    }\r\n\r\n    static async _updateToken(tokenDocument, updateData) {\r\n        //console.log(\"Registering Detect Magic Hook\");\r\n        if ((!updateData.x && !updateData.y)) return;\r\n        const isGM = utilFunctions.isFirstGM();\r\n\r\n        if (!isGM) return;\r\n        if (tokenDocument.actor.effects.filter((effect) => effect.data.document.sourceName == \"Detect Magic\").length == 0) {\r\n            return;\r\n        }\r\n        //console.log(\"Is first GM: \", isGM);\r\n        let users = [];\r\n        for (const user in tokenDocument.actor.data.permission) {\r\n            if (user == \"default\") continue;\r\n            if (game.users.get(user)) {\r\n                users.push(user);\r\n            }\r\n        }\r\n        let newPos = { x: 0, y: 0 };\r\n        newPos.x = (updateData.x) ? updateData.x : tokenDocument.data.x;\r\n        newPos.y = (updateData.y) ? updateData.y : tokenDocument.data.y;\r\n        let magicalObjectsOutOfRange = [];\r\n        let magicalObjectsInRange = [];\r\n        const magicalSchoolsEng = [\r\n            \"abjuration\",\r\n            \"conjuration\",\r\n            \"divination\",\r\n            \"enchantment\",\r\n            \"evocation\",\r\n            \"illusion\",\r\n            \"necromancy\",\r\n            \"transmutation\"\r\n        ];\r\n        let magicalSchools = magicalSchoolsEng;\r\n        let magicalColors = [\"blue\", \"green\", \"pink\", \"purple\", \"red\", \"yellow\"];\r\n\r\n        let objects = await Tagger.getByTag(\"magical\", { ignore: [tokenDocument] });\r\n\r\n        const magicalObjects = objects.map(o => {\r\n            let pointA = { x: newPos.x + (canvas.grid.size / 2), y: newPos.y + (canvas.grid.size / 2) };\r\n            let pointB = { x: o.data.x + (canvas.grid.size / 2), y: o.data.y + (canvas.grid.size / 2) };\r\n            let distance = utilFunctions.measureDistance(pointA, pointB);\r\n            return {\r\n                delay: 0,\r\n                distance: distance,\r\n                obj: o,\r\n                school: Tagger.getTags(o).find(t => magicalSchools.includes(t.toLowerCase())) || false,\r\n                color: Tagger.getTags(o).find(t => magicalColors.includes(t.toLowerCase())) || \"blue\"\r\n            }\r\n        });\r\n\r\n        magicalObjectsOutOfRange = magicalObjects.filter(o => o.distance > 30);\r\n        for await (let magical of magicalObjectsOutOfRange) {\r\n            if (!magical.school) {\r\n                continue;\r\n            }\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect(\"jb2a.magic_signs.rune.{{school}}.outro.{{color}}\")\r\n                .forUsers(users)\r\n                .attachTo(magical.obj)\r\n                .scale(0.25)\r\n                .setMustache(magical)\r\n                .zIndex(0)\r\n                .playIf((magical.obj.getFlag(\"advancedspelleffects\", \"magicDetected\")))\r\n                .play();\r\n            if (magical.obj.getFlag(\"advancedspelleffects\", \"magicDetected\")) {\r\n                await magical.obj.setFlag(\"advancedspelleffects\", \"magicDetected\", false);\r\n                await Sequencer.EffectManager.endEffects({ name: `${magical.obj.id}-magicRune`, object: magical.obj._object });\r\n            }\r\n        }\r\n        magicalObjectsInRange = magicalObjects.filter(o => o.distance <= 30);\r\n\r\n        for await (let magical of magicalObjectsInRange) {\r\n            if (!magical.school) {\r\n                continue;\r\n            }\r\n            //let runeDisplayed = Sequencer.EffectManager.getEffects({ name: `${magical.obj.id}-magicRune`, object: magical.obj });\r\n            if (!magical.obj.getFlag(\"advancedspelleffects\", \"magicDetected\")) {\r\n                await magical.obj.setFlag(\"advancedspelleffects\", \"magicDetected\", true);\r\n                new Sequence(\"Advanced Spell Effects\")\r\n                    .effect(\"jb2a.magic_signs.rune.{{school}}.intro.{{color}}\")\r\n                    .forUsers(users)\r\n                    .scale(0.25)\r\n                    .delay(magical.delay)\r\n                    .setMustache(magical)\r\n                    .name(\"detectMagicRuneIntro\")\r\n                    .attachTo(magical.obj)\r\n                    .waitUntilFinished(-800)\r\n                    .zIndex(0)\r\n                    .effect(\"jb2a.magic_signs.rune.{{school}}.loop.{{color}}\")\r\n                    .name(`${magical.obj.id}-magicRune`)\r\n                    .delay(magical.delay)\r\n                    .forUsers(users)\r\n                    .scale(0.25)\r\n                    .attachTo(magical.obj)\r\n                    .persist(true)\r\n                    .setMustache(magical)\r\n                    .waitUntilFinished(-750)\r\n                    .zIndex(1)\r\n                    .fadeOut(750, { ease: \"easeInQuint\" })\r\n                    .play()\r\n            }\r\n        }\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n\r\n        const detectMagicWaves = `jb2a.detect_magic.circle`;\r\n        const detectMagicWaveColorOptions = utilFunctions.getDBOptions(detectMagicWaves);\r\n\r\n        const detectMagicAuras = `jb2a.magic_signs.circle.02.divination.intro`;\r\n        const detectMagicAuraColorOptions = utilFunctions.getDBOptions(detectMagicAuras);\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        animOptions.push({\r\n            label: 'Select Wave Color: ',\r\n            type: 'dropdown',\r\n            options: detectMagicWaveColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.waveColor',\r\n            flagName: 'waveColor',\r\n            flagValue: currFlags.waveColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: 'Wave Sound: ',\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.waveSound',\r\n            flagName: 'waveSound',\r\n            flagValue: currFlags.waveSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: \"Wave Sound Delay: \",\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.waveSoundDelay',\r\n            flagName: 'waveSoundDelay',\r\n            flagValue: currFlags.waveSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: \"Wave Sound Volume:\",\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.waveVolume',\r\n            flagName: 'waveVolume',\r\n            flagValue: currFlags.waveVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: 'Select Aura Color: ',\r\n            type: 'dropdown',\r\n            options: detectMagicAuraColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.auraColor',\r\n            flagName: 'auraColor',\r\n            flagValue: currFlags.auraColor ?? 'blue',\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nexport class callLightning {\r\n\r\n    static registerHooks() {\r\n        Hooks.on(\"updateCombat\", callLightning._updateCombat);\r\n    }\r\n\r\n    static async createStormCloud(midiData) {\r\n        console.log(\"Creating Storm Cloud...\", midiData);\r\n        const item = midiData.item;\r\n        const itemUuid = item.uuid;\r\n        const caster = canvas.tokens.get(midiData.tokenId);\r\n        const casterActor = game.actors.get(caster.actor.id);\r\n        const spellLevel = midiData.itemLevel;\r\n        //console.log(midiData);\r\n        let aseFlags = item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n        let color = \"blue\";\r\n        let res = \"low\";\r\n        let boltStyle = aseFlags?.boltStyle?.toLowerCase() ?? 'chain';\r\n\r\n        const boltSound = aseFlags?.boltSound ?? \"\";\r\n        const boltVolume = aseFlags?.boltVolume ?? 1;\r\n        const boltSoundDelay = aseFlags?.boltSoundDelay ?? 0;\r\n\r\n        const stormCloudSound = aseFlags?.stormCloudSound ?? \"\";\r\n        const stormCloudVolume = aseFlags?.stormCloudVolume ?? 1;\r\n        const stormCloudSoundDelay = aseFlags?.stormCloudSoundDelay ?? 0;\r\n        const placeCrackAsTile = aseFlags?.placeCrackAsTile ?? false;\r\n\r\n        let weatherDialogData = {\r\n            buttons: [{ label: game.i18n.localize('ASE.Yes'), value: true }, { label: game.i18n.localize('ASE.No'), value: false }],\r\n            title: game.i18n.localize('ASE.AskStorm')\r\n        };\r\n\r\n        let stormyWeather = await warpgate.buttonDialog(weatherDialogData, 'row');\r\n\r\n        //console.log('boltDamage: ', boltDamage);\r\n\r\n        const displayCrosshairs = async (crosshairs) => {\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect()\r\n                .file(\"jb2a.call_lightning.low_res.blue\")\r\n                .attachTo(crosshairs)\r\n                .persist()\r\n                .scaleToObject()\r\n                .opacity(0.5)\r\n                .play()\r\n\r\n        }\r\n        let crosshairsConfig = {\r\n            size: 25,\r\n            icon: item.img,\r\n            label: game.i18n.localize('ASE.CallLightning'),\r\n            tag: 'call-lightning-crosshairs',\r\n            drawIcon: true,\r\n            drawOutline: false,\r\n            interval: 1\r\n        }\r\n        let castTemplate = await warpgate.crosshairs.show(crosshairsConfig, { show: displayCrosshairs });\r\n        let effectFile = `jb2a.call_lightning.${res}_res.${color}`;\r\n        //console.log(effectFile);\r\n        const effectFilePath = Sequencer.Database.getEntry(effectFile).file;\r\n        const effectOptions = {\r\n            castTemplate: castTemplate,\r\n            casterId: midiData.tokenId,\r\n            isStorm: stormyWeather,\r\n            effectFilePath: effectFilePath,\r\n            stormCloudSound: stormCloudSound,\r\n            stormCloudVolume: stormCloudVolume,\r\n            stormCloudSoundDelay: stormCloudSoundDelay,\r\n            boltSound: boltSound,\r\n            boltVolume: boltVolume,\r\n            boltSoundDelay: boltSoundDelay,\r\n            boltStyle: boltStyle,\r\n            spellLevel: spellLevel,\r\n            itemId: item.id,\r\n            placeCrackAsTile: placeCrackAsTile,\r\n            originalItemUuid: itemUuid\r\n        };\r\n        let stormTileId = await placeCloudAsTile(effectOptions);\r\n        //console.log(\"StomeTileID: \", stormTileId);\r\n        const updates = {\r\n            embedded: {\r\n                Item: {}\r\n            }\r\n        };\r\n        const activationItemName = game.i18n.localize('ASE.ActivateCallLightning');\r\n        let castItemDamage = item.data.data.damage;\r\n        //castItemDamage.parts[0] is the damage formula, grab the first number in string\r\n        let newDamageNum = Number(castItemDamage.parts[0][0][0]) + (spellLevel - 3) + (stormyWeather ? 1 : 0);\r\n        //replace the first number in castItemDamage.parts[0] with newDamageNum keeping the rest of the formula\r\n        castItemDamage.parts[0][0] = castItemDamage.parts[0][0].replace(/\\d+/, newDamageNum);\r\n        updates.embedded.Item[activationItemName] = {\r\n            \"type\": \"spell\",\r\n            \"img\": item.img,\r\n            \"data\": {\r\n                \"ability\": \"\",\r\n                \"actionType\": \"save\",\r\n                \"activation\": { \"type\": \"action\", \"cost\": 1, \"condition\": \"\" },\r\n                \"damage\": castItemDamage,\r\n                \"scaling\": item.data.data.scaling,\r\n                \"level\": spellLevel,\r\n                \"save\": item.data.data.save,\r\n                \"preparation\": { \"mode\": 'atwill', \"prepared\": true },\r\n                \"range\": { \"value\": null, \"long\": null, \"units\": \"\" },\r\n                \"school\": \"con\",\r\n                \"description\": {\r\n                    \"value\": game.i18n.localize('ASE.ActivateCallLightningCastDescription')\r\n                }\r\n            },\r\n            \"flags\": {\r\n                \"advancedspelleffects\": {\r\n                    \"enableASE\": true,\r\n                    \"spellEffect\": game.i18n.localize('ASE.ActivateCallLightning'),\r\n                    \"castItem\": true,\r\n                    \"savesRequired\": true,\r\n                    'effectOptions': {\r\n                        'stormTileId': stormTileId,\r\n                        'allowInitialMidiCall': true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        await warpgate.mutate(caster.document, updates, {}, { name: `${caster.actor.id}-call-lightning` });\r\n        ui.notifications.info(game.i18n.format(\"ASE.AddedAtWill\", { spellName: game.i18n.localize(\"ASE.ActivateCallLightning\") }));\r\n        await ChatMessage.create({ content: `${game.i18n.format('ASE.CallLightningChatMessage'), { name: caster.actor.name }}` });\r\n        //await aseSocket.executeAsGM(\"updateFlag\", stormTileId, \"stormDamage\", );\r\n        effectOptions.stormTileId = stormTileId;\r\n        effectOptions.concentration = true;\r\n        let castItem = casterActor.items.getName(activationItemName);\r\n        effectOptions.castItem = castItem.uuid;\r\n        game.ASESpellStateManager.addSpell(midiData.itemUuid, effectOptions);\r\n\r\n\r\n        async function placeCloudAsTile(effectOptions) {\r\n            console.log(\"Placing Cloud as Tile...\", effectOptions);\r\n            const castTemplate = effectOptions.castTemplate;\r\n            const casterId = effectOptions.casterId;\r\n            const effectFilePath = effectOptions.effectFilePath;\r\n            const isStorm = effectOptions.isStorm;\r\n            const stormCloudSound = effectOptions.stormCloudSound;\r\n            const stormCloudVolume = effectOptions.stormCloudVolume;\r\n            const stormCloudSoundDelay = effectOptions.stormCloudSoundDelay;\r\n            const boltSound = effectOptions.boltSound;\r\n            const boltVolume = effectOptions.boltVolume;\r\n            const boltSoundDelay = effectOptions.boltSoundDelay;\r\n            const boltStyle = effectOptions.boltStyle;\r\n            const spellLevel = effectOptions.spellLevel;\r\n            const itemId = effectOptions.itemId;\r\n            const placeCrackAsTile = effectOptions.placeCrackAsTile;\r\n            const itemUuid = effectOptions.originalItemUuid;\r\n            console.log('itemUuid: ', itemUuid);\r\n            let templateData = castTemplate;\r\n            let tileWidth;\r\n            let tileHeight;\r\n            let tileX;\r\n            let tileY;\r\n\r\n            tileWidth = (templateData.width * canvas.grid.size);\r\n            tileHeight = (templateData.width * canvas.grid.size);\r\n            tileX = templateData.x - (tileWidth / 2);\r\n            tileY = templateData.y - (tileHeight / 2);\r\n            let data = {\r\n                alpha: 0.5,\r\n                width: tileWidth,\r\n                height: tileHeight,\r\n                img: effectFilePath,\r\n                overhead: true,\r\n                occlusion: {\r\n                    alpha: 0,\r\n                    mode: 0,\r\n                },\r\n                video: {\r\n                    autoplay: true,\r\n                    loop: true,\r\n                    volume: 0,\r\n                },\r\n                x: tileX,\r\n                y: tileY,\r\n                z: 100,\r\n                flags: {\r\n                    advancedspelleffects: {\r\n                        'stormCloudTile': casterId,\r\n                        'boltStyle': boltStyle,\r\n                        'spellLevel': spellLevel,\r\n                        'itemID': itemId,\r\n                        'itemUuid': itemUuid,\r\n                        'stormDamage': isStorm,\r\n                        'boltSound': boltSound,\r\n                        'boltVolume': boltVolume,\r\n                        'boltSoundDelay': boltSoundDelay,\r\n                        'placeCrackAsTile': placeCrackAsTile,\r\n                    }\r\n                }\r\n            }\r\n            let createdTiles = await aseSocket.executeAsGM(\"placeTiles\", [data]);\r\n            const tileId = createdTiles[0].id ?? createdTiles[0]._id;\r\n\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(stormCloudSound)\r\n                .volume(stormCloudVolume)\r\n                .delay(stormCloudSoundDelay)\r\n                .playIf(stormCloudSound !== \"\")\r\n                .play()\r\n            return (tileId);\r\n        }\r\n    }\r\n\r\n    static async getBoltTargets(stormTileId) {\r\n        let stormCloudTile = canvas.scene.tiles.get(stormTileId);\r\n        let crosshairsConfig = {\r\n            size: 3,\r\n            icon: \"icons/magic/lightning/bolt-strike-blue.webp\",\r\n            label: game.i18n.localize('ASE.LightningBolt'),\r\n            tag: 'lightning-bolt-crosshairs',\r\n            drawIcon: true,\r\n            drawOutline: true,\r\n            interval: 1\r\n        }\r\n        let boltTemplate = await warpgate.crosshairs.show(crosshairsConfig, { show: utilFunctions.checkCrosshairs });\r\n        //console.log(\"BoltTemplate: \", boltTemplate);\r\n        const targetsInCrosshairs = warpgate.crosshairs.collect(boltTemplate, ['Token'], utilFunctions.getContainedCustom)['Token'];\r\n        for await (let target of targetsInCrosshairs) {\r\n            let markerApplied = Sequencer.EffectManager.getEffects({ name: `ase-crosshairs-marker-${target.id}` });\r\n            if (markerApplied.length > 0) {\r\n                Sequencer.EffectManager.endEffects({ name: `ase-crosshairs-marker-${target.id}` });\r\n            }\r\n        }\r\n        let dist = utilFunctions.measureDistance({ x: stormCloudTile.data.x + (stormCloudTile.data.width / 2), y: stormCloudTile.data.y + (stormCloudTile.data.width / 2) }, boltTemplate);\r\n        //console.log(\"Distance to bolt: \", dist);\r\n        if (dist > 60) {\r\n            await warpgate.buttonDialog({\r\n                buttons: [{ label: \"Ok\", value: true }],\r\n                title: `${game.i18n.localize('ASE.SpellFailed')} - ${game.i18n.localize('ASE.OutOfRange')}`\r\n            }, 'row')\r\n            return [];\r\n        }\r\n        const boltOptions = {\r\n            boltStyle: stormCloudTile.getFlag(\"advancedspelleffects\", \"boltStyle\"),\r\n            boltSound: stormCloudTile.getFlag(\"advancedspelleffects\", \"boltSound\") ?? \"\",\r\n            boltVolume: stormCloudTile.getFlag(\"advancedspelleffects\", \"boltVolume\") ?? 0,\r\n            boltSoundDelay: Number(stormCloudTile.getFlag(\"advancedspelleffects\", \"boltSoundDelay\")) ?? 0,\r\n            placeCrackAsTile: stormCloudTile.getFlag(\"advancedspelleffects\", \"placeCrackAsTile\") ?? true,\r\n        }\r\n        //console.log(\"Storm cloud tile:\", stormCloudTile);\r\n\r\n        playEffect(boltTemplate, stormCloudTile, boltOptions);\r\n\r\n        async function playEffect(boltTemplate, cloud, boltOptions) {\r\n            const boltStyle = boltOptions.boltStyle;\r\n            const boltSound = boltOptions.boltSound;\r\n            const boltVolume = boltOptions.boltVolume;\r\n            const boltSoundDelay = boltOptions.boltSoundDelay;\r\n            const placeCrackAsTile = boltOptions.placeCrackAsTile;\r\n            //console.log(\"Place crack as tile: \", placeCrackAsTile);\r\n            let boltEffect;\r\n            switch (boltStyle) {\r\n                case 'chain':\r\n                    boltEffect = 'jb2a.chain_lightning.primary.blue'\r\n                    break;\r\n                case 'strike':\r\n                    boltEffect = 'jb2a.lightning_strike.blue'\r\n                    break;\r\n                default:\r\n                    boltEffect = 'jb2a.chain_lightning.primary.blue'\r\n            }\r\n\r\n            async function placeCracksAsTile(boltTemplate, effectFilePath) {\r\n                //console.log(\"Template Data: \", template);\r\n                let templateData = boltTemplate;\r\n                let tileWidth;\r\n                let tileHeight;\r\n                let tileX;\r\n                let tileY;\r\n\r\n                tileWidth = templateData.width * (canvas.grid.size);\r\n                tileHeight = templateData.width * (canvas.grid.size);\r\n                tileX = templateData.x - (tileWidth / 2);\r\n                tileY = templateData.y - (tileHeight / 2);\r\n                let data = [{\r\n                    alpha: 1,\r\n                    width: tileWidth,\r\n                    height: tileHeight,\r\n                    img: effectFilePath,\r\n                    overhead: false,\r\n                    occlusion: {\r\n                        alpha: 0,\r\n                        mode: 0,\r\n                    },\r\n                    video: {\r\n                        autoplay: true,\r\n                        loop: true,\r\n                        volume: 0,\r\n                    },\r\n                    x: tileX,\r\n                    y: tileY,\r\n                    z: 100,\r\n                }];\r\n                let createdTiles = await aseSocket.executeAsGM(\"placeTiles\", data);\r\n            }\r\n\r\n            let cloudCenter = { x: cloud.data.x + (cloud.data.width / 2), y: cloud.data.y + (cloud.data.width / 2) };\r\n            let strikeRay = new Ray(boltTemplate, cloudCenter);\r\n            let strikeAngle = strikeRay.angle * (180 / Math.PI)\r\n            let strikeRotation = (-strikeAngle) - 90;\r\n            let groundCrackVersion = utilFunctions.getRandomInt(1, 3);\r\n            let groundCrackAnim = `jb2a.impact.ground_crack.blue.0${groundCrackVersion}`;\r\n            let groundCrackImg = `jb2a.impact.ground_crack.still_frame.0${groundCrackVersion}`;\r\n            let groundCrackImgPath = Sequencer.Database.getEntry(groundCrackImg).file;\r\n            let boltSeq = new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(boltSound)\r\n                .volume(boltVolume)\r\n                .delay(boltSoundDelay)\r\n                .playIf(boltSound != \"\")\r\n                .effect()\r\n                .file(boltEffect)\r\n                .atLocation(cloud)\r\n                .stretchTo(boltTemplate)\r\n                .waitUntilFinished(-1500)\r\n                .playIf(boltStyle == \"chain\")\r\n                .effect()\r\n                .file(boltEffect)\r\n                .atLocation({ x: boltTemplate.x, y: boltTemplate.y })\r\n                .playIf(boltStyle == \"strike\")\r\n                .rotate(strikeRotation)\r\n                .randomizeMirrorX()\r\n                .scale(2)\r\n                .effect()\r\n                .file(groundCrackAnim)\r\n                .atLocation(boltTemplate)\r\n                .belowTokens()\r\n                .scale(0.5)\r\n                .waitUntilFinished(-3000)\r\n                .thenDo(async () => {\r\n                    if (placeCrackAsTile) {\r\n                        placeCracksAsTile(boltTemplate, groundCrackImgPath);\r\n                    }\r\n                })\r\n            await boltSeq.play();\r\n        }\r\n\r\n        return targetsInCrosshairs;\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        let stormCloudTiles = canvas.scene.tiles.filter((tile) => tile.data.flags.advancedspelleffects?.stormCloudTile == casterToken.id);\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(casterToken);\r\n        //console.log(\"tiles to delete: \", [tiles[0].id]);\r\n        if (stormCloudTiles.length > 0) {\r\n            console.log(\"Removing Storm Cloud Tile...\", stormCloudTiles[0].id);\r\n            const itemUuid = stormCloudTiles[0].getFlag(\"advancedspelleffects\", \"itemUuid\");\r\n            let spellState = game.ASESpellStateManager.getSpell(itemUuid);\r\n            console.log(\"Spell State: \", spellState);\r\n            if(spellState) {\r\n                game.ASESpellStateManager.removeSpell(itemUuid);\r\n            }\r\n            if(isGM) {\r\n                await aseSocket.executeAsGM(\"deleteTiles\", [stormCloudTiles[0].id]);\r\n                await warpgate.revert(casterToken.document, `${casterActor.id}-call-lightning`);\r\n                ui.notifications.info(game.i18n.format(\"ASE.RemovedAtWill\", { spellName: game.i18n.localize(\"ASE.ActivateCallLightning\") }));\r\n                await ChatMessage.create({ content: game.i18n.localize('ASE.ActivateCallLightningDissipate') });\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    static async _updateCombat(combat) {\r\n        let currentCombatantId = combat.current.tokenId;\r\n        let caster = canvas.tokens.get(currentCombatantId);\r\n        if (!caster) return;\r\n        if (!caster.actor.isOwner || (game.user.isGM && caster.actor.hasPlayerOwner)) return;\r\n        let stormCloudTiles = canvas.scene.tiles.filter((tile) => tile.data.flags.advancedspelleffects?.stormCloudTile == currentCombatantId);\r\n        //console.log(\"update hook fired...\", stormCloudTiles);\r\n        if (stormCloudTiles.length > 0) {\r\n            //console.log(\"Detected Storm Cloud! Prompting for Bolt...\");\r\n            let confirmData = {\r\n                buttons: [{ label: \"Yes\", value: true }, { label: \"No\", value: false }],\r\n                title: game.i18n.format('ASE.ActivateCallLightningDialog', { spellLevel: stormCloudTiles[0].getFlag(\"advancedspelleffects\", \"spellLevel\") })\r\n            };\r\n            let confirm = await warpgate.buttonDialog(confirmData, 'row');\r\n            if (confirm) {\r\n                let item = caster.actor.items.filter(i => i.name == game.i18n.localize('ASE.ActivateCallLightning'))[0];\r\n                if (item) {\r\n                    await item.roll();\r\n                }\r\n                else {\r\n                    ui.notifications.error(game.i18n.format(\"ASE.NoSpellItem\", { spellName: game.i18n.localize(\"ASE.ActivateCallLightning\") }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n        const boltOptions = [{\r\n            \"chain\": game.i18n.localize('ASE.Chain')},\r\n            {\"strike\": game.i18n.localize('ASE.Strike')\r\n        }];\r\n        /*const dieOptions = {\r\n            'd4': 'd4',\r\n            'd6': 'd6',\r\n            'd8': 'd8',\r\n            'd10': 'd10',\r\n            'd12': 'd12',\r\n            'd20': 'd20',\r\n        };*/\r\n        const dieOptions = [\r\n            {'d4': 'd4'},\r\n            {'d6': 'd6'},\r\n            {'d8': 'd8'},\r\n            {'d10': 'd10'},\r\n            {'d12': 'd12'},\r\n            {'d20': 'd20'}\r\n        ];\r\n\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.SelectBoltStyleLabel'),\r\n            type: \"dropdown\",\r\n            options: boltOptions,\r\n            name: \"flags.advancedspelleffects.effectOptions.boltStyle\",\r\n            flagName: \"boltStyle\",\r\n            flagValue: currFlags.boltStyle ?? 'chain',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.PlaceCrackAsTileLabel'),\r\n            tooltip: game.i18n.localize('ASE.PlaceCrackAsTileTooltip'),\r\n            type: \"checkbox\",\r\n            name: \"flags.advancedspelleffects.effectOptions.placeCrackAsTile\",\r\n            flagName: \"placeCrackAsTile\",\r\n            flagValue: currFlags.placeCrackAsTile ?? false,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.BoltSoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.boltSound',\r\n            flagName: 'boltSound',\r\n            flagValue: currFlags.boltSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.BoltSoundDelayLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.boltSoundDelay',\r\n            flagName: 'boltSoundDelay',\r\n            flagValue: currFlags.boltSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.BoltVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.boltVolume',\r\n            flagName: 'boltVolume',\r\n            flagValue: currFlags.boltVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true\r\n        }\r\n    }\r\n\r\n}\r\n","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class fogCloud {\r\n\r\n    static registerHooks() {\r\n        if (!game.user.isGM) return;\r\n        Hooks.on(\"updateTile\", fogCloud._updateTile);\r\n        Hooks.on(\"deleteTile\", fogCloud._deleteTile);\r\n    }\r\n\r\n    static async _updateTile(tileD) {\r\n        if (tileD.getFlag(\"advancedspelleffects\", \"fogCloudWallNum\")) {\r\n            let wallNum = tileD.getFlag(\"advancedspelleffects\", \"fogCloudWallNum\");\r\n            await aseSocket.executeAsGM(\"moveWalls\", tileD.id, 'FogCloud', wallNum);\r\n        }\r\n    }\r\n\r\n    static async _deleteTile(tileD) {\r\n        let walls = [];\r\n        let wallDocuments = [];\r\n        walls = await Tagger.getByTag([`FogCloudWall-${tileD.id}`]);\r\n        walls.forEach((wall) => {\r\n            //console.log(wall);\r\n            wallDocuments.push(wall.id);\r\n        });\r\n        if (canvas.scene.getEmbeddedDocument(\"Wall\", wallDocuments[0])) {\r\n            await canvas.scene.deleteEmbeddedDocuments(\"Wall\", wallDocuments);\r\n        }\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        //console.log(casterActor.id);\r\n        let fogCloudTiles = await Tagger.getByTag(`FogCloudTile-${casterActor.id}`);\r\n        if (fogCloudTiles.length > 0) {\r\n            aseSocket.executeAsGM(\"deleteTiles\", [fogCloudTiles[0].id]);\r\n        }\r\n    }\r\n\r\n    static async createFogCloud(midiData) {\r\n        let item = midiData.item;\r\n\r\n        let itemLevel = midiData.itemLevel;\r\n        let aseFlags = item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n        let caster = await canvas.tokens.get(midiData.tokenId);\r\n        let casterActor = caster.actor;\r\n        let cloudSize;\r\n        if (aseFlags.scaleWithLevel == undefined || aseFlags.scaleWithLevel) {\r\n            cloudSize = ((Number(aseFlags.fogCloudRadius ?? 20) / 2.5) * itemLevel);\r\n        }\r\n        else {\r\n            cloudSize = Number(aseFlags.fogCloudRadius ?? 20) / 2.5;\r\n        }\r\n        if (cloudSize < 2.5) cloudSize = 2.5;\r\n\r\n        const sound = aseFlags?.fogCloudSound ?? \"\";\r\n        const soundDelay = Number(aseFlags?.fogCloudSoundDelay) ?? 0;\r\n        const volume = aseFlags?.fogCloudVolume ?? 1;\r\n\r\n        const soundOptions = {\r\n            sound: sound,\r\n            volume: volume,\r\n            delay: soundDelay\r\n        };\r\n        const displayCrosshairs = async (crosshairs) => {\r\n            //console.log(\"Warpgate Crosshairs...\", crosshairs);\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect()\r\n                .file(\"jb2a.fog_cloud.1.white\")\r\n                .attachTo(crosshairs)\r\n                .persist()\r\n                .scaleToObject()\r\n                .opacity(0.5)\r\n                .play()\r\n        }\r\n        let crosshairsConfig = {\r\n            size: cloudSize,\r\n            icon: item.img,\r\n            label: game.i18n.localize(\"ASE.FogCloud\"),\r\n            tag: 'fog-cloud-crosshairs',\r\n            drawIcon: false,\r\n            drawOutline: false,\r\n            interval: 1\r\n        }\r\n        let fogCloudTemplate = await warpgate.crosshairs.show(crosshairsConfig, { show: displayCrosshairs });\r\n\r\n        await placeCloudAsTile(fogCloudTemplate, casterActor.id, itemLevel, soundOptions);\r\n\r\n        async function placeCloudAsTile(template, casterId, spellLevel, soundOptions) {\r\n            let templateData = template;\r\n            console.log(templateData);\r\n            let tileWidth;\r\n            let tileHeight;\r\n            let tileX;\r\n            let tileY;\r\n            let placedX = templateData.x;\r\n            let placedY = templateData.y;\r\n            let wallPoints = [];\r\n            let walls = [];\r\n\r\n            let wall_number = aseFlags.wallNumber * spellLevel;\r\n            let wall_angles = 2 * Math.PI / wall_number\r\n            tileWidth = (templateData.width * canvas.grid.size) + (canvas.grid.size / 2);\r\n            tileHeight = (templateData.width * canvas.grid.size) + (canvas.grid.size / 2);\r\n\r\n            let outerCircleRadius = (templateData.width * canvas.grid.size) / 2;\r\n            tileX = templateData.x - (tileWidth / 2);\r\n            tileY = templateData.y - (tileHeight / 2);\r\n            let data = [{\r\n                alpha: 1,\r\n                width: tileWidth,\r\n                height: tileHeight,\r\n                img: \"modules/jb2a_patreon/Library/1st_Level/Fog_Cloud/FogCloud_01_White_800x800.webm\",\r\n                overhead: true,\r\n                occlusion: {\r\n                    alpha: 0,\r\n                    mode: 3,\r\n                },\r\n                video: {\r\n                    autoplay: true,\r\n                    loop: true,\r\n                    volume: 0,\r\n                },\r\n                x: tileX,\r\n                y: tileY,\r\n                z: 100,\r\n                flags: { tagger: { tags: [`FogCloudTile-${casterId}`] }, advancedspelleffects: { fogCloudWallNum: wall_number } }\r\n            }]\r\n            let createdTiles = await aseSocket.executeAsGM(\"placeTiles\", data);\r\n            let tileId = createdTiles[0].id ?? createdTiles[0]._id;\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(soundOptions.sound)\r\n                .delay(soundOptions.delay)\r\n                .volume(soundOptions.volume)\r\n                .playIf(soundOptions.sound !== \"\")\r\n                .play();\r\n            for (let i = 0; i < wall_number; i++) {\r\n                let x = placedX + outerCircleRadius * Math.cos(i * wall_angles);\r\n                let y = placedY + outerCircleRadius * Math.sin(i * wall_angles);\r\n                wallPoints.push({ x: x, y: y });\r\n            }\r\n            for (let i = 0; i < wallPoints.length; i++) {\r\n                if (i < wallPoints.length - 1) {\r\n                    walls.push({\r\n                        c: [wallPoints[i].x, wallPoints[i].y, wallPoints[i + 1].x, wallPoints[i + 1].y],\r\n                        flags: { tagger: { tags: [`FogCloudWall-${tileId}`] } },\r\n                        move: 0\r\n                    })\r\n                }\r\n                else {\r\n                    walls.push({\r\n                        c: [wallPoints[i].x, wallPoints[i].y, wallPoints[0].x, wallPoints[0].y],\r\n                        flags: { tagger: { tags: [`FogCloudWall-${tileId}`] } },\r\n                        move: 0\r\n                    })\r\n                }\r\n            }\r\n\r\n            await aseSocket.executeAsGM(\"placeWalls\", walls);\r\n        }\r\n    }\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallsLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallNumber',\r\n            flagName: 'wallNumber',\r\n            flagValue: currFlags.wallNumber ?? 12,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ScaleWithLevelLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ScaleWithLevelTooltip\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.scaleWithLevel',\r\n            flagName: 'scaleWithLevel',\r\n            flagValue: currFlags.scaleWithLevel ?? true,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.FogCloudRadiusLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.FogCloudRadiusTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.fogCloudRadius',\r\n            flagName: 'fogCloudRadius',\r\n            flagValue: currFlags.fogCloudRadius ?? 20,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.FogCloudSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.fogCloudSound',\r\n            flagName: 'fogCloudSound',\r\n            flagValue: currFlags.fogCloudSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.FogCloudSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.fogCloudSoundDelay',\r\n            flagName: 'fogCloudSoundDelay',\r\n            flagValue: currFlags.fogCloudSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.FogCloudVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.fogCloudVolume',\r\n            flagName: 'fogCloudVolume',\r\n            flagValue: currFlags.fogCloudVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class spiritualWeapon {\r\n\r\n    static registerHooks() {\r\n        return;\r\n    }\r\n\r\n    static async createSpiritualWeapon(midiData) {\r\n        const casterActor = midiData.actor;\r\n        const casterActorRollData = casterActor.getRollData();\r\n        //console.log(\"Caster Actor Roll Data: \", casterActorRollData);\r\n        const casterToken = canvas.tokens.get(midiData.tokenId);\r\n        const item = midiData.item;\r\n        const effectOptions = item.getFlag('advancedspelleffects', 'effectOptions') ?? {};\r\n        //console.log(effectOptions);\r\n        //console.log(\"Midi Data: \", midiData);\r\n        const level = midiData.itemLevel;\r\n        let summonType = \"Spiritual Weapon\";\r\n\r\n        const casterActorSpellcastingMod = casterActorRollData.abilities[casterActorRollData.attributes.spellcasting].mod ?? 0;\r\n        const summonerDc = casterActor.data.data.attributes.spelldc;\r\n        const summonerAttack = (casterActorRollData.attributes.prof + casterActorSpellcastingMod) + Number(casterActorRollData.bonuses?.msak?.attack ?? 0);\r\n\r\n        //console.log(\"Caster Actor Roll Data: \", casterActorRollData);\r\n        const summonerMod = casterActorSpellcastingMod + Number(casterActorRollData.bonuses?.msak?.damage ?? 0);\r\n        let damageScale = '';\r\n\r\n        async function myEffectFunction(template, options, update) {\r\n            let glowColor;\r\n            let color = options.color;\r\n            const sound = options.effectOptions?.summonSound ?? \"\";\r\n            const soundDelay = Number(options.effectOptions?.summonSoundDelay) ?? 0;\r\n            const volume = options.effectOptions?.summonVolume ?? 1;\r\n\r\n            switch (color) {\r\n                case 'blue':\r\n                    glowColor = utilFunctions.rgbToHex(173, 216, 230)\r\n                    break;\r\n                case 'green':\r\n                    glowColor = utilFunctions.rgbToHex(144, 238, 144)\r\n                    break;\r\n                case 'orange':\r\n                    glowColor = utilFunctions.rgbToHex(255, 128, 0)\r\n                    break;\r\n                case 'pruple':\r\n                    glowColor = utilFunctions.rgbToHex(153, 0, 153)\r\n                    break;\r\n                case 'red':\r\n                    glowColor = utilFunctions.rgbToHex(204, 0, 0)\r\n                    break;\r\n                case 'yellow':\r\n                    glowColor = utilFunctions.rgbToHex(255, 255, 0)\r\n                    break;\r\n                case 'pink':\r\n                    glowColor = utilFunctions.rgbToHex(255, 102, 255)\r\n                    break;\r\n                default:\r\n                    glowColor = utilFunctions.rgbToHex(153, 204, 255)\r\n            }\r\n\r\n            let effectFile;\r\n            if (Sequencer.Database.entryExists(`jb2a.eldritch_blast.${color}`)) {\r\n                effectFile = `jb2a.eldritch_blast.${color}`\r\n            }\r\n            else {\r\n                effectFile = `jb2a.eldritch_blast.yellow`\r\n            }\r\n            let effect = `jb2a.bless.400px.intro.${color}`;\r\n            if (Sequencer.Database.entryExists(effect)) {\r\n                effect = effect;\r\n            }\r\n            else {\r\n                effect = `jb2a.bless.400px.intro.yellow`;\r\n            }\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(sound)\r\n                .delay(soundDelay)\r\n                .volume(volume)\r\n                .playIf(sound !== \"\")\r\n                .effect()\r\n                .file(effectFile)\r\n                .atLocation(template)\r\n                .waitUntilFinished(-1200)\r\n                .endTime(3300)\r\n                .playbackRate(0.7)\r\n                .scaleOut(0, 250)\r\n                .filter(\"Glow\", { color: glowColor, distance: 35, outerStrength: 2, innerStrength: 0.25 })\r\n                .center()\r\n                .belowTokens()\r\n                .effect()\r\n                .file(effect)\r\n                .atLocation(template)\r\n                .center()\r\n                .scale(1.5)\r\n                .belowTokens()\r\n                .play()\r\n        }\r\n\r\n        async function postEffects(template, token) {\r\n\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .animation()\r\n                .on(token)\r\n                .fadeIn(500)\r\n                .play()\r\n        }\r\n        let weaponData = [{\r\n            type: \"select\",\r\n            label: game.i18n.localize(\"ASE.WeaponDialogLabel\"),\r\n            options: [\"Mace\", \"Maul\", \"Scythe\", \"Sword\"]\r\n        }]\r\n        let weaponChoice = await warpgate.dialog(weaponData);\r\n        weaponChoice = weaponChoice[0].toLowerCase();\r\n\r\n        let spiritWeapon = `jb2a.spiritual_weapon.${weaponChoice}`;\r\n\r\n        let types = Sequencer.Database.getPathsUnder(spiritWeapon);\r\n        let typeOptions = [];\r\n\r\n        types.forEach((type) => {\r\n            typeOptions.push(utilFunctions.capitalizeFirstLetter(type));\r\n        });\r\n\r\n        let typeData = [{\r\n            type: \"select\",\r\n            label: game.i18n.localize(\"ASE.SpiritTypeDialogLabel\"),\r\n            options: typeOptions\r\n        }];\r\n        let typeChoice = await warpgate.dialog(typeData);\r\n        typeChoice = typeChoice[0].toLowerCase();\r\n\r\n        spiritWeapon = spiritWeapon + `.${typeChoice}`;\r\n\r\n        let colors = Sequencer.Database.getPathsUnder(spiritWeapon);\r\n        let colorOptions = [];\r\n\r\n        colors.forEach((color) => {\r\n            colorOptions.push(utilFunctions.capitalizeFirstLetter(color));\r\n        });\r\n        let attackColors;\r\n\r\n        if (weaponChoice == \"mace\" || weaponChoice == \"maul\" || weaponChoice == \"scythe\" || weaponChoice == \"sword\") {\r\n            attackColors = Sequencer.Database.getPathsUnder(`jb2a.spiritual_weapon.${weaponChoice}`)\r\n        }\r\n        else if (Sequencer.Database.entryExists(`jb2a.${weaponChoice}.melee`)) {\r\n            attackColors = Sequencer.Database.getPathsUnder(`jb2a.${weaponChoice}.melee`);\r\n        }\r\n        else {\r\n            attackColors = Sequencer.Database.getPathsUnder(`jb2a.sword.melee.fire`);\r\n        }\r\n        let attackColorOptions = [];\r\n\r\n        attackColors.forEach((attackColor) => {\r\n            attackColorOptions.push(utilFunctions.capitalizeFirstLetter(attackColor));\r\n        });\r\n\r\n        let colorData = [{\r\n            type: \"select\",\r\n            label: game.i18n.localize(\"ASE.SpiritColorDialogLabel\"),\r\n            options: colorOptions\r\n        }];\r\n\r\n        let colorChoices = await warpgate.dialog(colorData);\r\n        let spiritColorChoice = colorChoices[0].toLowerCase();\r\n\tlet attackColorChoice = spiritColorChoice;\r\n\r\n        spiritWeapon = spiritWeapon + `.${spiritColorChoice}`;\r\n        // console.log(\"Spirit Weapon: \" + spiritWeapon);\r\n        let spiritAttackAnim;\r\n\r\n\tif (weaponChoice != \"scythe\") {\r\n \t    if (attackColorChoice == \"white\") {\r\n\t        attackColorChoice = 'black';\r\n\t   } else if (weaponChoice == \"mace\" || weaponChoice == \"maul\" && attackColorChoice == \"purple\") {\r\n\t\tattackColorChoice = 'dark_purple';\r\n\t   }\r\n\t    spiritAttackAnim = `jb2a.${weaponChoice}.melee.fire.${attackColorChoice}`;\r\n\r\n\t}\r\n\t else {\r\n\t    spiritAttackAnim = spiritWeapon;\r\n        }\r\n\r\n       // console.log(\"Spirit Attack Anim: \" + spiritAttackAnim);\r\n        let spiritualWeapon = Sequencer.Database.getEntry(spiritWeapon).file;\r\n       // console.log(\"Spiritual Weapon path: \", spiritualWeapon);\r\n        let spiritualWeaponAttackImg = Sequencer.Database.getEntry(spiritWeapon).file;\r\n       // console.log(\"Spiritual Weapon Attack path: \", spiritualWeaponAttackImg);\r\n        if (spiritualWeaponAttackImg.includes(\"Mace\") || spiritualWeaponAttackImg.includes(\"Maul\") || spiritualWeaponAttackImg.includes(\"Sword\")){\r\n            spiritualWeaponAttackImg = spiritualWeaponAttackImg.replace(\"200x200.webm\", \"Thumb.webp\");\r\n        }\r\n        else {\r\n            spiritualWeaponAttackImg = spiritualWeaponAttackImg.replace(\"300x300.webm\", \"Thumb.webp\");\r\n        }\r\n        // console.log(\"Spiritual Weapon Attack path: \", spiritualWeaponAttackImg);\r\n        const spiritualWeaponActorImg = spiritualWeaponAttackImg;\r\n        // console.log(\"Level: \", level);\r\n        if ((level - 3) > 0) {\r\n            damageScale = `+ ${Math.floor((level - 2) / 2)}d8[upcast]`;\r\n        }\r\n        //console.log(\"Damage Scale: \", damageScale);\r\n        const attackItemName = game.i18n.localize('ASE.SpiritAttackItemName');\r\n        let updates = {\r\n            token: {\r\n                'alpha': 0,\r\n                'name': `${summonType} of ${casterActor.name}`,\r\n                'img': spiritualWeapon,\r\n                'scale': 1.5,\r\n                'actorLink': false\r\n            },\r\n            actor: {\r\n                'name': `${summonType} of ${casterActor.name}`,\r\n                'img': spiritualWeaponActorImg,\r\n            },\r\n            embedded: {\r\n                Item: {}\r\n            }\r\n        };\r\n        updates.embedded.Item[attackItemName] = {\r\n            'type': 'weapon',\r\n            img: spiritualWeaponAttackImg,\r\n            \"data\": {\r\n                \"ability\": \"\",\r\n                \"actionType\": \"mwak\",\r\n                \"activation\": { \"type\": \"action\", \"cost\": 1, \"condition\": \"\" },\r\n                \"attackBonus\": `- @mod - @prof + ${summonerAttack}`,\r\n                \"damage\": { \"parts\": [[`1d8 ${damageScale} + ${summonerMod}`, 'force']], \"versatile\": \"\" },\r\n                \"range\": { \"value\": null, \"long\": null, \"units\": \"\" },\r\n                \"description\": {\r\n                    \"value\": game.i18n.localize('ASE.SpiritAttackItemDescription'),\r\n                }\r\n            },\r\n            \"flags\": {\r\n                \"advancedspelleffects\": {\r\n                    \"enableASE\": true,\r\n                    \"disableSettings\": true,\r\n                    \"spellEffect\": game.i18n.localize('ASE.SpiritAttackItemName'),\r\n                    'castItem': true,\r\n                    'castStage': 'preDamage',\r\n                    'effectOptions': {\r\n                        'attackAnimFile': spiritAttackAnim\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        let crosshairsConfig = {\r\n            size: 1,\r\n            label: `${summonType} of ${casterActor.name}`,\r\n            tag: 'spiritual-weapon-crosshairs',\r\n            drawIcon: false,\r\n            drawOutline: false,\r\n            interval: 2\r\n        };\r\n\r\n        const options = { controllingActor: game.actors.get(casterActor.id), crosshairs: crosshairsConfig };\r\n        const displayCrosshairs = async (crosshairs) => {\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect()\r\n                .file(spiritualWeapon)\r\n                .attachTo(crosshairs)\r\n                .persist()\r\n                .name('ASE-spiritual-weapon-crosshairs')\r\n                .opacity(0.5)\r\n                .play()\r\n\r\n        };\r\n        const callbacks = {\r\n            pre: async (template, update) => {\r\n                myEffectFunction(template, { color: spiritColorChoice, effectOptions: effectOptions }, update);\r\n                await warpgate.wait(1750);\r\n            },\r\n            post: async (template, token) => {\r\n                postEffects(template, token);\r\n                await warpgate.wait(500);\r\n                await Sequencer.EffectManager.endEffects({ name: 'ASE-spiritual-weapon-crosshairs' });\r\n            },\r\n            show: displayCrosshairs\r\n        };\r\n\r\n        warpgate.spawn(summonType, updates, callbacks, options);\r\n    }\r\n\r\n    static async spiritualWeaponAttack(data) {\r\n        console.log(\"ASE Spiritual Weapon Attacking...\", data);\r\n        const casterActor = data.actor;\r\n        const casterToken = canvas.tokens.get(data.tokenId);\r\n        const spellItem = data.item;\r\n        const aseEffectOptions = spellItem?.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        const attackAnimFile = aseEffectOptions?.attackAnimFile;\r\n\r\n        const target = Array.from(data.targets)[0];\r\n        let hitTargets = Array.from(data.hitTargets);\r\n        console.log(\"Hit Targets: \", hitTargets);\r\n        const missed = hitTargets.length == 0;\r\n        console.log(\"ASE Spiritual Weapon Attack Missed: \", missed);\r\n        //console.log(\"Caster: \", casterActor);\r\n        //console.log(\"Target: \", target);\r\n        //console.log(\"Anim File: \", attackAnimFile);\r\n        //console.log(\"ASE Effect Options: \", aseEffectOptions);\r\n\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .animation()\r\n            .on(casterToken)\r\n            .opacity(1)\r\n            .fadeOut(250)\r\n            .effect()\r\n            .fadeIn(750)\r\n            .startTime(500)\r\n            .endTime(650)\r\n            .file(attackAnimFile)\r\n            .missed(missed)\r\n            .atLocation(casterToken)\r\n            .fadeOut(500)\r\n            .stretchTo(target)\r\n            .waitUntilFinished(-250)\r\n            .animation()\r\n            .on(casterToken)\r\n            .opacity(1)\r\n            .fadeIn(750)\r\n            .play();\r\n\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.SummonSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.summonSound',\r\n            flagName: 'summonSound',\r\n            flagValue: currFlags.summonSound ?? '',\r\n        });\r\n\r\n        /*animOptions.push({\r\n            label: game.i18n.localize(\"ASE.UseSpiritGlowLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.UseSpiritGlowTooltip\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.useGlow',\r\n            flagName: 'useGlow',\r\n            flagValue: currFlags.useGlow ?? false,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.SpiritGlowColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.SpiritGlowColorTooltip\"),\r\n            type: 'colorPicker',\r\n            name: 'flags.advancedspelleffects.effectOptions.glowColor',\r\n            flagName: 'glowColor',\r\n            flagValue: currFlags.glowColor ?? '#0000FF',\r\n        });\r\n        */\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.SummonSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.summonSoundDelay',\r\n            flagName: 'summonSoundDelay',\r\n            flagValue: currFlags.summonSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.SummonVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.summonVolume',\r\n            flagName: 'summonVolume',\r\n            flagValue: currFlags.summonVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false,\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class steelWindStrike {\r\n\r\n    static registerHooks() {\r\n        return;\r\n    }\r\n\r\n    static async doStrike(midiData) {\r\n        let item = midiData.item;\r\n        let aseFlags = item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n        //console.log(\"aseFlags\", aseFlags);\r\n        let weapon = aseFlags.weapon ?? 'sword';\r\n        let weaponColor = aseFlags.weaponColor ?? 'blue';\r\n\r\n        let caster = canvas.tokens.get(midiData.tokenId);\r\n        let targets = Array.from(game.user.targets);\r\n        let rollDataForDisplay = [];\r\n        let dagger = \"\";\r\n        if (weapon == \"dagger\") dagger = \".02\"\r\n\r\n        let swordAnim;\r\n        let gustAnim = \"jb2a.gust_of_wind.veryfast\";\r\n        let validSwingTypes = [0, 2, 4];\r\n\r\n        let animStartTimeMap = {\r\n            0: 750,\r\n            1: 500,\r\n            2: 850,\r\n            3: 850,\r\n            4: 1000,\r\n            5: 500\r\n        };\r\n        let animEndTimeMap = {\r\n            0: 1250,\r\n            1: 1250,\r\n            2: 2000,\r\n            3: 1250,\r\n            4: 1700,\r\n            5: 1250\r\n        };\r\n        let weaponsPathMap = {\r\n            \"sword\": \"melee.01\",\r\n            \"mace\": \"melee\",\r\n            \"greataxe\": \"melee\",\r\n            \"greatsword\": \"melee\",\r\n            \"handaxe\": \"melee\",\r\n            \"spear\": \"melee.01\"\r\n        };\r\n        let currentAutoRotateState = false;\r\n        if (game.modules.get(\"autorotate\")?.active) {\r\n            currentAutoRotateState = caster.document.getFlag(\"autorotate\", \"enabled\") ?? false;\r\n        }\r\n        if (currentAutoRotateState) {\r\n            await caster.document.setFlag(\"autorotate\", \"enabled\", false);\r\n        }\r\n        //console.log (\"Auto Rotate Flag status: \",caster.document.getFlag(\"autorotate\", \"enabled\"));\r\n        await steelWindStrike(item,caster, targets, aseFlags);\r\n\r\n        async function evaluateAttack(target, rollData, damageFormula) {\r\n            //console.log(\"Evalute attack target: \", target);\r\n            let attackRoll = await new Roll(`1d20 + @mod + @prof`, rollData).evaluate({ async: true });\r\n            console.log(\"ASE SWS ttack roll: \", attackRoll);\r\n            // game.dice3d?.showForRoll(attackRoll);\r\n            if (attackRoll.total < target.actor.data.data.attributes.ac.value) {\r\n                onMiss(target, attackRoll);\r\n            }\r\n            else {\r\n                onHit(target, attackRoll, damageFormula);\r\n            }\r\n        }\r\n\r\n        async function onHit(target, attackRoll, damageFormula) {\r\n            //console.log('Attack hit!');\r\n            //console.log(\"Attack roll: \", attackRoll);\r\n            let currentRoll = await new Roll(damageFormula, caster.actor.getRollData()).evaluate({ async: true });\r\n            //console.log(\"Current damage dice roll total: \", currentRoll.total);\r\n            //game.dice3d?.showForRoll(currentRoll);\r\n            if (game.modules.get(\"midi-qol\")?.active) {\r\n                new MidiQOL.DamageOnlyWorkflow(midiData.actor, midiData.tokenId, currentRoll.total, \"force\", [target], currentRoll, { flavor: game.i18n.localize(\"ASE.SteelWindStrikeDamageFlavor\"), itemCardId: \"new\", itemData: midiData.item.data });\r\n            }\r\n            //console.log(\"damage data: \", damageData);\r\n            rollDataForDisplay.push({\r\n                \"target\": target.name,\r\n                \"attackroll\": attackRoll.total,\r\n                \"hit\": true,\r\n                \"damageroll\": currentRoll.total\r\n            });\r\n        }\r\n        async function onMiss(target, attackRoll) {\r\n            //console.log('Missed attack...');\r\n            //console.log(\"Attack roll: \", attackRoll);\r\n            rollDataForDisplay.push({\r\n                \"target\": target.name,\r\n                \"attackroll\": attackRoll.total,\r\n                \"hit\": false,\r\n                \"damageroll\": 0\r\n            });\r\n            //let currentRoll = new Roll(`${damageDie}`, caster.actor.getRollData()).roll({ async: false });\r\n            //game.dice3d?.showForRoll(currentRoll);\r\n            //new MidiQOL.DamageOnlyWorkflow(midiDataactor, midiDatatokenId, currentRoll.total, \"bludgeoning\", [target], currentRoll, { flavor: `Flurry of Blows - Damage Roll (${damageDie} Bludgeoning)`, itemCardId: midiDataitemCardId });\r\n        }\r\n\r\n        async function finalTeleport(caster, location) {\r\n            //console.log(\"template: \", location);\r\n            let startLocation = { x: caster.x, y: caster.y };\r\n            //let adjustedLocation = { x: location.x - (canvas.grid.size / 2), y: location.y - (canvas.grid.size / 2) }\r\n            let distance = Math.sqrt(Math.pow((location.x - caster.x), 2) + Math.pow((location.y - caster.y), 2));\r\n\r\n            let steelWindSequence = new Sequence(\"Advanced Spell Effects\")\r\n                .animation()\r\n                .on(caster)\r\n                .rotateTowards(location)\r\n                .animation()\r\n                .on(caster)\r\n                .snapToGrid()\r\n                .moveTowards(location, { ease: \"easeOutElasticCustom\" })\r\n                .moveSpeed(distance / 60)\r\n                .duration(800)\r\n                .waitUntilFinished(-750)\r\n                .effect()\r\n                .atLocation(startLocation)\r\n                .file(gustAnim)\r\n                .stretchTo(location)\r\n                .opacity(0.8)\r\n                .fadeOut(250)\r\n                .belowTokens()\r\n                .waitUntilFinished()\r\n                .thenDo(async () => {\r\n                    if (game.modules.get(\"autorotate\")?.active) {\r\n                        await caster.document.setFlag(\"autorotate\", \"enabled\", currentAutoRotateState);\r\n                    }\r\n                })\r\n            await steelWindSequence.play();\r\n        }\r\n        //FREE POSITION CODE TAKEN FROM WARPGATE MODULE\r\n        //Permission for free re-use was granted by Matthew Haentschke\r\n        function getFreePosition(origin) {\r\n            const center = canvas.grid.getCenter(origin.x, origin.y)\r\n            origin = { x: center[0], y: center[1] };\r\n            const positions = generatePositions(origin);\r\n            //console.log(\"Generated Positions: \",positions);\r\n            for (let position of positions) {\r\n                //console.log(`Checking if position {${position.x}, ${position.y}} is free...`);\r\n                if (isFree(position)) {\r\n                    return position;\r\n                }\r\n            }\r\n\r\n        }\r\n        function generatePositions(origin) {\r\n            let positions = [canvas.grid.getSnappedPosition(origin.x - 1, origin.y - 1)];\r\n            for (let r = canvas.scene.dimensions.size; r < canvas.scene.dimensions.size * 2; r += canvas.scene.dimensions.size) {\r\n\r\n                for (let theta = 0; theta < 2 * Math.PI; theta += Math.PI / (4 * r / canvas.scene.dimensions.size)) {\r\n                    const newPos = canvas.grid.getTopLeft(origin.x + r * Math.cos(theta), origin.y + r * Math.sin(theta))\r\n                    positions.push({ x: newPos[0], y: newPos[1] });\r\n                }\r\n            }\r\n            return positions;\r\n        }\r\n        function isFree(position) {\r\n            for (let token of canvas.tokens.placeables) {\r\n                const hitBox = new PIXI.Rectangle(token.x, token.y, token.w, token.h);\r\n                //console.log(`Checking hitbox for ${token.name}`, hitBox);\r\n                if (hitBox.contains(position.x, position.y)) {\r\n                    //console.log(\"Not free...Checking next position\");\r\n                    return false;\r\n                }\r\n            }\r\n            //console.log(\"Free!\");\r\n            return true;\r\n        }\r\n        //---------------------------------------------------------------------------\r\n        async function steelWindStrike(item,caster, targets, options) {\r\n            const dashSound = options.dashSound ?? \"\";\r\n            const dashSoundDelay = options.dashSoundDelay ?? 0;\r\n            const dashVolume = options.dashVolume ?? 1;\r\n            const strikeSound = options.strikeSound ?? \"\";\r\n            let strikeSoundDelay = options.strikeSoundDelay ?? 0;\r\n            const strikeVolume = options.strikeVolume ?? 1;\r\n\r\n            let itemRollData = item.getRollData();\r\n            const itemRollMod = itemRollData.mod;\r\n\r\n            const damageFormula = `${options.dmgDieCount}${options.dmgDie}${options.dmgMod > 0 ? \"+\" : \"\"}${options.dmgMod > 0 ? options.dmgMod : \"\"}`;\r\n            //console.log(\"Damage formula: \", damageFormula);\r\n\r\n            let currentX;\r\n            let targetX;\r\n            let currentY;\r\n            let targetY;\r\n            let distance;\r\n            let swingType;\r\n            let swingStartDelay = -600;\r\n            //console.log(targets);\r\n            for (let i = 0; i < targets.length; i++) {\r\n                if (i == targets.length - 1) {\r\n                    swingType = 5;\r\n                    swingStartDelay = -250;\r\n                    strikeSoundDelay += 750;\r\n                }\r\n                else {\r\n                    swingType = validSwingTypes[utilFunctions.getRandomInt(0, 2)];\r\n                }\r\n                swordAnim = `jb2a.${weapon}.${weaponsPathMap[weapon]}.${weaponColor}.${swingType}`;\r\n                //console.log(targets[i]);\r\n                let target = targets[i];\r\n                itemRollData.mod = itemRollMod;\r\n                evaluateAttack(target, itemRollData, damageFormula);\r\n                //debugger;\r\n                const openPosition = getFreePosition({ x: target.x, y: target.y });\r\n                let rotateAngle = new Ray(openPosition, target).angle * (180 / Math.PI);\r\n                currentX = caster.x;\r\n                targetX = openPosition.x;\r\n                currentY = caster.y;\r\n                targetY = openPosition.y;\r\n                distance = Math.sqrt(Math.pow((targetX - currentX), 2) + Math.pow((targetY - currentY), 2));\r\n                //console.log(distance);\r\n                let steelWindSequence = new Sequence(\"Advanced Spell Effects\")\r\n                    .sound()\r\n                    .file(dashSound)\r\n                    .volume(dashVolume)\r\n                    .delay(dashSoundDelay)\r\n                    .playIf(dashSound != \"\")\r\n                    .effect()\r\n                    .atLocation({ x: caster.x + (canvas.grid.size / 2), y: caster.y + (canvas.grid.size / 2) })\r\n                    .file(gustAnim)\r\n                    .stretchTo({ x: openPosition.x + (canvas.grid.size / 2), y: openPosition.y + (canvas.grid.size / 2) })\r\n                    .opacity(0.8)\r\n                    .fadeOut(250)\r\n                    .belowTokens()\r\n                    .animation()\r\n                    .on(caster)\r\n                    .rotate(rotateAngle - 90)\r\n                    .animation()\r\n                    .on(caster)\r\n                    .moveTowards(openPosition, { ease: \"easeOutElasticCustom\" })\r\n                    .moveSpeed(distance / 60)\r\n                    .duration(800)\r\n                    .waitUntilFinished(swingStartDelay)\r\n                    .sound()\r\n                    .file(strikeSound)\r\n                    .volume(strikeVolume)\r\n                    .delay(strikeSoundDelay)\r\n                    .playIf(strikeSound != \"\")\r\n                    .effect()\r\n                    .atLocation(caster, { cacheLocation: false })\r\n                    .file(swordAnim)\r\n                    .startTime(animStartTimeMap[swingType])\r\n                    .endTime(animEndTimeMap[swingType])\r\n                    .stretchTo(target)\r\n                    .fadeOut(250, { ease: \"easeOutQuint\" })\r\n                    .waitUntilFinished()\r\n                await steelWindSequence.play();\r\n            }\r\n            let contentHTML = `<form class=\"editable flexcol\" autocomplete=\"off\">`;\r\n            rollDataForDisplay.forEach((data) => {\r\n                let name = data.target;\r\n                let attackTotal = data.attackroll;\r\n                let damageTotal = data.damageroll;\r\n                let hitStatus = data.hit;\r\n                contentHTML = contentHTML + `<section>\r\n                                        <li class=\"flexrow\">\r\n                                            <h4>${name}</h4>\r\n                                            <div>\r\n                                                <span>${game.i18n.localize(\"ASE.SWSAttackTotalMessage\")}${attackTotal}</span>\r\n                                            </div>\r\n                                            <div>\r\n                                                <span>${hitStatus ? game.i18n.localize(\"ASE.SWSHitMessage\") : game.i18n.localize(\"ASE.SWSMissMessage\")}</span>\r\n                                            </div>\r\n                                            <div> \r\n                                                <span>${game.i18n.localize(\"ASE.SWSDamageTotalMessage\")} ${damageTotal}</span>\r\n                                            </div>\r\n                                        </li>\r\n                                    </section> \r\n                                    <br>`;\r\n            });\r\n            contentHTML = contentHTML + `</form>`\r\n            async function chooseFinalLocation() {\r\n                let crosshairsConfig = {\r\n                    size: 1,\r\n                    icon: caster.data.img,\r\n                    label: game.i18n.localize(\"ASE.SWSFinalLocationCrosshairsLabel\"),\r\n                    tag: 'end-at-crosshairs',\r\n                    drawIcon: true,\r\n                    drawOutline: false,\r\n                    interval: 2\r\n                }\r\n                let template = await warpgate.crosshairs.show(crosshairsConfig);\r\n                await finalTeleport(caster, template);\r\n\r\n            }\r\n            let done = await (new Promise((resolve) => {\r\n                new Dialog({\r\n                    title: game.i18n.localize(\"ASE.SWSBreakDownWindowTitle\"),\r\n                    content: contentHTML,\r\n                    buttons:\r\n                    {\r\n                        one: {\r\n                            label: game.i18n.localize(\"ASE.OK\"),\r\n                            callback: (html) => {\r\n                                resolve(true);\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n                    { width: '500' },\r\n                ).render(true)\r\n            }));\r\n\r\n            if (done) {\r\n                await chooseFinalLocation();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n\r\n        const SwordColors = `jb2a.sword.melee.01`;\r\n        const swordColorOptions = utilFunctions.getDBOptions(SwordColors);\r\n\r\n        const dieOptions = [\r\n            {'d4': 'd4'},\r\n            {'d6': 'd6'},\r\n            {'d8': 'd8'},\r\n            {'d10': 'd10'},\r\n            {'d12': 'd12'},\r\n            {'d20': 'd20'}\r\n        ];\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageDieCountLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDieCount',\r\n            flagName: 'dmgDieCount',\r\n            flagValue: currFlags.dmgDieCount ?? 6,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageDieLabel\"),\r\n            type: 'dropdown',\r\n            options: dieOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDie',\r\n            flagName: 'dmgDie',\r\n            flagValue: currFlags.dmgDie ?? 'd10',\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageBonusLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgMod',\r\n            flagName: 'dmgMod',\r\n            flagValue: currFlags.dmgMod ?? 0,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.SwordColorLabel\"),\r\n            type: 'dropdown',\r\n            name: 'flags.advancedspelleffects.effectOptions.weaponColor',\r\n            options: swordColorOptions,\r\n            flagName: 'weaponColor',\r\n            flagValue: currFlags.weaponColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DashSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dashSound',\r\n            flagName: 'dashSound',\r\n            flagValue: currFlags.dashSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DashSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dashSoundDelay',\r\n            flagName: 'dashSoundDelay',\r\n            flagValue: currFlags.dashSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DashVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dashVolume',\r\n            flagName: 'dashVolume',\r\n            flagValue: currFlags.dashVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.StrikeSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.strikeSound',\r\n            flagName: 'strikeSound',\r\n            flagValue: currFlags.strikeSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.StrikeSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.strikeSoundDelay',\r\n            flagName: 'strikeSoundDelay',\r\n            flagValue: currFlags.strikeSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.StrikeVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.strikeVolume',\r\n            flagName: 'strikeVolume',\r\n            flagValue: currFlags.strikeVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false,\r\n        }\r\n\r\n    }\r\n}\r\n","import * as utilFunctions from \"../utilityFunctions.js\";\r\nimport { aseSocket } from \"../aseSockets.js\";\r\n\r\nexport class thunderStep {\r\n\r\n    static registerHooks() {\r\n        return;\r\n    }\r\n\r\n    //CONTRIBUTED BY WASP----\r\n    static async doTeleport(midiData) {\r\n        let actorD = midiData.actor;\r\n        const tokenD = canvas.tokens.get(midiData.tokenId);\r\n        const itemD = actorD.items.getName(midiData.item.name);\r\n        const chatMessage = await game.messages.get(midiData.itemCardId);\r\n        const spellLevel = midiData.itemLevel ? Number(midiData.itemLevel) : 3;\r\n        const spellSaveDC = actorD.data.data.attributes.spelldc;\r\n\r\n        const effectOptions = itemD.getFlag('advancedspelleffects', 'effectOptions') ?? {};\r\n        const teleportSound = effectOptions.teleportSound ?? \"\";\r\n        const teleportSoundDelay = Number(effectOptions.teleportSoundDelay) ?? 0;\r\n        const teleportVolume = effectOptions.teleportVolume ?? 1;\r\n        const reappearSound = effectOptions.reappearSound ?? \"\";\r\n        const reappearSoundDelay = Number(effectOptions.reappearSoundDelay) ?? 0;\r\n        const reappearVolume = effectOptions.reappearVolume ?? 1;\r\n\r\n        const teleport_range = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\r\n            t: \"circle\",\r\n            user: game.userId,\r\n            x: tokenD.x + canvas.grid.size / 2,\r\n            y: tokenD.y + canvas.grid.size / 2,\r\n            direction: 0,\r\n            distance: 92.5,\r\n            fillColor: game.user.color\r\n        }]);\r\n\r\n        const damage_range = await canvas.scene.createEmbeddedDocuments(\"MeasuredTemplate\", [{\r\n            t: \"circle\",\r\n            user: game.userId,\r\n            x: tokenD.x + canvas.grid.size / 2,\r\n            y: tokenD.y + canvas.grid.size / 2,\r\n            direction: 0,\r\n            distance: 12.5,\r\n            fillColor: \"#FF0000\"\r\n        }]);\r\n\r\n        const passengers = [];\r\n        if (midiData.targets.length) {\r\n            let passenger = await canvas.tokens.get(midiData.targets[0]._id);\r\n            if (passenger) passengers.push(passenger);\r\n        } else {\r\n            let potentialPassengers = canvas.tokens.placeables.filter(function (target) {\r\n                return canvas.grid.measureDistance(tokenD, target) <= 7.5 && target.data.disposition === tokenD.data.disposition && target !== tokenD;\r\n            });\r\n\r\n            let passenger = potentialPassengers.length ? await new Promise((resolve) => {\r\n\r\n                const content = [`${game.i18n.localize(\"ASE.ThunderStepPassengerPrompt\")}<br><br><select style='width:100%'>`];\r\n                content.push(`<option passenger_id=\"noone\">${game.i18n.localize(\"ASE.NoOne\")}</option>`)\r\n                potentialPassengers.forEach(passenger => {\r\n                    content.push(`<option passenger_id=\"${passenger.id}\">${passenger.name}</option>`)\r\n                })\r\n                content.push(\"</select><br>\");\r\n\r\n                let dismissed = true;\r\n                new Dialog({\r\n                    title: game.i18n.localize(\"ASE.ThunderStep\"),\r\n                    content: content,\r\n                    buttons: {\r\n                        one: {\r\n                            icon: `<i class=\"fas fa-check\"></i>`,\r\n                            label: game.i18n.localize(\"ASE.Done\"),\r\n                            callback: (html) => {\r\n                                const tokenId = html.find(\"select\").find(':selected').attr('passenger_id');\r\n                                dismissed = false;\r\n                                resolve(tokenId);\r\n                            }\r\n                        }\r\n                    },\r\n                    default: game.i18n.localize(\"ASE.Cancel\"),\r\n                    close: () => {\r\n                        if (dismissed) {\r\n                            resolve(\"cancel\");\r\n                        }\r\n                    }\r\n                }).render(true);\r\n            }) : \"noone\";\r\n\r\n            if (passenger === \"cancel\") {\r\n                teleport_range[0].delete();\r\n                damage_range[0].delete();\r\n                return;\r\n            }\r\n\r\n            if (passenger !== \"noone\") {\r\n                passengers.push(potentialPassengers.find(t => t.id === passenger));\r\n            }\r\n        }\r\n\r\n        passengers.push(tokenD);\r\n\r\n        const displayCrosshairs = async (crosshairs) => {\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect()\r\n                .from(tokenD)\r\n                .attachTo(crosshairs)\r\n                .persist()\r\n                .loopProperty(\"sprite\", \"rotation\", { duration: 10000, from: 0, to: 360 })\r\n                .opacity(0.5)\r\n                .play()\r\n\r\n        };\r\n        let crosshairsConfig = {\r\n            size: 1,\r\n            label: game.i18n.localize(\"ASE.ThunderStep\"),\r\n            tag: 'thunder-step-crosshairs',\r\n            drawIcon: false,\r\n            drawOutline: false,\r\n            interval: 2\r\n        };\r\n\r\n        let position = await warpgate.crosshairs.show(crosshairsConfig, { show: displayCrosshairs });\r\n\r\n        teleport_range[0].delete();\r\n\r\n        let targets = canvas.tokens.placeables.filter(function (target) {\r\n            return target?.actor?.data?.data?.attributes?.hp?.value > 0\r\n                && canvas.grid.measureDistance(tokenD, target) <= 12.5\r\n                && passengers.indexOf(target) === -1;\r\n        });\r\n\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(teleportSound)\r\n            .volume(teleportVolume)\r\n            .delay(teleportSoundDelay)\r\n            .playIf(teleportSound !== \"\")\r\n            .effect()\r\n            .file(\"jb2a.shatter.blue\")\r\n            .atLocation(tokenD, { cacheLocation: true })\r\n            .scale(1.25)\r\n            .effect()\r\n            .file(\"jb2a.impact.ground_crack.01.blue\")\r\n            .atLocation(tokenD, { cacheLocation: true })\r\n            .belowTokens()\r\n            .delay(1400)\r\n            .wait(1300)\r\n            .thenDo(async () => {\r\n                let targetUUIDs = targets.map(t => t.document.uuid);\r\n                console.log(\"ASE: Thunder Step: Targets: \" + targetUUIDs);\r\n                let stateOptions = {\r\n                    targets: targetUUIDs,\r\n                    targetted: true,\r\n                };\r\n                game.ASESpellStateManager.addSpell(itemD.uuid, stateOptions);\r\n                for await (let passenger of passengers) {\r\n                    const updateData = {\r\n                        x: position.x - (canvas.grid.size / 2) + passenger.center.x - tokenD.center.x,\r\n                        y: position.y - (canvas.grid.size / 2) + passenger.center.y - tokenD.center.y\r\n                    };\r\n                    await aseSocket.executeAsGM(\"updateDocument\", passenger.id, updateData);\r\n                }\r\n\r\n            }, true)\r\n            .wait(250)\r\n            .sound()\r\n            .file(reappearSound)\r\n            .volume(reappearVolume)\r\n            .delay(reappearSoundDelay)\r\n            .playIf(reappearSound !== \"\")\r\n            .effect()\r\n            .baseFolder(\"modules/jb2a_patreon/Library/Generic/Impact\")\r\n            .file(\"Impact_01_Regular_Blue_400x400.webm\")\r\n            .atLocation(tokenD)\r\n            .scale(1.75)\r\n            .wait(50)\r\n            .thenDo(async () => {\r\n                damage_range[0].delete();\r\n            }, true)\r\n            .play();\r\n\r\n    }\r\n    static async getRequiredSettings(currFlags) { \r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TeleportSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.teleportSound',\r\n            flagName: 'teleportSound',\r\n            flagValue: currFlags?.teleportSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TeleportSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.teleportSoundDelay',\r\n            flagName: 'teleportSoundDelay',\r\n            flagValue: currFlags?.teleportSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TeleportVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.teleportVolume',\r\n            flagName: 'teleportVolume',\r\n            flagValue: currFlags?.teleportVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ReappearSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.reappearSound',\r\n            flagName: 'reappearSound',\r\n            flagValue: currFlags?.reappearSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ReappearSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.reappearSoundDelay',\r\n            flagName: 'reappearSoundDelay',\r\n            flagValue: currFlags?.reappearSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ReappearVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.reappearVolume',\r\n            flagName: 'reappearVolume',\r\n            flagValue: currFlags?.reappearVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false\r\n        }\r\n\r\n    }\r\n}","import * as utilFunctions from \"../utilityFunctions.js\";\r\nexport class summonCreature {\r\n    static registerHooks() {\r\n        return;\r\n    }\r\n    static async doSummon(midiData) {\r\n        async function myEffectFunction(template, effectInfo, summonQty) {\r\n            //console.log(\"Color: \", color);\r\n\r\n            const portalAnim = `jb2a.portals.vertical.vortex.${effectInfo.portalColor}`;\r\n            const magicSignIntro = `jb2a.magic_signs.circle.02.${effectInfo.magicSchool}.intro.${effectInfo.magicSchoolColor}`;\r\n            const magicSignLoop = `jb2a.magic_signs.circle.02.${effectInfo.magicSchool}.loop.${effectInfo.magicSchoolColor}`;\r\n            const effectAAnim = `jb2a.eldritch_blast.${effectInfo.effectAColor}.05ft`;\r\n            const portalCloseAnim = `jb2a.impact.010.${effectInfo.portalImpactColor}`;\r\n\r\n            const portalSound = effectInfo.portalSound ?? \"\";\r\n            let portalSoundDelay = Number(effectInfo.portalSoundDelay) ?? 0;\r\n            if (!typeof (portalSoundDelay) === \"number\") {\r\n                portalSoundDelay = 0;\r\n            }\r\n            const portalSoundVolume = effectInfo.portalSoundVolume ?? 1;\r\n\r\n            const circleSound = effectInfo.circleSound ?? \"\";\r\n            let circleSoundDelay = Number(effectInfo.circleSoundDelay) ?? 0;\r\n            if (!typeof (circleSoundDelay) === \"number\") {\r\n                circleSoundDelay = 0;\r\n            }\r\n            const circleSoundVolume = effectInfo.circleSoundVolume ?? 1;\r\n\r\n            const effectASound = effectInfo.effectASound ?? \"\";\r\n            const effectASoundDelay = Number(effectInfo.effectASoundDelay) ?? 0;\r\n            const effectASoundVolume = effectInfo.effectASoundVolume ?? 1;\r\n\r\n            const portalCloseSound = effectInfo.portalCloseSound ?? \"\";\r\n            let portalCloseSoundDelay = Number(effectInfo.portalCloseSoundDelay) ?? 0;\r\n            if (!typeof (portalCloseSoundDelay) === \"number\") {\r\n                portalCloseSoundDelay = 0;\r\n            }\r\n            const portalCloseSoundVolume = effectInfo.portalCloseSoundVolume ?? 1;\r\n\r\n\r\n            let baseScale = 0.75;\r\n            let adjustedScale = baseScale * summonQty;\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(circleSound)\r\n                .delay(circleSoundDelay)\r\n                .volume(circleSoundVolume)\r\n                .playIf(circleSound != \"\")\r\n                .effect()\r\n                .file(magicSignIntro)\r\n                .offset({ x: 0, y: canvas.grid.size })\r\n                .atLocation(template)\r\n                .belowTokens()\r\n                .scale(0.25)\r\n                .waitUntilFinished(-2000)\r\n                .effect()\r\n                .file(magicSignLoop)\r\n                .offset({ x: 0, y: canvas.grid.size })\r\n                .atLocation(template)\r\n                .belowTokens()\r\n                .scale(0.25)\r\n                .persist()\r\n                .fadeOut(750, { ease: \"easeInQuint\" })\r\n                .name(\"magicSignLoop\")\r\n                .sound()\r\n                .file(effectASound)\r\n                .delay(effectASoundDelay)\r\n                .volume(effectASoundVolume)\r\n                .playIf(effectASound != \"\")\r\n                .effect()\r\n                .file(effectAAnim)\r\n                .offset({ x: 0, y: canvas.grid.size })\r\n                .atLocation(template)\r\n                .waitUntilFinished(-1000)\r\n                .endTime(3300)\r\n                .playbackRate(0.7)\r\n                .scaleOut(0, 500)\r\n                .scale(1.5)\r\n                .zIndex(1)\r\n                .center()\r\n                .belowTokens()\r\n                .sound()\r\n                .file(portalSound)\r\n                .delay(portalSoundDelay)\r\n                .volume(portalSoundVolume)\r\n                .playIf(portalSound != \"\")\r\n                .effect()\r\n                .belowTokens()\r\n                .zIndex(2)\r\n                .atLocation(template)\r\n                .file(portalAnim)\r\n                .fadeIn(500)\r\n                .offset({ x: 0, y: canvas.grid.size })\r\n                .scale(0)\r\n                .animateProperty(\"sprite\", \"scale.x\", { from: 0, to: baseScale, delay: 200, duration: 500, ease: \"easeInOutCubic\" })\r\n                .animateProperty(\"sprite\", \"scale.y\", { from: 0, to: baseScale, delay: 200, duration: 700, ease: \"easeInOutCubic\" })\r\n                .animateProperty(\"sprite\", \"scale.x\", { from: baseScale, to: 0, delay: 2500, duration: 500, ease: \"easeInElastic\" })\r\n                .animateProperty(\"sprite\", \"scale.y\", { from: baseScale, to: 0, delay: 2500, duration: 700, ease: \"easeInElastic\" })\r\n                .wait(3000)\r\n                .sound()\r\n                .file(portalCloseSound)\r\n                .delay(portalCloseSoundDelay)\r\n                .volume(portalCloseSoundVolume)\r\n                .playIf(portalCloseSound != \"\")\r\n                .effect()\r\n                .file(portalCloseAnim)\r\n                .atLocation(template)\r\n                .offset({ x: 0, y: canvas.grid.size })\r\n                .play()\r\n        }\r\n\r\n        async function postEffects(template, token, effectInfo) {\r\n            let magicSignOutro = `jb2a.magic_signs.circle.02.${effectInfo.magicSchool}.outro.${effectInfo.magicSchoolColor}`;\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect()\r\n                .file(magicSignOutro)\r\n                .offset({ x: 0, y: canvas.grid.size })\r\n                .atLocation(template)\r\n                .belowTokens()\r\n                .scale(0.25)\r\n                .thenDo(async () => {\r\n                    await Sequencer.EffectManager.endEffects({ name: \"magicSignLoop\" });\r\n                })\r\n                .wait(1500)\r\n                .effect()\r\n                .atLocation(token)\r\n                .scaleToObject()\r\n                .file(token.data.img)\r\n                .fadeIn(400)\r\n                .offset({ x: 0, y: canvas.grid.size })\r\n                .animateProperty(\"sprite\", \"position.y\", { from: 0, to: canvas.grid.size, duration: 400, ease: \"easeInOutCubic\" })\r\n                .duration(500)\r\n                .fadeOut(50)\r\n                .wait(400)\r\n                .animation()\r\n                .on(token)\r\n                .fadeIn(100, { ease: \"easeInQuint\" })\r\n                .play()\r\n        }\r\n        //console.log(\"MIDI Data: \", midiData);\r\n        const casterActor = midiData.actor;\r\n        const casterToken = canvas.tokens.get(midiData.tokenId);\r\n        let item = midiData.item;\r\n        let summonInfo = item.getFlag(\"advancedspelleffects\", \"effectOptions.summons\");\r\n        let effectInfo = item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        //console.log(\"Summon Info: \", summonInfo);\r\n        //console.log(\"Effect Info: \", effectInfo);\r\n        let summonOptionsData = { buttons: [] };\r\n        for (let [type, info] of Object.entries(summonInfo)) {\r\n            //console.log(`${type},:`, info);\r\n            let buttonData = { label: info.name, value: [game.actors.get(info.actor).name, info.qty] };\r\n            summonOptionsData.buttons.push(buttonData);\r\n        }\r\n        let chosenSummon = await warpgate.buttonDialog(summonOptionsData, 'row');\r\n        const displayCrosshairs = async (crosshairs) => {\r\n            const loadImage = src =>\r\n                new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = () => resolve(img);\r\n                    img.onerror = reject;\r\n                    img.src = src;\r\n                });\r\n            let summonTokenData = (await game.actors.getName(chosenSummon[0]).getTokenData());\r\n            loadImage(summonTokenData.img).then(async (image) => {\r\n                const summonImageScale = (summonTokenData.width * canvas.grid.size) / image.width;\r\n                new Sequence(\"Advanced Spell Effects\")\r\n                    .effect()\r\n                    .file(image.src)\r\n                    .attachTo(crosshairs)\r\n                    .persist()\r\n                    .scale(summonImageScale)\r\n                    .loopProperty(\"sprite\", \"rotation\", { duration: 10000, from: 0, to: 360 })\r\n                    .opacity(0.5)\r\n                    .play()\r\n            });\r\n        };\r\n        let summonEffectCallbacks = {\r\n            pre: async (template, update) => {\r\n                myEffectFunction(template, effectInfo, chosenSummon[1]);\r\n                await warpgate.wait(1750);\r\n            },\r\n            post: async (template, token) => {\r\n                postEffects(template, token, effectInfo);\r\n                await warpgate.wait(500);\r\n            },\r\n            show: displayCrosshairs\r\n        };\r\n        let summonData = await game.actors.getName(chosenSummon[0]).getTokenData();\r\n        let crosshairsConfig = {\r\n            size: summonData.width,\r\n            label: chosenSummon[0],\r\n            tag: `summon-${chosenSummon[0]}-crosshairs`,\r\n            drawIcon: false,\r\n            drawOutline: false,\r\n            interval: 2\r\n        };\r\n\r\n        let updates = {\r\n            token: {\r\n                'alpha': 0,\r\n                'flags': { \"advancedspelleffects\": { \"summoner\": casterActor.id } }\r\n            },\r\n            actor: {},\r\n            embedded: {}\r\n        };\r\n        if (effectInfo.isTashas) {\r\n            console.log(`Scaling ${chosenSummon[0]} with spell level...`);\r\n            let spellLevel = midiData.itemLevel;\r\n            let hpBonus = 0;\r\n            let acBonus = spellLevel;\r\n            let multiAttack = Math.floor(spellLevel / 2);\r\n            let damageBonus = spellLevel;\r\n            //let summonActor = game.actors.getName(chosenSummon[0]);\r\n            let attackBonus = casterActor.data.data.attributes.spelldc - 8;\r\n            let summonActor = game.actors.getName(chosenSummon[0]);\r\n            //console.log(summonActor);\r\n            //let damageItems = summonActor.data.items.filter((item) => { return item.data.data.damage.parts.length > 0 });\r\n            //console.log(damageItems);\r\n            switch (item.name) {\r\n                case game.i18n.localize(\"ASE.SummonAberration\"):\r\n                    hpBonus = 10 * (spellLevel - 4);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonBeast\"):\r\n                    hpBonus = 5 * (spellLevel - 2);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonCelestial\"):\r\n                    if (chosenSummon[0].includes(game.i18n.localize(\"ASE.Defender\"))) {\r\n                        acBonus += 2;\r\n                    }\r\n                    hpBonus = 10 * (spellLevel - 5);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonConstruct\"):\r\n                    hpBonus = 15 * (spellLevel - 3);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonElemental\"):\r\n                    hpBonus = 10 * (spellLevel - 4);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonFey\"):\r\n                    hpBonus = 10 * (spellLevel - 3);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonFiend\"):\r\n                    hpBonus = 15 * (spellLevel - 6);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonShadowspawn\"):\r\n                    hpBonus = 15 * (spellLevel - 3);\r\n                    break;\r\n                case game.i18n.localize(\"ASE.SummonUndead\"):\r\n                    hpBonus = 10 * (spellLevel - 3);\r\n                    break;\r\n            }\r\n            if (hpBonus < 0) {\r\n                hpBonus = 0;\r\n            }\r\n\r\n            updates.actor = {\r\n                'data.attributes.hp': { value: summonActor.data.data.attributes.hp.max + hpBonus, max: summonActor.data.data.attributes.hp.max + hpBonus },\r\n                'data.bonuses.msak': { attack: `- @mod - @prof + ${attackBonus}`, damage: `${damageBonus}` },\r\n                'data.bonuses.mwak': { attack: `- @mod - @prof + ${attackBonus}`, damage: `${damageBonus}` },\r\n                'data.bonuses.rsak': { attack: `- @mod - @prof + ${attackBonus}`, damage: `${damageBonus}` },\r\n                'data.bonuses.rwak': { attack: `- @mod - @prof + ${attackBonus}`, damage: `${damageBonus}` }\r\n            }\r\n            updates.embedded = {\r\n                ActiveEffect: {\r\n                    \"Spell Level Bonus - AC\": {\r\n                        icon: 'icons/magic/defensive/shield-barrier-blue.webp',\r\n                        label: game.i18n.localize(\"ASE.SpellLevelBonusACEffectLabel\"),\r\n                        changes: [{\r\n                            \"key\": \"data.attributes.ac.bonus\",\r\n                            \"mode\": 2,\r\n                            \"value\": acBonus,\r\n                            \"priority\": 0\r\n                        }]\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        const warpgateOptions = { controllingActor: game.actors.get(midiData.actor.id), duplicates: chosenSummon[1], crosshairs: crosshairsConfig };\r\n        await warpgate.spawn(chosenSummon[0], updates, summonEffectCallbacks, warpgateOptions);\r\n    }\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        console.log(\"Detected summon concentration removal...\");\r\n        let summonedTokens = canvas.tokens.placeables.filter((token) => { return token.document.getFlag(\"advancedspelleffects\", \"summoner\") == casterActor.id });\r\n        for (const summonedToken of summonedTokens) {\r\n            await warpgate.dismiss(summonedToken.id);\r\n        }\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        const magicSignsRaw = `jb2a.magic_signs.circle.02`;\r\n        const magicSchoolOptions = utilFunctions.getDBOptions(magicSignsRaw);\r\n\r\n        const magicSchoolColorsRaw = `jb2a.magic_signs.circle.02.${currFlags.advancedspelleffects?.effectOptions?.magicSchool ?? 'abjuration'}.intro`;\r\n        const magicSchoolColorOptions = utilFunctions.getDBOptions(magicSchoolColorsRaw);\r\n\r\n        const effectAColorsRaw = `jb2a.eldritch_blast`;\r\n        const effectAColorOptions = utilFunctions.getDBOptions(effectAColorsRaw);\r\n\r\n        const portalColorsRaw = `jb2a.portals.vertical.vortex`;\r\n        const portalColorOptions = utilFunctions.getDBOptions(portalColorsRaw);\r\n\r\n        const portalImpactColorsRaw = `jb2a.impact.010`;\r\n        const portalImpactColorOptions = utilFunctions.getDBOptions(portalImpactColorsRaw);\r\n\r\n        const summonActorsList = game.folders?.getName(\"ASE-Summons\")?.contents ?? [];\r\n        let summonOptions = [];\r\n        let currentSummonTypes = {};\r\n\r\n        summonActorsList.forEach((actor) => {\r\n            let summonActor = {};\r\n            summonActor.name = actor.name;\r\n            summonActor.id = actor.id;\r\n            summonOptions.push(summonActor);\r\n        });\r\n        currentSummonTypes = currFlags.summons ?? [{ name: \"\", actor: summonOptions[0].id, qty: 1 }];\r\n        \r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MagicSchoolLabel\"),\r\n            type: 'dropdown',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchool',\r\n            options: magicSchoolOptions,\r\n            flagName: 'magicSchool',\r\n            flagValue: currFlags.magicSchool ?? 'abjuration',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MagicSchoolColorLabel\"),\r\n            type: 'dropdown',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolColor',\r\n            flagName: 'magicSchoolColor',\r\n            options: magicSchoolColorOptions,\r\n            flagValue: currFlags.magicSchoolColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MagicCircleSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.circleSound',\r\n            flagName: 'circleSound',\r\n            flagValue: currFlags.circleSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MagicCircleSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.circleSoundDelay',\r\n            flagName: 'circleSoundDelay',\r\n            flagValue: currFlags.circleSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MagicCircleVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.circleVolume',\r\n            flagName: 'circleVolume',\r\n            flagValue: currFlags.circleVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectAColorLabel\"),\r\n            type: 'dropdown',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectAColor',\r\n            flagName: 'effectAColor',\r\n            options: effectAColorOptions,\r\n            flagValue: currFlags.effectAColor ?? 'dark_green',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectASoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectASound',\r\n            flagName: 'effectASound',\r\n            flagValue: currFlags.effectASound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectASoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectASoundDelay',\r\n            flagName: 'effectASoundDelay',\r\n            flagValue: currFlags.effectASoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectASoundVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectAVolume',\r\n            flagName: 'effectAVolume',\r\n            flagValue: currFlags.effectAVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalColorLabel\"),\r\n            type: 'dropdown',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalColor',\r\n            flagName: 'portalColor',\r\n            options: portalColorOptions,\r\n            flagValue: currFlags.portalColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalSound',\r\n            flagName: 'portalSound',\r\n            flagValue: currFlags.portalSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalSoundDelay',\r\n            flagName: 'portalSoundDelay',\r\n            flagValue: currFlags.portalSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalVolume',\r\n            flagName: 'portalVolume',\r\n            flagValue: currFlags.portalVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalCloseColorLabel\"),\r\n            type: 'dropdown',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalImpactColor',\r\n            flagName: 'portalImpactColor',\r\n            options: portalImpactColorOptions,\r\n            flagValue: currFlags.portalImpactColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalCloseSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalCloseSound',\r\n            flagName: 'portalCloseSound',\r\n            flagValue: currFlags.portalCloseSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalCloseSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalCloseSoundDelay',\r\n            flagName: 'portalCloseSoundDelay',\r\n            flagValue: currFlags.portalCloseSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PortalCloseVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.portalCloseVolume',\r\n            flagName: 'portalCloseVolume',\r\n            flagValue: currFlags.portalCloseVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.UseTashasScalingLabel\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.isTashas',\r\n            flagName: 'isTashas',\r\n            flagValue: currFlags.isTashas ?? false,\r\n        });\r\n\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            summons: currentSummonTypes,\r\n            summonOptions: summonOptions,\r\n            allowInitialMidiCall: true,\r\n        }\r\n\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nexport class witchBolt {\r\n    static registerHooks() {\r\n        Hooks.on(\"updateToken\", witchBolt._updateToken);\r\n        Hooks.on(\"updateCombat\", witchBolt._updateCombat);\r\n    }\r\n\r\n    static async cast(midiData) {\r\n        let casterActor = midiData.actor;\r\n        let caster = canvas.tokens.get(midiData.tokenId);\r\n        let target = Array.from(midiData.targets)[0];\r\n        let effectOptions = midiData.item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n        let boltFile = `jb2a.chain_lightning.primary.${effectOptions.initialBoltColor}`;\r\n        let animFile = `jb2a.witch_bolt.${effectOptions.streamColor}`;\r\n        const initialBoltSound = effectOptions.initialBoltSound ?? \"\";\r\n        const initialBoltSoundDelay = Number(effectOptions.initialBoltSoundDelay) ?? 0;\r\n        const initialBoltSoundVolume = effectOptions.initialBoltSoundVolume ?? 1;\r\n        const streamSound = effectOptions.streamCasterSound ?? \"\";\r\n        const streamSoundDelay = Number(effectOptions.streamCasterSoundDelay) ?? 0;\r\n        const streamVolume = effectOptions.streamCasterVolume ?? 1;\r\n        const streamEasing = effectOptions.streamCasterEasing ?? true;\r\n        const streamRadius = effectOptions.streamCasterRadius ?? 20;\r\n        const soundOptions = {\r\n            easing: streamEasing,\r\n            sound: streamSound,\r\n            radius: streamRadius,\r\n            volume: streamVolume,\r\n            delay: streamSoundDelay\r\n        };\r\n\r\n        const itemData = midiData.item.data.data;\r\n        console.log(itemData);\r\n\r\n        let missed = false;\r\n        if (game.modules.get(\"midi-qol\")?.active) {\r\n            missed = Array.from(midiData.hitTargets).length == 0;\r\n        }\r\n\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(initialBoltSound)\r\n            .delay(initialBoltSoundDelay)\r\n            .volume(initialBoltSoundVolume)\r\n            .playIf(initialBoltSound != \"\")\r\n            .effect()\r\n            .file(boltFile)\r\n            .atLocation(caster)\r\n            .stretchTo(target)\r\n            .missed(missed)\r\n            .waitUntilFinished(-900)\r\n            .effect()\r\n            .file(animFile)\r\n            .atLocation(caster)\r\n            .stretchTo(target)\r\n            .persist()\r\n            .playIf(!missed)\r\n            .name(`${caster.id}-witchBolt`)\r\n            .play()\r\n        if (!missed) {\r\n            await caster.document.setFlag(\"advancedspelleffects\", \"witchBolt.casterId\", caster.id);\r\n            await caster.document.setFlag(\"advancedspelleffects\", \"witchBolt.targetId\", target.id);\r\n            const updates = {\r\n                embedded: {\r\n                    Item: {}\r\n                }\r\n            };\r\n            const activationItemName = game.i18n.localize('ASE.ActivateWitchBolt');\r\n            updates.embedded.Item[activationItemName] = {\r\n                \"type\": \"spell\",\r\n                \"img\": midiData.item.img,\r\n                \"data\": {\r\n                    \"ability\": \"\",\r\n                    \"actionType\": \"other\",\r\n                    \"activation\": { \"type\": \"action\", \"cost\": 1, \"condition\": \"\" },\r\n                    \"damage\": itemData.damage,\r\n                    \"level\": midiData.itemLevel,\r\n                    \"preparation\": { \"mode\": 'atwill', \"prepared\": true },\r\n                    \"range\": { \"value\": null, \"long\": null, \"units\": \"\" },\r\n                    \"school\": \"con\",\r\n                    \"description\": {\r\n                        \"value\": game.i18n.localize(\"ASE.ActivateWitchBoltDescription\"),\r\n                    }\r\n                },\r\n                \"flags\": {\r\n                    \"advancedspelleffects\": {\r\n                        \"enableASE\": true,\r\n                        \"spellEffect\": game.i18n.localize('ASE.ActivateWitchBolt'),\r\n                        'effectOptions': effectOptions\r\n                    }\r\n                }\r\n            }\r\n\r\n            //console.log(`${caster.actor.id}-witch-bolt`);\r\n            ui.notifications.info(game.i18n.format(\"ASE.AddedAtWill\", { spellName: game.i18n.localize(\"ASE.ActivateWitchBolt\") }));\r\n            await warpgate.mutate(caster.document, updates, {}, { name: `${caster.actor.id}-witch-bolt` });\r\n            if (effectOptions.streamCasterSound && effectOptions.streamCasterSound != \"\") {\r\n                await placeSound(utilFunctions.getCenter(caster.document.data), soundOptions, caster.document.id);\r\n            }\r\n        }\r\n\r\n        async function placeSound(location, options, sourceId) {\r\n            const soundData = [{\r\n                easing: options.easing,\r\n                path: options.sound,\r\n                radius: options.radius,\r\n                type: \"1\",\r\n                volume: options.volume,\r\n                x: location.x,\r\n                y: location.y,\r\n                flags: {\r\n                    tagger: {\r\n                        tags: [`ase-source-${sourceId}`]\r\n                    },\r\n                    advancedspelleffects: {\r\n                        sourceId: sourceId\r\n                    }\r\n                }\r\n            }];\r\n            return (await aseSocket.executeAsGM(\"placeSounds\", soundData, options.delay));\r\n        }\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        console.log(`${casterToken.id}-witchBolt`);\r\n        await Sequencer.EffectManager.endEffects({ name: `${casterToken.id}-witchBolt` });\r\n        await casterToken.document.unsetFlag(\"advancedspelleffects\", \"witchBolt\");\r\n        //console.log(`${casterActor.id}-witch-bolt`);\r\n        ui.notifications.info(game.i18n.format(\"ASE.RemovedAtWill\", { spellName: game.i18n.localize(\"ASE.ActivateWitchBolt\") }));\r\n        await warpgate.revert(casterToken.document, `${casterActor.id}-witch-bolt`);\r\n        const attachedSounds = (await Tagger.getByTag([`ase-source-${casterToken.id}`]));\r\n        if (!attachedSounds.length > 0) {\r\n            return;\r\n        }\r\n        await canvas.scene.deleteEmbeddedDocuments(\"AmbientSound\", attachedSounds.map(s => s.id));\r\n        return;\r\n    }\r\n\r\n    static async activateBolt(midiData) {\r\n        let casterActor = midiData.actor;\r\n        let caster = canvas.tokens.get(midiData.tokenId);\r\n        let target = canvas.tokens.get(caster.document.getFlag(\"advancedspelleffects\", \"witchBolt.targetId\"));\r\n        let effectOptions = midiData.item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n        let boltFile = `jb2a.chain_lightning.primary.${effectOptions.initialBoltColor}`;\r\n        const initialBoltSound = effectOptions.initialBoltSound ?? \"\";\r\n        const initialBoltSoundDelay = Number(effectOptions.initialBoltSoundDelay) ?? 0;\r\n        const initialBoltSoundVolume = effectOptions.initialBoltSoundVolume ?? 1;\r\n        let itemData = midiData.item.data;\r\n\r\n        const damageFormula = itemData.data.damage.parts[0];\r\n        const damageType = itemData.data.damage.parts[1];\r\n        console.log('damageFormula: ', damageFormula);\r\n        let damageRoll = await new Roll(`${damageFormula}`).evaluate({ async: true });\r\n\r\n        itemData.data.components.concentration = false;\r\n\r\n        if (game.modules.get(\"midi-qol\")?.active) {\r\n            //console.log(damageRoll);\r\n            new MidiQOL.DamageOnlyWorkflow(casterActor, caster.document, damageRoll.total, damageType, target ? [target] : [], damageRoll, { flavor: game.i18n.localize(\"ASE.WitchBoltDamageFlavor\"), itemCardId: \"new\", itemData: itemData });\r\n        }\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(initialBoltSound)\r\n            .delay(initialBoltSoundDelay)\r\n            .volume(initialBoltSoundVolume)\r\n            .playIf(initialBoltSound != \"\")\r\n            .effect()\r\n            .file(boltFile)\r\n            .atLocation(caster)\r\n            .stretchTo(target)\r\n            .play()\r\n    }\r\n\r\n    static async _updateToken(tokenDocument, updateData) {\r\n        //console.log(\"Registering Detect Magic Hook\");\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(\"Is first GM: \", isGM);\r\n        if (!isGM) return;\r\n        if ((!updateData.x && !updateData.y)) return;\r\n        let casterActor = tokenDocument.actor;\r\n        let animFile = '';\r\n        let witchBoltItem;\r\n        let effectOptions;\r\n        let witchBoltConcentration;\r\n        let itemId;\r\n        let origin;\r\n        let witchBoltCasters = canvas.tokens.placeables.filter((token) => {\r\n            //console.log('Scanning Token: ',token.name);\r\n            return (token.actor?.effects.filter((effect) => {\r\n                //console.log('Active Effect: ', effect);\r\n                let origin = effect.data.origin?.split(\".\");\r\n                if (!origin || origin?.length < 4) return false;\r\n                let itemId = origin[5] ?? origin[3];\r\n                //console.log(\"scanning item id: \", itemId);\r\n\r\n                let item = token.actor.items.get(itemId);\r\n                if (!item) return false;\r\n                const spellEffect = item.getFlag(\"advancedspelleffects\", 'spellEffect') ?? undefined;\r\n                if (!spellEffect) return false;\r\n                //console.log(\"Effect Source Detecetd: \", effectSource);\r\n                return spellEffect == game.i18n.localize('ASE.WitchBolt');\r\n            }).length > 0)\r\n        });\r\n        //console.log('Witch Bolt Casters: ', witchBoltCasters);\r\n        if (witchBoltCasters.length == 0) return;\r\n        //console.log(witchBoltCasters);\r\n        let isWitchBoltTarget = false;\r\n        let castersOnTarget = [];\r\n        witchBoltCasters.forEach(caster => {\r\n            if (caster.document.getFlag(\"advancedspelleffects\", \"witchBolt.targetId\") == tokenDocument.id) {\r\n                castersOnTarget.push(caster);\r\n                isWitchBoltTarget = true;\r\n            }\r\n        });\r\n        //console.log(\"Is target of any witch bolts?\", isWitchBoltTarget);\r\n        if (isWitchBoltTarget) {\r\n            let newPos = { x: 0, y: 0 };\r\n            newPos.x = (updateData.x) ? updateData.x : tokenDocument.data.x;\r\n            newPos.y = (updateData.y) ? updateData.y : tokenDocument.data.y;\r\n            newPos = utilFunctions.getCenter(newPos);\r\n            //console.log(newPos);\r\n            //console.log(castersOnTarget);\r\n            for (let i = 0; i < castersOnTarget.length; i++) {\r\n                let casterOnTarget = castersOnTarget[i];\r\n                //console.log(casterOnTarget);\r\n                let distanceToTarget = utilFunctions.measureDistance(newPos, casterOnTarget);\r\n                //console.log(distanceToTarget);\r\n                await Sequencer.EffectManager.endEffects({ name: `${casterOnTarget.id}-witchBolt` });\r\n                witchBoltConcentration = casterOnTarget.actor.effects.filter((effect) => {\r\n                    let origin = effect.data.origin?.split(\".\");\r\n                    if (!origin || origin?.length < 4) return false;\r\n                    let itemId = origin[5] ?? origin[3];\r\n                    let item = casterOnTarget.actor.items.get(itemId);\r\n                    if (!item) return false;\r\n                    const spellEffect = item.getFlag(\"advancedspelleffects\", 'spellEffect') ?? undefined;\r\n                    if (!spellEffect) return false;\r\n                    //console.log(\"Effect Source Detecetd: \", effectSource);\r\n                    return spellEffect == game.i18n.localize('ASE.WitchBolt');\r\n                })[0];\r\n                if (distanceToTarget > 30) {\r\n                    //console.log(witchBoltConcentration);\r\n                    await witchBoltConcentration.delete();\r\n                }\r\n                else {\r\n                    origin = witchBoltConcentration.data.origin?.split(\".\");\r\n                    if (!origin || origin?.length < 4) return false;\r\n                    itemId = origin[5] ?? origin[3];\r\n                    witchBoltItem = casterOnTarget.actor.items.get(itemId);\r\n                    effectOptions = witchBoltItem.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n                    animFile = `jb2a.witch_bolt.${effectOptions.streamColor}`;\r\n                    new Sequence(\"Advanced Spell Effects\")\r\n                        .effect()\r\n                        .file(animFile)\r\n                        .atLocation(casterOnTarget)\r\n                        .stretchTo(newPos)\r\n                        .persist()\r\n                        .name(`${casterOnTarget.id}-witchBolt`)\r\n                        .play()\r\n                }\r\n\r\n            };\r\n        }\r\n        witchBoltConcentration = casterActor.effects.filter((effect) => {\r\n            //console.log(effect.data);\r\n            let origin = effect.data.origin?.split(\".\");\r\n            if (!origin || origin?.length < 4) return false;\r\n            let itemId = origin[5] ?? origin[3];\r\n            let item = casterActor.items.get(itemId);\r\n            if (!item) return false;\r\n            const spellEffect = item.getFlag(\"advancedspelleffects\", 'spellEffect') ?? undefined;\r\n            if (!spellEffect) return false;\r\n            //console.log(\"Effect Source Detecetd: \", effectSource);\r\n            return spellEffect == game.i18n.localize('ASE.WitchBolt');\r\n        })[0];\r\n        //console.log(witchBoltConcentration);\r\n        //console.log(casterActor);\r\n        if (witchBoltConcentration) {\r\n            let concOrigin = witchBoltConcentration.data.origin.split(\".\");\r\n            if (!concOrigin || concOrigin?.length < 4) return false;\r\n            let itemID = concOrigin[5] ?? concOrigin[3];\r\n            witchBoltItem = casterActor.items.get(itemID);\r\n            effectOptions = witchBoltItem.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n            animFile = `jb2a.witch_bolt.${effectOptions.streamColor}`;\r\n            let effectInfo = tokenDocument.getFlag(\"advancedspelleffects\", \"witchBolt\");\r\n            if (effectInfo) {\r\n                //console.log(effectInfo.casterId, effectInfo.targetId);\r\n                let target = canvas.tokens.get(effectInfo.targetId);\r\n                let newPos = { x: 0, y: 0 };\r\n                newPos.x = (updateData.x) ? updateData.x : tokenDocument.data.x;\r\n                newPos.y = (updateData.y) ? updateData.y : tokenDocument.data.y;\r\n                newPos = utilFunctions.getCenter(newPos);\r\n                //console.log(newPos);\r\n                await Sequencer.EffectManager.endEffects({ name: `${tokenDocument.id}-witchBolt` });\r\n                let casterToTargetDist = utilFunctions.measureDistance(newPos, target);\r\n                if (casterToTargetDist > 30) {\r\n                    //console.log(witchBoltConcentration);\r\n                    await witchBoltConcentration.delete();\r\n                    return;\r\n                }\r\n                new Sequence(\"Advanced Spell Effects\")\r\n                    .effect()\r\n                    .file(animFile)\r\n                    .atLocation(newPos)\r\n                    .stretchTo(target)\r\n                    .persist()\r\n                    .name(`${tokenDocument.id}-witchBolt`)\r\n                    .play()\r\n                if (effectOptions.streamCasterSound && effectOptions.streamCasterSound != \"\") {\r\n                    await aseSocket.executeAsGM(\"moveSound\", tokenDocument.id, newPos);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static async _updateCombat(combat) {\r\n\r\n        let currentCombatantId = combat.current.tokenId;\r\n        let caster = canvas.tokens.get(currentCombatantId);\r\n        if (!caster) return;\r\n        let casterActor = caster.actor;\r\n        //console.log(casterActor, casterActor.isOwner);\r\n        if (!casterActor.isOwner || (game.user.isGM && caster.actor.hasPlayerOwner)) return;\r\n        let witchBoltConcentration = casterActor.effects.filter((effect) => {\r\n            let origin = effect.data.origin?.split(\".\");\r\n            if (!origin || origin?.length < 4) return false;\r\n            let itemId = origin[5] ?? origin[3];\r\n            let effectSource = casterActor.items.get(itemId)?.name;\r\n            return effectSource == \"Witch Bolt\"\r\n        })[0];\r\n        //console.log(witchBoltConcentration);\r\n        if (witchBoltConcentration) {\r\n            let confirmData = {\r\n                buttons: [{ label: game.i18n.localize(\"ASE.Yes\"), value: true }, { label: game.i18n.localize(\"ASE.No\"), value: false }],\r\n                title: game.i18n.localize(\"ASE.WitchBoltPromptTitle\"),\r\n            };\r\n            let target = canvas.tokens.get(caster.document.getFlag(\"advancedspelleffects\", \"witchBolt.targetId\"));\r\n            let concOrigin = witchBoltConcentration.data.origin.split(\".\");\r\n            if (!concOrigin || concOrigin?.length < 4) return false;\r\n            let itemID = concOrigin[5] ?? concOrigin[3];\r\n            let witchBoltItem = casterActor.items.get(itemID);\r\n\r\n            //console.log(witchBoltItem);\r\n            let confirm = await warpgate.buttonDialog(confirmData, 'row');\r\n            if (confirm) {\r\n                await witchBolt.activateBolt({ actor: casterActor, item: witchBoltItem, tokenId: caster.id });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n\r\n        const initialBoltAnim = 'jb2a.chain_lightning.primary';\r\n        const initialBoltColorOptions = utilFunctions.getDBOptions(initialBoltAnim);\r\n\r\n        const streamAnim = 'jb2a.witch_bolt';\r\n        const streamColorOptions = utilFunctions.getDBOptions(streamAnim);\r\n\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n        let spellOptions = [];\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.InitialBoltColorLabel\"),\r\n            type: 'dropdown',\r\n            options: initialBoltColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.initialBoltColor',\r\n            flagName: 'initialBoltColor',\r\n            flagValue: currFlags.initialBoltColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.InitialBoltSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.initialBoltSound',\r\n            flagName: 'initialBoltSound',\r\n            flagValue: currFlags.initialBoltSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.InitialBoltSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.initialBoltSoundDelay',\r\n            flagName: 'initialBoltSoundDelay',\r\n            flagValue: currFlags.initialBoltSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.InitialBoltVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.initialBoltVolume',\r\n            flagName: 'initialBoltVolume',\r\n            flagValue: currFlags.initialBoltVolume ?? 1,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ContinuousStreamColorLabel\"),\r\n            type: 'dropdown',\r\n            options: streamColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.streamColor',\r\n            flagName: 'streamColor',\r\n            flagValue: currFlags.streamColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ContinuousStreamSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.streamCasterSound',\r\n            flagName: 'streamCasterSound',\r\n            flagValue: currFlags.streamCasterSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ContinuousStreamSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.streamCasterSoundDelay',\r\n            flagName: 'streamCasterSoundDelay',\r\n            flagValue: currFlags.streamCasterSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ContinuousStreamVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.streamCasterVolume',\r\n            flagName: 'streamCasterVolume',\r\n            flagValue: currFlags.streamCasterVolume ?? 1,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ContinuousStreamSoundEasingLabel\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.streamCasterEasing',\r\n            flagName: 'streamCasterEasing',\r\n            flagValue: currFlags.streamCasterEasing ?? true,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ContinuousStreamSoundRadiusLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.streamCasterRadius',\r\n            flagName: 'streamCasterRadius',\r\n            flagValue: currFlags.streamCasterRadius ?? 20,\r\n        });\r\n        return {\r\n            animOptions: animOptions,\r\n            spellOptions: spellOptions,\r\n            soundOptions: soundOptions,\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport function MissileMarkerSequence(effectOptions, target, index, type) {\r\n    let markerAnim = `${effectOptions.targetMarkerType}.${effectOptions.targetMarkerColor}`;\r\n    const markerSound = effectOptions.markerSound ?? \"\";\r\n    const markerSoundDelay = Number(effectOptions.markerSoundDelay) ?? 0;\r\n    const markerSoundVolume = Number(effectOptions.markerVolume) ?? 1;\r\n    const markerAnimHue = effectOptions.targetMarkerHue ?? 0;\r\n    const markerAnimSaturation = effectOptions.targetMarkerSaturation ?? 0;\r\n    let baseScale = effectOptions.baseScale;\r\n    let baseOffset = canvas.grid.size / 2;\r\n    let offsetMod = (-(1 / 4) * index) + 1;\r\n    let offset = { x: baseOffset * offsetMod, y: baseOffset };\r\n    let markerSeq = new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(markerSound)\r\n            .delay(markerSoundDelay)\r\n            .volume(markerSoundVolume)\r\n            .playIf(markerSound != \"\")\r\n            .effect()\r\n            .attachTo(target, { followRotation: false })\r\n            .filter(\"ColorMatrix\", { hue: markerAnimHue, saturate: markerAnimSaturation })\r\n            .locally()\r\n            .file(markerAnim)\r\n            .scale(0.01)\r\n            .name(`missile-target-${target.id}-${index}`)\r\n            .offset(offset)\r\n            .persist()\r\n            .animateProperty(\"sprite\", \"scale.x\", { from: 0.01, to: baseScale, delay: 200, duration: 700, ease: \"easeOutBounce\" })\r\n            .animateProperty(\"sprite\", \"scale.y\", { from: 0.01, to: baseScale, duration: 900, ease: \"easeOutBounce\" })\r\n    if (type == 'advantage') {\r\n        markerSeq.loopProperty(\"sprite\", \"position.y\", { from: 0, to: -10, duration: 1000, ease: \"easeInOutSine\", pingPong: true });\r\n\r\n    }\r\n    else if (type == 'disadvantage') {\r\n        markerSeq.loopProperty(\"sprite\", \"position.y\", { from: 0, to: 10, duration: 1000, ease: \"easeInOutSine\", pingPong: true });\r\n    }\r\n    return markerSeq;\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport function MissileSequence(data) {\r\n    //caster, target, effectOptions, hit, type\r\n    const caster = data.caster;\r\n    const target = data.targets[0] ?? false;\r\n    const effectOptions = data.effectOptions ?? {};\r\n    const hit = data.hit ?? false;\r\n    let intro = data.intro ?? false;\r\n    const missileIntroSound = effectOptions.missileIntroSound ?? \"\";\r\n    const missleIntroPlayback = effectOptions.missileIntroSoundPlayback ?? \"indiv\";\r\n    let missileIntroSoundDelay = Number(effectOptions.missileIntroSoundDelay) ?? 0;\r\n    let missileIntroVolume = Number(effectOptions.missileIntroVolume) ?? 1;\r\n\r\n    const impactDelay = Number(effectOptions.impactDelay) ?? -1000;\r\n    const missileImpactSound = effectOptions.missileImpactSound ?? \"\";\r\n    const missleImpactPlayback = effectOptions.missileImpactSoundPlayback ?? \"indiv\";\r\n    let missileImpactSoundDelay = Number(effectOptions.missileImpactSoundDelay) ?? 0;\r\n    let missileImpactVolume = Number(effectOptions.missileImpactVolume) ?? 1;\r\n\r\n    let missileAnim = `${effectOptions.missileAnim}.${effectOptions.missileColor}`;\r\n\r\n    let missileSequence;\r\n    if(intro){\r\n        missileSequence = new Sequence(\"Advanced Spell Effects\")\r\n                            .sound()\r\n                            .file(missileIntroSound)\r\n                            .delay(missileIntroSoundDelay)\r\n                            .volume(missileIntroVolume)\r\n                            .playIf(missileIntroSound != \"\" && missleIntroPlayback == \"group\")\r\n    } else {\r\n        missileSequence = new Sequence(\"Advanced Spell Effects\")\r\n                            .sound()\r\n                            .file(missileIntroSound)\r\n                            .delay(missileIntroSoundDelay)\r\n                            .volume(missileIntroVolume)\r\n                            .playIf(missileIntroSound != \"\" && missleIntroPlayback == \"indiv\")\r\n                            .effect()\r\n                            .file(missileAnim)\r\n                            .atLocation(caster)\r\n                            .randomizeMirrorY()\r\n                            .missed(!hit)\r\n                            .stretchTo(target)\r\n                            .randomOffset(0.65)\r\n                            //.playbackRate(utilFunctions.getRandomNumber(0.7, 1.3))\r\n                            .waitUntilFinished(impactDelay)\r\n                            .sound()\r\n                            .file(missileImpactSound)\r\n                            .delay(missileImpactSoundDelay)\r\n                            .volume(missileImpactVolume)\r\n                            .playIf(missileImpactSound != \"\")\r\n    }\r\n    return missileSequence;\r\n    \r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nimport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n\r\nexport async function MissileChatBuilder(data) {\r\n    let content = `<table id=\"ASEmissileDialogChatTable\"><tr><th>${localize(\"ASE.Target\")}</th><th>Hit / Miss</th><th>${localize(\"ASE.AttackRoll\")}</th><th>${localize(\"ASE.DamageRoll\")}</th>`\r\n    let rolls = data.rolls;\r\n    console.log(\"ASE: Missile Chat Builder: Data\", data);\r\n    console.log(\"ASE: Missile Chat Builder: Rolls\", rolls);\r\n    //build content table using rolls data\r\n    for (let i = 0; i < rolls.length; i++) {\r\n        let currAttackRoll = rolls[i].attackRoll;\r\n        let currDamageRoll = rolls[i].damageRoll ?? {};\r\n        let currTarget = rolls[i].target;\r\n        let currTargetName = currTarget.name;\r\n        let hit = !currAttackRoll ? true : rolls[i].hit;\r\n        let currAttackBreakDown = '';\r\n        let currDamageBreakdown = '';\r\n        let damageTotalText = '';\r\n        if(currAttackRoll){\r\n            if(currAttackRoll.hasAdvantage || currAttackRoll.hasDisadvantage) {\r\n                let advantageText = '';\r\n                currAttackRoll.dice[0].results.forEach(result => {\r\n                    //add result.result to advantageText with comma \r\n                    advantageText += result.result + ', ';\r\n                });\r\n                //remove last comma\r\n                advantageText = advantageText.slice(0, -2);\r\n                currAttackBreakDown = `[${currAttackRoll.hasAdvantage ? 'Advantage' : 'Disadvantage'} : ${advantageText}] - [${currAttackRoll.result}]`;\r\n            } else {\r\n                currAttackBreakDown = `[${currAttackRoll.result}]`;\r\n            }\r\n    \r\n            if (currDamageRoll.isCritical) {\r\n                currAttackRoll._total = `Critical!`;\r\n            }\r\n        } else {\r\n            currAttackBreakDown = \"NO ROLL\";\r\n            currAttackRoll = {_total: \" - \"};\r\n        }\r\n        \r\n        if(hit){\r\n            currDamageBreakdown = `${currDamageRoll.formula} : ${currDamageRoll.result}`;\r\n            damageTotalText = currDamageRoll.total;\r\n        } else {\r\n            currDamageBreakdown = `NO ROLL`;\r\n            damageTotalText = ` - `;\r\n        }\r\n        content += `<tr><td><figure style=\"overflow: auto;\"><img style=\"float: left;\" alt=\"Token\" src=\"${currTarget.data.img}\" height=\"40\" style=\"border:0px\"><figcaption style=\"white-space: nowrap;\">${currTargetName}</figcaption></figure></td><td>${hit ? 'Hit' : 'Miss'}</td><td title = '${currAttackBreakDown}'>${currAttackRoll._total}</td><td title = '${currDamageBreakdown}'>${damageTotalText}</td></tr>`;\r\n    }\r\n    \r\n\r\n    return content;\r\n}","<svelte:options accessors={true} />\r\n\r\n\r\n<script> \r\n    import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n    import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n    import { getContext } from \"svelte\";\r\n    import { setContext } from \"svelte\";\r\n    import { writable } from 'svelte/store';\r\n    import { onDestroy } from 'svelte';\r\n    import { aseSocket } from \"../aseSockets.js\";\r\n\r\n    import {MissileMarkerSequence} from \"../sequences/MissileMarkerSequence.js\";\r\n    import { MissileSequence } from \"../sequences/MissileSequence.js\";\r\n    import { MissileChatBuilder } from \"../chat/MissileChatBuilder.js\";\r\n    export let elementRoot;\r\n    export let data;\r\n    const { application } = getContext(\"external\");\r\n    let form = void 0;\r\n\r\n    console.log(\"Missile Dialog App Shell: ------ Entering App Shell -------\");\r\n    //console.log(\"Missile Dialog App Shell: Data: \", data);\r\n    document.addEventListener(\"mouseup\", handleClick, false);\r\n\r\n    let missilesRemaining = data.numMissiles;\r\n    let targets = [];\r\n    let attacks = [];\r\n    game.user.updateTokenTargets([]);\r\n\r\n    onDestroy(async () => {\r\n\t\tconsole.log('the missile dialog is being destroyed...', application);\r\n        document.removeEventListener(\"mouseup\", handleClick, false);\r\n        Sequencer.EffectManager.endEffects({name: `missile-target-*`});\r\n        await aseSocket.executeAsGM(\"updateFlag\", game.user.id, \"missileDialogPos\", { left: application.position.left, top: application.position.top });\r\n\t});\r\n\r\n    function handleClick(event){\r\n        //console.log(\"Missile Dialog App Shell: handleClick: event: \", event);\r\n        let attackType = event.altKey ? 'advantage' : (event.ctrlKey ? 'disadvantage' : '');\r\n        let token = canvas.tokens.placeables.filter(token => {\r\n            const mouse = canvas.app.renderer.plugins.interaction.mouse;\r\n            const mouseLocal = mouse.getLocalPosition(token);\r\n            //console.log(\"Missile Dialog App Shell: handleClick: mouseLocal: \", mouseLocal);\r\n            return mouseLocal.x >= 0 && mouseLocal.x <= token.hitArea.width\r\n                && mouseLocal.y >= 0 && mouseLocal.y <= token.hitArea.height;\r\n        })[0];\r\n        if(token){\r\n            let targetIndex = targets.findIndex(target => target.token === token);\r\n            if(event.button == 0){\r\n                addMissile(token, targetIndex, attackType);\r\n            } else if (event.button == 2) {\r\n                removeMissile(token, targetIndex);\r\n            }\r\n        }\r\n    }\r\n    async function addMissile(token, targetIndex, type = ''){\r\n        if (missilesRemaining <= 0) {\r\n            ui.notifications.info(\"Missile Limit Reached!\");\r\n            return;\r\n        }\r\n        missilesRemaining--;\r\n        attacks.push({token: token, type: type});\r\n        attacks = attacks;\r\n        //find number of attacks for this token\r\n        let markerIndex = attacks.filter(attack => attack.token === token).length - 1;\r\n        let markerSequence = MissileMarkerSequence(data.effectOptions, token, markerIndex, type);\r\n        //console.log(\"Missile Dialog App Shell: addMissile: markerSequence: \", markerSequence);\r\n        markerSequence.play();\r\n        if(targetIndex == -1){\r\n            targets.push({token: token, missilesAssigned: 1});\r\n            targets = targets;\r\n        } else {\r\n            targets[targetIndex].missilesAssigned++;\r\n            targets = targets;\r\n        }\r\n    }\r\n    function removeMissile(token, targetIndex){\r\n        if(targetIndex > -1) {\r\n            missilesRemaining++;\r\n            let attackIndex = attacks.slice().reverse().findIndex(attack => attack.token === token);\r\n            let markerIndex = attacks.filter(attack => attack.token === token).length - 1;\r\n            Sequencer.EffectManager.endEffects({name: `missile-target-${token.id}-${markerIndex}`, object: token});\r\n            attacks.splice((attacks.length-1)-attackIndex, 1);\r\n            attacks = attacks;\r\n            targets[targetIndex].missilesAssigned--;\r\n            if(targets[targetIndex].missilesAssigned <= 0){\r\n                targets.splice(targetIndex, 1);\r\n            }\r\n            targets = targets;\r\n        }\r\n    }\r\n    function launchMissiles(){\r\n        //build array of targetUuids from attacks[i].token.document.uuid\r\n        if(attacks.length > 0){\r\n            let targetUuids = [];\r\n            attacks.forEach(attack => {\r\n                    targetUuids.push(attack.token.document.uuid);\r\n                }\r\n            );\r\n            const  dialogData = {\r\n                targets: targetUuids,\r\n                attacks: attacks,\r\n                casterId: data.casterId,\r\n                itemCardId: data.itemCardId,\r\n                iterate: 'targets',\r\n                sequenceBuilder: MissileSequence,\r\n                sequences: [MissileSequence({intro: true, caster: data.casterId, effectOptions: data.effectOptions, targets: []})],\r\n                effectOptions: data.effectOptions,\r\n                chatBuilder: MissileChatBuilder,\r\n                rolls: []\r\n            };\r\n            const itemUUID = data.item.uuid;\r\n            game.ASESpellStateManager.addSpell(itemUUID, dialogData);\r\n        }\r\n        application.close();\r\n    }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n    <form\r\n        bind:this={form}\r\n        on:submit|preventDefault\r\n        autocomplete=\"off\"\r\n        id=\"missile-dialog-form\"\r\n        class=\"overview\">\r\n    </form>\r\n    <section class=\"content\">\r\n        <p>{localize(\"ASE.MissileDialogInstructionsA\")} {data.effectOptions.missileType}</p>\r\n        <p>{localize(\"ASE.MissileDialogInstructionsB\")}</p>\r\n        <p>{localize(\"ASE.MissileDialogInstructionsC\")}</p>\r\n        <p>{localize(\"ASE.MissileDialogInstructionsD\")} {data.effectOptions.missileType}</p>\r\n        <p>{localize(\"ASE.MissileDialogMissileCountLabel\")} <b>{missilesRemaining}</b> {data.effectOptions.missileType}{missilesRemaining != 1 ? 's' : ''}\r\n        </p>\r\n        <table id=\"targetsTable\" width=\"100%\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>{localize(\"ASE.Target\")}</th>\r\n                    <th>{data.effectOptions.missileType}(s)</th>\r\n                </tr>\r\n                {#each targets as target,i (target.token)}\r\n                <tr on:mouseenter=\"{target.token._onHoverIn()}\" on:mouseleave=\"{target.token._onHoverOut()}\">\r\n                    <td>\r\n                        <label for=\"{target.token.document.id}-missiles\"><img alt=\"Token\" src=\"{target.token.document.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\"> - {target.token.document.data.name}</label>\r\n                    </td>\r\n                    <td>\r\n                        <input style='width: 2em;' type=\"number\" id=\"{target.token.document.id}-missiles\" readonly value=\"{target.missilesAssigned}\">\r\n                    </td>\r\n                    <td>\r\n                        <button on:click=\"{addMissile(target.token, i)}\"><i class=\"fas fa-plus\"></i></button>\r\n                        <button on:click=\"{removeMissile(target.token, i)}\"><i class=\"fas fa-minus\"></i></button>\r\n                    </td>\r\n                </tr>\r\n                {/each}\r\n            </tbody>\r\n        </table>\r\n    </section>\r\n<footer class=\"sheet-footer flexrow\">\r\n    <button on:click={launchMissiles}>\r\n        <i class=\"fa fa-check-square\"></i> {localize(\"ASE.Done\")}\r\n    </button>\r\n</footer>\r\n</ApplicationShell>","import { SvelteApplication } from '@typhonjs-fvtt/runtime/svelte/application';\r\nimport MissileDialogAppShell from './MissileDialogAppShell.svelte';\r\nimport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n\r\nexport default class MissileDialog extends SvelteApplication {\r\n    constructor(data) {\r\n        super({\r\n            title: localize(\"ASE.SelectTargetsDialogTitle\"),\r\n            id: 'missile-dialog-shell',\r\n            zIndex: 102,\r\n            svelte: {\r\n                class: MissileDialogAppShell,\r\n                target: document.body,\r\n                props: {\r\n                    data: data\r\n                }\r\n            },\r\n            close: () => {console.log(\"ASE: Missile Dialog Closed!\");}\r\n        });\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            resizable: true,\r\n            minimizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            left: game.user?.getFlag(\"advancedspelleffects\", \"missileDialogPos.left\") ?? \"auto\",\r\n            top: game.user?.getFlag(\"advancedspelleffects\", \"missileDialogPos.top\") ?? \"auto\",\r\n            closeOnSubmit: true\r\n        })\r\n    }\r\n}","// Magic Missile spell\r\nimport  MissileDialog  from \"../svelteApps/MissileDialog.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nexport class magicMissile {\r\n    static async registerHooks() {\r\n        return;\r\n    }\r\n    static async _preloadAssets() {\r\n        console.log('Preloading assets for ASE Magic Missile...');\r\n        let assetDBPaths = [];\r\n        let magicMissileItems = utilFunctions.getAllItemsNamed(\"Magic Missile\");\r\n        if (magicMissileItems.length > 0) {\r\n            for (let item of magicMissileItems) {\r\n                let aseSettings = item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n                //console.log(aseSettings);\r\n                let missileAnim = `jb2a.magic_missile.${aseSettings.missileColor}`;\r\n                let markerAnim = `jb2a.moonbeam.01.loop.${aseSettings.targetMarkerColor}`;\r\n                if (!assetDBPaths.includes(missileAnim)) assetDBPaths.push(missileAnim);\r\n                if (!assetDBPaths.includes(markerAnim)) assetDBPaths.push(markerAnim);\r\n            }\r\n        }\r\n        //console.log('DB Paths about to be preloaded...', assetDBPaths);\r\n        //console.log('Files about to be preloaded...', assetFilePaths);\r\n        console.log(`Preloaded ${assetDBPaths.length} assets for Magic Missile!`);\r\n        await Sequencer.Preloader.preloadForClients(assetDBPaths, true);\r\n        return;\r\n    }\r\n    static async selectTargets(midiData) {\r\n        const casterActor = midiData.actor;\r\n        const casterToken = canvas.tokens.get(midiData.tokenId);\r\n        const numMissiles = Number(midiData.itemLevel) + 2;\r\n        const itemCardId = midiData.itemCardId;\r\n        const spellItem = midiData.item;\r\n        const aseEffectOptions = spellItem?.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        aseEffectOptions['targetMarkerType'] = 'jb2a.moonbeam.01.loop';\r\n        aseEffectOptions['missileType'] = 'dart';\r\n        aseEffectOptions['missileAnim'] = 'jb2a.magic_missile';\r\n        aseEffectOptions['baseScale'] = 0.05;\r\n        aseEffectOptions['dmgDie'] = aseEffectOptions.dmgDie ?? 'd4';\r\n        aseEffectOptions['dmgDieCount'] = aseEffectOptions.dmgDieCount ?? 1;\r\n        aseEffectOptions['dmgType'] = 'force';\r\n        aseEffectOptions['dmgMod'] = aseEffectOptions.dmgMod ?? 1;\r\n        aseEffectOptions['impactDelay'] = -1000;\r\n        new MissileDialog({ casterId: casterToken.id, numMissiles: numMissiles, itemCardId: itemCardId, effectOptions: aseEffectOptions, item: spellItem }).render(true);\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        const missileColorOptions = utilFunctions.getDBOptions('jb2a.magic_missile');\r\n        const targetMarkerColorOptions = utilFunctions.getDBOptions('jb2a.moonbeam.01.loop');\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        const dieOptions = [\r\n            {'d4': 'd4'},\r\n            {'d6': 'd6'},\r\n            {'d8': 'd8'},\r\n            {'d10': 'd10'},\r\n            {'d12': 'd12'},\r\n            {'d20': 'd20'}\r\n        ];\r\n\r\n        const soundPlaybackOptions = [\r\n            {'indiv': 'Individual'},\r\n            {'group': 'Group'}];\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize('ASE.DamageDieCountLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDieCount',\r\n            flagName: 'dmgDieCount',\r\n            flagValue: currFlags.dmgDieCount ?? 1,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize('ASE.DamageDieLabel'),\r\n            type: 'dropdown',\r\n            options: dieOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDie',\r\n            flagName: 'dmgDie',\r\n            flagValue: currFlags.dmgDie ?? 'd10',\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize('ASE.DamageBonusLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgMod',\r\n            flagName: 'dmgMod',\r\n            flagValue: currFlags.dmgMod ?? 0,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.TargetmarkerColorLabel'),\r\n            type: 'dropdown',\r\n            options: targetMarkerColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerColor',\r\n            flagName: 'targetMarkerColor',\r\n            flagValue: currFlags.targetMarkerColor ?? 'blue',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerHueLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerHue',\r\n            flagName: 'targetMarkerHue',\r\n            flagValue: currFlags.targetMarkerHue ?? 0,\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerSaturationLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerSaturation',\r\n            flagName: 'targetMarkerSaturation',\r\n            flagValue: currFlags.targetMarkerSaturation ?? 0,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.1,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerSoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerSound',\r\n            flagName: 'markerSound',\r\n            flagValue: currFlags.markerSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerSoundDelayLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerSoundDelay',\r\n            flagName: 'markerSoundDelay',\r\n            flagValue: currFlags.markerSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerVolume',\r\n            flagName: 'markerVolume',\r\n            flagValue: currFlags.markerVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.DartColorLabel'),\r\n            type: 'dropdown',\r\n            options: missileColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileColor',\r\n            flagName: 'missileColor',\r\n            flagValue: currFlags.missileColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.DartIntroSoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSound',\r\n            flagName: 'missileIntroSound',\r\n            flagValue: currFlags.missileIntroSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.DartIntroSoundDelayLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSoundDelay',\r\n            flagName: 'missileIntroSoundDelay',\r\n            flagValue: currFlags.missileIntroSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.DartIntroVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroVolume',\r\n            flagName: 'missileIntroVolume',\r\n            flagValue: currFlags.missileIntroVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamIntroSoundPlaybackOptionsLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.BeamIntroSoundPlaybackOptionsTooltip\"),\r\n            type: 'dropdown',\r\n            options: soundPlaybackOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSoundPlayback',\r\n            flagName: 'missileIntroSoundPlayback',\r\n            flagValue: currFlags.missileIntroSoundPlayback ?? 'indiv',\r\n\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.DartImpactSoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSound',\r\n            flagName: 'missileImpactSound',\r\n            flagValue: currFlags.missileImpactSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.DartImpactSoundDelayLabel'),\r\n            tooltip: game.i18n.localize(\"ASE.DartImpactSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSoundDelay',\r\n            flagName: 'missileImpactSoundDelay',\r\n            flagValue: currFlags.missileImpactSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.DartImpactVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactVolume',\r\n            flagName: 'missileImpactVolume',\r\n            flagValue: currFlags.missileImpactVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamImpactSoundPlaybackOptionsLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.BeamImpactSoundPlaybackOptionsTooltip\"),\r\n            type: 'dropdown',\r\n            options: soundPlaybackOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSoundPlayback',\r\n            flagName: 'missileImpactSoundPlayback',\r\n            flagValue: currFlags.missileImpactSoundPlayback ?? 'indiv',\r\n\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false\r\n        }\r\n\r\n    }\r\n}","// Magic Missile spell\r\nimport  MissileDialog  from \"../svelteApps/MissileDialog.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nexport class scorchingRay {\r\n    static async registerHooks() {\r\n        return;\r\n    }\r\n\r\n    static async _preloadAssets() {\r\n        console.log('Preloading assets for ASE Scorching Ray...');\r\n        let assetDBPaths = [];\r\n        let scorchingRayItems = utilFunctions.getAllItemsNamed(\"Scorching Ray\");\r\n        if (scorchingRayItems.length > 0) {\r\n            for (let item of scorchingRayItems) {\r\n                let aseSettings = item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n                //console.log(aseSettings);\r\n                let missileAnim = `jb2a.scorching_ray.${aseSettings.missileColor}`;\r\n                let markerAnim = `jb2a.markers.01.${aseSettings.targetMarkerColor}`;\r\n                if (!assetDBPaths.includes(missileAnim)) assetDBPaths.push(missileAnim);\r\n                if (!assetDBPaths.includes(markerAnim)) assetDBPaths.push(markerAnim);\r\n            }\r\n        }\r\n        //console.log('DB Paths about to be preloaded...', assetDBPaths);\r\n        //console.log('Files about to be preloaded...', assetFilePaths);\r\n        console.log(`Preloaded ${assetDBPaths.length} assets for Scorching Ray!`);\r\n        await Sequencer.Preloader.preloadForClients(assetDBPaths, true);\r\n        return;\r\n    }\r\n\r\n    static async selectTargets(midiData) {\r\n        const casterActor = midiData.actor;\r\n        const casterToken = canvas.tokens.get(midiData.tokenId);\r\n        const numMissiles = Number(midiData.itemLevel) + 1;\r\n        const itemCardId = midiData.itemCardId;\r\n        const spellItem = midiData.item;\r\n        const aseEffectOptions = spellItem?.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        aseEffectOptions['targetMarkerType'] = 'jb2a.markers.01';\r\n        aseEffectOptions['missileType'] = 'ray';\r\n        aseEffectOptions['missileAnim'] = 'jb2a.scorching_ray';\r\n        aseEffectOptions['baseScale'] = 0.1;\r\n        aseEffectOptions['dmgDie'] = aseEffectOptions.dmgDie ?? 'd6';\r\n        aseEffectOptions['dmgDieCount'] = aseEffectOptions.dmgDieCount ?? 2;\r\n        aseEffectOptions['dmgType'] = 'fire';\r\n        aseEffectOptions['dmgMod'] = aseEffectOptions.dmgMod ?? 0;\r\n        aseEffectOptions['impactDelay'] = -1000;\r\n        new MissileDialog({\r\n            casterId: casterToken.id,\r\n            numMissiles: numMissiles,\r\n            itemCardId: itemCardId,\r\n            effectOptions: aseEffectOptions,\r\n            item: spellItem,\r\n            actionType: \"rsak\",\r\n        }).render(true);\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        const missileColorOptions = utilFunctions.getDBOptions('jb2a.scorching_ray.02');\r\n        const targetMarkerColorOptions = utilFunctions.getDBOptions('jb2a.markers.01');\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        const dieOptions = [\r\n            {'d4': 'd4'},\r\n            {'d6': 'd6'},\r\n            {'d8': 'd8'},\r\n            {'d10': 'd10'},\r\n            {'d12': 'd12'},\r\n            {'d20': 'd20'}\r\n        ];\r\n\r\n        const soundPlaybackOptions = [\r\n            {'indiv': 'Individual'},\r\n            {'group': 'Group'}];\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageDieCountLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDieCount',\r\n            flagName: 'dmgDieCount',\r\n            flagValue: currFlags.dmgDieCount ?? 1,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageDieLabel\"),\r\n            type: 'dropdown',\r\n            options: dieOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDie',\r\n            flagName: 'dmgDie',\r\n            flagValue: currFlags.dmgDie ?? 'd10',\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageBonusLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgMod',\r\n            flagName: 'dmgMod',\r\n            flagValue: currFlags.dmgMod ?? 0,\r\n        });\r\n\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetmarkerColorLabel\"),\r\n            type: 'dropdown',\r\n            options: targetMarkerColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerColor',\r\n            flagName: 'targetMarkerColor',\r\n            flagValue: currFlags.targetMarkerColor ?? 'red',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerHueLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerHue',\r\n            flagName: 'targetMarkerHue',\r\n            flagValue: currFlags.targetMarkerHue ?? 0,\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerSaturationLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerSaturation',\r\n            flagName: 'targetMarkerSaturation',\r\n            flagValue: currFlags.targetMarkerSaturation ?? 0,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.1,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetMarkerSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerSound',\r\n            flagName: 'markerSound',\r\n            flagValue: currFlags.markerSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetMarkerSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerSoundDelay',\r\n            flagName: 'markerSoundDelay',\r\n            flagValue: currFlags.markerSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetMarkerVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerVolume',\r\n            flagName: 'markerVolume',\r\n            flagValue: currFlags.markerVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.RayColorLabel\"),\r\n            type: 'dropdown',\r\n            options: missileColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileColor',\r\n            flagName: 'missileColor',\r\n            flagValue: currFlags.missileColor ?? 'orange',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.RayIntroSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSound',\r\n            flagName: 'missileIntroSound',\r\n            flagValue: currFlags.missileIntroSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.RayIntroSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSoundDelay',\r\n            flagName: 'missileIntroSoundDelay',\r\n            flagValue: currFlags.missileIntroSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.RayIntroVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroVolume',\r\n            flagName: 'missileIntroVolume',\r\n            flagValue: currFlags.missileIntroVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamIntroSoundPlaybackOptionsLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.BeamIntroSoundPlaybackOptionsTooltip\"),\r\n            type: 'dropdown',\r\n            options: soundPlaybackOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSoundPlayback',\r\n            flagName: 'missileIntroSoundPlayback',\r\n            flagValue: currFlags.missileIntroSoundPlayback ?? 'indiv',\r\n\r\n        });\r\n\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.RayImpactSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSound',\r\n            flagName: 'missileImpactSound',\r\n            flagValue: currFlags.missileImpactSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.RayImpactSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.RayImpactSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSoundDelay',\r\n            flagName: 'missileImpactSoundDelay',\r\n            flagValue: currFlags.missileImpactSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.RayImpactVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactVolume',\r\n            flagName: 'missileImpactVolume',\r\n            flagValue: currFlags.missileImpactVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamImpactSoundPlaybackOptionsLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.BeamImpactSoundPlaybackOptionsTooltip\"),\r\n            type: 'dropdown',\r\n            options: soundPlaybackOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSoundPlayback',\r\n            flagName: 'missileImpactSoundPlayback',\r\n            flagValue: currFlags.missileImpactSoundPlayback ?? 'indiv',\r\n\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false\r\n        }\r\n\r\n    }\r\n}","// Magic Missile spell\r\nimport  MissileDialog  from \"../svelteApps/MissileDialog.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nexport class eldritchBlast {\r\n    static async registerHooks() {\r\n        return;\r\n    }\r\n    static async selectTargets(midiData) {\r\n        const casterActor = midiData.actor;\r\n        //console.log(\"casterActor\", casterActor);\r\n        const casterToken = canvas.tokens.get(midiData.tokenId);\r\n        //console.log(\"casterToken\", casterToken);\r\n        const characterLevel = casterActor.data?.data?.details?.level ?? casterActor.data?.data?.details?.spellLevel ?? 1;\r\n        console.log(`Caster level: ${characterLevel}`);\r\n        let numMissiles = 1;\r\n        if (characterLevel >= 5) {\r\n            numMissiles += 1;\r\n        }\r\n        if (characterLevel >= 11) {\r\n            numMissiles += 1;\r\n        }\r\n        if (characterLevel >= 17) {\r\n            numMissiles += 1;\r\n        }\r\n        const itemCardId = midiData.itemCardId;\r\n        const spellItem = midiData.item;\r\n        const aseEffectOptions = JSON.parse(JSON.stringify(spellItem?.getFlag(\"advancedspelleffects\", \"effectOptions\") ?? {}));\r\n        aseEffectOptions['targetMarkerType'] = 'jb2a.markers.02';\r\n        aseEffectOptions['missileType'] = 'beam';\r\n        aseEffectOptions['missileAnim'] = 'jb2a.eldritch_blast';\r\n        aseEffectOptions['baseScale'] = 0.1;\r\n        aseEffectOptions['dmgDie'] = aseEffectOptions.dmgDie ?? 'd10';\r\n        aseEffectOptions['dmgDieCount'] = aseEffectOptions.dmgDieCount ?? 1;\r\n        aseEffectOptions['dmgType'] = 'force';\r\n        aseEffectOptions['dmgMod'] = aseEffectOptions.dmgMod ?? 0;\r\n        aseEffectOptions['impactDelay'] = -3000;\r\n        let invocations = aseEffectOptions.invocations;\r\n        //console.log('ASEEffectOptions.dmgMod: ', aseEffectOptions.dmgMod);\r\n        if (invocations.agonizingBlast) {\r\n            aseEffectOptions.dmgMod += casterActor?.data?.data?.abilities?.cha?.mod ?? 0;\r\n        }\r\n        //console.log('ASEEffectOptions: ', aseEffectOptions);\r\n        // create a new promise that resolves when the missile dialog is closed\r\n        new MissileDialog({\r\n                casterId: casterToken.id,\r\n                numMissiles: numMissiles,\r\n                itemCardId: itemCardId,\r\n                effectOptions: aseEffectOptions,\r\n                item: spellItem,\r\n                actionType: \"rsak\",\r\n            }).render(true);\r\n        return;\r\n        \r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n\r\n        const missileColorOptions = utilFunctions.getDBOptions('jb2a.eldritch_blast');\r\n        const targetMarkerColorOptions = utilFunctions.getDBOptions('jb2a.markers.02');\r\n\r\n        const dieOptions = [\r\n            {'d4': 'd4'},\r\n            {'d6': 'd6'},\r\n            {'d8': 'd8'},\r\n            {'d10': 'd10'},\r\n            {'d12': 'd12'},\r\n            {'d20': 'd20'}\r\n        ];\r\n\r\n        const soundPlaybackOptions = [\r\n            {'indiv': 'Individual'},\r\n            {'group': 'Group'}];\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.AgonizingBlastLabel\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.agonizingBlast',\r\n            flagName: 'agonizingBlast',\r\n            flagValue: currFlags.invocations?.agonizingBlast ?? false,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageDieCountLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDieCount',\r\n            flagName: 'dmgDieCount',\r\n            flagValue: currFlags.dmgDieCount ?? 1,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageDieLabel\"),\r\n            type: 'dropdown',\r\n            options: dieOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgDie',\r\n            flagName: 'dmgDie',\r\n            flagValue: currFlags.dmgDie ?? 'd10',\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageBonusLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.dmgMod',\r\n            flagName: 'dmgMod',\r\n            flagValue: currFlags.dmgMod ?? 0,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetmarkerColorLabel\"),\r\n            type: 'dropdown',\r\n            options: targetMarkerColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerColor',\r\n            flagName: 'targetMarkerColor',\r\n            flagValue: currFlags.targetMarkerColor ?? 'blueyellow',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerHueLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerHue',\r\n            flagName: 'targetMarkerHue',\r\n            flagValue: currFlags.targetMarkerHue ?? 0,\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.TargetMarkerSaturationLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.targetMarkerSaturation',\r\n            flagName: 'targetMarkerSaturation',\r\n            flagValue: currFlags.targetMarkerSaturation ?? 0,\r\n            min: -1,\r\n            max: 1,\r\n            step: 0.1,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetMarkerSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerSound',\r\n            flagName: 'markerSound',\r\n            flagValue: currFlags.markerSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetMarkerSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerSoundDelay',\r\n            flagName: 'markerSoundDelay',\r\n            flagValue: currFlags.markerSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.TargetMarkerVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.markerVolume',\r\n            flagName: 'markerVolume',\r\n            flagValue: currFlags.markerVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamColorLabel\"),\r\n            type: 'dropdown',\r\n            options: missileColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileColor',\r\n            flagName: 'missileColor',\r\n            flagValue: currFlags.missileColor ?? 'purple',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamIntroSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSound',\r\n            flagName: 'missileIntroSound',\r\n            flagValue: currFlags.missileIntroSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamIntroSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSoundDelay',\r\n            flagName: 'missileIntroSoundDelay',\r\n            flagValue: currFlags.missileIntroSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamIntroVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroVolume',\r\n            flagName: 'missileIntroVolume',\r\n            flagValue: currFlags.missileIntroVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamIntroSoundPlaybackOptionsLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.BeamIntroSoundPlaybackOptionsTooltip\"),\r\n            type: 'dropdown',\r\n            options: soundPlaybackOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileIntroSoundPlayback',\r\n            flagName: 'missileIntroSoundPlayback',\r\n            flagValue: currFlags.missileIntroSoundPlayback ?? 'indiv',\r\n\r\n        });\r\n\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamImpactSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSound',\r\n            flagName: 'missileImpactSound',\r\n            flagValue: currFlags.missileImpactSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamImpactSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.BeamImpactSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSoundDelay',\r\n            flagName: 'missileImpactSoundDelay',\r\n            flagValue: currFlags.missileImpactSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamImpactVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactVolume',\r\n            flagName: 'missileImpactVolume',\r\n            flagValue: currFlags.missileImpactVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamImpactSoundPlaybackOptionsLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.BeamImpactSoundPlaybackOptionsTooltip\"),\r\n            type: 'dropdown',\r\n            options: soundPlaybackOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.missileImpactSoundPlayback',\r\n            flagName: 'missileImpactSoundPlayback',\r\n            flagValue: currFlags.missileImpactSoundPlayback ?? 'indiv',\r\n\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false\r\n        }\r\n\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\n\r\nexport class moonBeam {\r\n    static registerHooks() {\r\n        Hooks.on(\"updateToken\", moonBeam._updateToken);\r\n        Hooks.on(\"updateCombat\", moonBeam._updateCombat);\r\n        Hooks.on(\"deleteTile\", moonBeam._deleteTile);\r\n        return;\r\n    }\r\n\r\n    static async _deleteTile(tileD) {\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(\"Is first GM: \", isGM);\r\n        if (!isGM) return;\r\n        const attachedSounds = (await Tagger.getByTag([`ase-source-${tileD.id}`]));\r\n        if (!attachedSounds.length > 0) {\r\n            return;\r\n        }\r\n        await canvas.scene.deleteEmbeddedDocuments(\"AmbientSound\", attachedSounds.map(s => s.id));\r\n    }\r\n\r\n    static async _updateToken(tokenDocument, updateData) {\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(\"Is first GM: \", isGM);\r\n        //console.log('Update Token tokenDocument: ', tokenDocument);\r\n        //console.log('Update Token updateData: ', updateData);\r\n        if (!isGM) return;\r\n        if ((!updateData.x && !updateData.y)) return;\r\n\r\n        const moonbeamTiles = await Tagger.getByTag(`*-moonbeam`);\r\n        if (moonbeamTiles.length == 0) return;\r\n\r\n        const token = canvas.tokens.get(tokenDocument.id);\r\n        let newTokenPosition = { x: 0, y: 0 };\r\n        newTokenPosition.x = (updateData.x) ? updateData.x : token.data.x;\r\n        newTokenPosition.y = (updateData.y) ? updateData.y : token.data.y;\r\n        newTokenPosition = utilFunctions.getCenter(newTokenPosition, tokenDocument.data.width);\r\n\r\n        let inTiles = token.document.getFlag(\"advancedspelleffects\", \"moonbeam.inTiles\") ?? [];\r\n        //console.log('inTiles: ', inTiles);\r\n        //console.log('moonbeamTiles: ', moonbeamTiles);\r\n        //console.log('token: ', token);\r\n        //console.log('New Token Position: ', newTokenPosition);\r\n        //iterate over every moonbeam tile\r\n        for (let i = 0; i < moonbeamTiles.length; i++) {\r\n            let moonbeamTile = moonbeamTiles[i];\r\n            let moonbeamTileCenter = utilFunctions.getTileCenter(moonbeamTile.data);\r\n            //console.log('Moonbeam tile center: ', moonbeamTileCenter);\r\n            let targetToBeamDist = utilFunctions.getDistanceClassic(newTokenPosition, moonbeamTileCenter);\r\n            //console.log('target to beam dist: ', targetToBeamDist);\r\n            //console.log('Required Distance: ', (((tokenDocument.data.width * canvas.grid.size) / 2) + (moonbeamTile.data.width / 2)));\r\n            if (targetToBeamDist < (((tokenDocument.data.width * canvas.grid.size) / 2) + (moonbeamTile.data.width / 2))) {\r\n                //check if tile exists in inTiles which is an array of tiles\r\n                if (inTiles.includes(moonbeamTile.id)) {\r\n\r\n                    console.log(`${token.name} has already entered this tile this turn - ${moonbeamTile.id}`);\r\n                    ui.notifications.info(game.i18n.format(\"ASE.MoonbeamAlreadyEnteredTile\", { name: token.name }));\r\n                    //do nothing\r\n                }\r\n                else {\r\n                    console.log(`${token.name} is entering the space of a moonbeam tile - ${moonbeamTile.id}`);\r\n                    ui.notifications.info(game.i18n.format(\"ASE.MoonbeamEnteringTile\", { name: token.name }));\r\n                    //add the tile to the inTiles array\r\n                    inTiles.push(moonbeamTile.id);\r\n                    let effectOptions = moonbeamTile.getFlag(\"advancedspelleffects\", \"effectOptions\") ?? {};\r\n                    await moonBeam.activateBeam(token, effectOptions);\r\n                }\r\n            }\r\n        }\r\n        await token.document.setFlag(\"advancedspelleffects\", \"moonbeam.inTiles\", inTiles);\r\n    }\r\n\r\n    static async _updateCombat(combat) {\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(\"Is first GM: \", isGM);\r\n        if (!isGM) return;\r\n        const moonbeamTiles = await Tagger.getByTag(`*-moonbeam`);\r\n        if (moonbeamTiles.length == 0) return;\r\n\r\n        //console.log(\"Updating Combat for ASE Moonbeam...\");\r\n        //console.log(combat);\r\n        const combatantToken = canvas.tokens.get(combat.current.tokenId);\r\n        const combatantActor = combatantToken.actor;\r\n        const combatantPosition = utilFunctions.getCenter(combatantToken.data, combatantToken.data.width);\r\n\r\n        let inTiles = [];\r\n        //iterate over every moonbeam tile\r\n        for (let i = 0; i < moonbeamTiles.length; i++) {\r\n            let moonbeamTile = moonbeamTiles[i];\r\n            //console.log('Moonbeam tile found: ', moonbeamTile);\r\n            let effectOptions = moonbeamTile.getFlag(\"advancedspelleffects\", \"effectOptions\") ?? {};\r\n            //check if token has entered the tile\r\n            let moonbeamTileCenter = utilFunctions.getTileCenter(moonbeamTile.data);\r\n            let targetToBeamDist = utilFunctions.getDistanceClassic(combatantPosition, moonbeamTileCenter);\r\n            //console.log('target to beam dist: ', targetToBeamDist);\r\n            if (targetToBeamDist < (((combatantToken.data.width * canvas.grid.size) / 2) + (moonbeamTile.data.width / 2))) {\r\n                //check if tile exists in inTiles which is an array of tiles\r\n                console.log(`${combatantToken.name} is starting its turn in the space of a moonbeam tile - ${moonbeamTile.id}`);\r\n                ui.notifications.info(game.i18n.format(\"ASE.StartingTurnInMoonbeam\", { name: combatantToken.name }));\r\n                //add the tile to the inTiles array\r\n                await moonBeam.activateBeam(combatantToken, effectOptions);\r\n                inTiles.push(moonbeamTile.id);\r\n            }\r\n        }\r\n        await combatantToken.document.setFlag(\"advancedspelleffects\", \"moonbeam.inTiles\", inTiles);\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        //console.log(\"Handling concentration removal for ASE Darknes...\");\r\n        let moonbeamTiles = await Tagger.getByTag(`${casterToken.id}-moonbeam`);\r\n        if (moonbeamTiles.length > 0) {\r\n            aseSocket.executeAsGM(\"deleteTiles\", [moonbeamTiles[0].id]);\r\n        }\r\n        await warpgate.revert(casterToken.document, `${casterActor.id}-moonbeam`);\r\n        ui.notifications.info(game.i18n.format(\"ASE.RemovedAtWill\", { spellName: game.i18n.localize(\"ASE.MoveMoonbeam\") }));\r\n\r\n        const tokens = canvas.tokens.placeables;\r\n        for await (let token of tokens) {\r\n            if (token.document.getFlag(\"advancedspelleffects\", \"moonbeam\") != undefined) {\r\n                await token.document.unsetFlag(\"advancedspelleffects\", \"moonbeam\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static async callBeam(data) {\r\n        const casterActor = data.actor;\r\n        const casterToken = canvas.tokens.get(data.tokenId);\r\n        const itemCardId = data.itemCardId;\r\n        const spellItem = data.item;\r\n        const spellLevel = data.itemLevel;\r\n        const aseEffectOptions = spellItem?.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        //console.log(aseEffectOptions);\r\n        const beamIntro = `jb2a.moonbeam.01.intro.${aseEffectOptions.moonbeamColor}`;\r\n        const beamOutro = `jb2a.moonbeam.01.outro.${aseEffectOptions.moonbeamColor}`;\r\n        const beamLoop = `jb2a.moonbeam.01.no_pulse.${aseEffectOptions.moonbeamColor}`;\r\n        const damageColor = aseEffectOptions.moonbeamDmgColor;\r\n        const beamInitialSound = aseEffectOptions.moonbeamSound ?? \"\";\r\n        const beamLoopSound = aseEffectOptions.moonbeamLoopSound ?? \"\";\r\n        const beamInitialSoundDelay = Number(aseEffectOptions.moonbeamSoundDelay) ?? 0;\r\n        const beamLoopSoundDelay = Number(aseEffectOptions.moonbeamLoopSoundDelay) ?? 0;\r\n        const beamInitialSoundVolume = aseEffectOptions.moonbeamVolume ?? 1;\r\n        const beamLoopSoundVolume = aseEffectOptions.moonbeamLoopVolume ?? 1;\r\n        const beamLoopSoundEasing = aseEffectOptions.moonbeamLoopEasing ?? true;\r\n        const beamLoopSoundRadius = aseEffectOptions.moonbeamLoopRadius ?? 20;\r\n\r\n        let damage = data.item.data.data.damage;\r\n\r\n        aseEffectOptions[\"rollInfo\"] = {\r\n            casterTokenId: casterToken.id,\r\n            itemUUID: '',\r\n            itemCardId: data.itemCardId,\r\n            spellSaveDc: casterActor.data.data.attributes.spelldc,\r\n            damageFormula: damage,\r\n        };\r\n        aseEffectOptions['allowInitialMidiCall'] = false;\r\n        const updates = {\r\n            embedded: {\r\n                Item: {}\r\n            }\r\n        };\r\n        const activationItemName = game.i18n.localize('ASE.MoveMoonbeam');\r\n\r\n        updates.embedded.Item[activationItemName] = {\r\n            \"type\": \"spell\",\r\n            \"img\": spellItem.img,\r\n            \"data\": {\r\n                \"ability\": \"\",\r\n                \"actionType\": \"save\",\r\n                \"save\": spellItem.data.data.save,\r\n                \"activation\": { \"type\": 'action', \"cost\": 1 },\r\n                \"damage\": damage,\r\n                \"level\": data.itemLevel,\r\n                \"preparation\": { \"mode\": 'atwill', \"prepared\": true },\r\n                \"range\": { \"value\": null, \"long\": null, \"units\": \"\" },\r\n                \"school\": \"evo\",\r\n                \"target\": { \"value\": 1, \"width\": null, \"units\": \"\", \"type\": \"creature\" },\r\n                \"description\": {\r\n                    \"value\": game.i18n.localize(\"ASE.MoveMoonbeamDescription\")\r\n                }\r\n            },\r\n            \"flags\": {\r\n                \"advancedspelleffects\": {\r\n                    \"enableASE\": true,\r\n                    \"spellEffect\": game.i18n.localize('ASE.MoveMoonbeam'),\r\n                    \"castItem\": true,\r\n                    'effectOptions': aseEffectOptions\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let moonbeamLoc = await moonBeam.chooseBeamLocation(beamLoop);\r\n\r\n        await warpgate.mutate(casterToken.document, updates, {}, { name: `${casterActor.id}-moonbeam` });\r\n        //get newly created item by actor.items.getName()\r\n        let moonbeamCastItem = casterActor.items.getName(activationItemName);\r\n        if(moonbeamCastItem){\r\n            aseEffectOptions['rollInfo']['itemUUID'] = moonbeamCastItem.uuid;\r\n        }\r\n        ui.notifications.info(game.i18n.format(\"ASE.AddedAtWill\", { spellName: game.i18n.localize(\"ASE.MoveMoonbeam\") }));\r\n\r\n        const moonbeamTile = await placeBeam(moonbeamLoc, casterToken.id, beamLoop, aseEffectOptions);\r\n        //console.log(moonbeamTile);\r\n        const moonbeamTileId = moonbeamTile.id ?? moonbeamTile._id;\r\n        let beamSeq = new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(beamInitialSound)\r\n            .delay(beamInitialSoundDelay)\r\n            .volume(beamInitialSoundVolume)\r\n            .playIf(beamInitialSound != \"\")\r\n            .effect()\r\n            .file(beamIntro)\r\n            .atLocation(moonbeamLoc)\r\n            .endTimePerc(0.50)\r\n            .scale(0.5)\r\n            .waitUntilFinished(-500)\r\n            .thenDo(async () => {\r\n                await aseSocket.executeAsGM(\"fadeTile\", { type: \"fadeIn\", duration: 500 }, moonbeamTileId);\r\n            })\r\n        await beamSeq.play();\r\n        const soundOptions = {\r\n            volume: beamLoopSoundVolume,\r\n            delay: beamLoopSoundDelay,\r\n            sound: beamLoopSound,\r\n            easing: beamLoopSoundEasing,\r\n            radius: beamLoopSoundRadius,\r\n        };\r\n        if (beamLoopSound != \"\") {\r\n            const sourceSound = await placeSound(moonbeamLoc, soundOptions, moonbeamTileId);\r\n            console.log('Sound Created...', sourceSound);\r\n        }\r\n\r\n        async function placeBeam(templateData, tokenId, beamAnim, effectOptions) {\r\n            let tileWidth;\r\n            let tileHeight;\r\n            let tileX;\r\n            let tileY;\r\n\r\n            tileWidth = (templateData.width * canvas.grid.size);\r\n            tileHeight = (templateData.width * canvas.grid.size);\r\n\r\n            tileX = templateData.x - (tileWidth / 2);\r\n            tileY = templateData.y - (tileHeight / 2);\r\n\r\n            const animPath = Sequencer.Database.getEntry(beamAnim).file;\r\n\r\n            let data = [{\r\n                alpha: 0,\r\n                width: tileWidth,\r\n                height: tileHeight,\r\n                img: animPath,\r\n                overhead: true,\r\n                occlusion: {\r\n                    alpha: 0,\r\n                    mode: 0,\r\n                },\r\n                video: {\r\n                    autoplay: true,\r\n                    loop: true,\r\n                    volume: 0,\r\n                },\r\n                x: tileX,\r\n                y: tileY,\r\n                z: 100,\r\n                flags: {\r\n                    tagger: {\r\n                        tags: [`${tokenId}-moonbeam`]\r\n                    },\r\n                    advancedspelleffects: {\r\n                        effectOptions: effectOptions\r\n                    }\r\n                }\r\n            }]\r\n            //console.log(\"Placing as tile: \", data);\r\n            let createdTiles = await aseSocket.executeAsGM(\"placeTiles\", data);\r\n            //console.log(\"ASE MOONBEAM: Moonbeam Tile Created: \", createdTiles);\r\n            return createdTiles[0];\r\n\r\n        }\r\n\r\n        async function placeSound(location, options, sourceId) {\r\n            const soundData = [{\r\n                easing: options.easing,\r\n                path: options.sound,\r\n                radius: options.radius,\r\n                type: \"1\",\r\n                volume: options.volume,\r\n                x: location.x,\r\n                y: location.y,\r\n                flags: {\r\n                    tagger: {\r\n                        tags: [`ase-source-${sourceId}`]\r\n                    },\r\n                    advancedspelleffects: {\r\n                        sourceId: sourceId\r\n                    }\r\n                }\r\n            }];\r\n            return (await aseSocket.executeAsGM(\"placeSounds\", soundData, options.delay));\r\n        }\r\n\r\n    }\r\n\r\n    static async activateBeam(target, effectOptions) {\r\n\r\n        const rollInfo = effectOptions.rollInfo;\r\n        effectOptions['castItem'] = true;\r\n        const targetUuid = target.document?.uuid ?? target.uuid;\r\n        let state = game.ASESpellStateManager.getSpell(rollInfo.itemUUID);\r\n        if(state){\r\n            game.ASESpellStateManager.removeSpell(rollInfo.itemUUID);\r\n        }\r\n        effectOptions.targets = [targetUuid];\r\n        game.ASESpellStateManager.addSpell(rollInfo.itemUUID, effectOptions);\r\n\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(effectOptions.moonbeamDmgSound)\r\n            .delay(Number(effectOptions.moonbeamDmgSoundDelay) ?? 0)\r\n            .volume(effectOptions.moonbeamDmgVolume ?? 1)\r\n            .playIf(effectOptions.moonbeamDmgSound && effectOptions.moonbeamDmgSound != \"\")\r\n            .effect()\r\n            .file(`jb2a.impact.004.${effectOptions.moonbeamDmgColor}`)\r\n            .attachTo(target)\r\n            .randomRotation()\r\n            .scaleIn(0.5, 200)\r\n            .animateProperty(\"sprite\", \"rotation\", { duration: 1000, from: 0, to: 45 })\r\n            .randomOffset(0.5)\r\n            .repeats(4, 100, 250)\r\n            .play()\r\n    }\r\n\r\n    static async moveBeam(data) {\r\n        const casterActor = data.actor;\r\n        const casterToken = canvas.tokens.get(data.tokenId);\r\n        const spellItem = data.item;\r\n        const aseEffectOptions = spellItem?.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        //console.log(aseEffectOptions);\r\n        const beamLoop = `jb2a.moonbeam.01.loop.${aseEffectOptions.moonbeamColor}`;\r\n\r\n        let moonbeamTiles = await Tagger.getByTag(`${casterToken.id}-moonbeam`);\r\n        if (moonbeamTiles?.length == 0) {\r\n            console.log(\"Moonbeam not found\");\r\n            ui.notifications.error(`Moonbeam not found.`);\r\n            return;\r\n        }\r\n        let moonbeamTile = moonbeamTiles[0];\r\n\r\n        let moonbeamLoc = await moonBeam.chooseBeamLocation(beamLoop);\r\n        //console.log(moonbeamLoc);\r\n        //console.log(moonbeamTile);\r\n        //console.log(\"ASE EFFECT OPTIONS: \", aseEffectOptions);\r\n        await aseSocket.executeAsGM(\"moveTile\", moonbeamLoc, moonbeamTile.id);\r\n        if (aseEffectOptions.moonbeamLoopSound && aseEffectOptions.moonbeamLoopSound != \"\") {\r\n            await aseSocket.executeAsGM(\"moveSound\", moonbeamTile.id, moonbeamLoc);\r\n        }\r\n\r\n    }\r\n\r\n    static async chooseBeamLocation(beamAnim) {\r\n        const displayCrosshairs = async (crosshairs) => {\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .effect()\r\n                .file(beamAnim)\r\n                .attachTo(crosshairs)\r\n                .persist()\r\n                .scale(0.5)\r\n                .opacity(0.5)\r\n                .play()\r\n\r\n        }\r\n        let crosshairsConfig = {\r\n            size: 2,\r\n            label: game.i18n.localize(\"ASE.Moonbeam\"),\r\n            tag: 'moonbeam-crosshairs',\r\n            drawIcon: false,\r\n            drawOutline: false,\r\n            interval: 1\r\n        }\r\n        let placedLoc = await warpgate.crosshairs.show(crosshairsConfig, { show: displayCrosshairs });\r\n        return placedLoc;\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        const beamColorOptions = utilFunctions.getDBOptions('jb2a.moonbeam.01.no_pulse');\r\n        const beamDamageOptions = utilFunctions.getDBOptions('jb2a.impact.004');\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.BeamColorLabel\"),\r\n            type: 'dropdown',\r\n            options: beamColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamColor',\r\n            flagName: 'moonbeamColor',\r\n            flagValue: currFlags.moonbeamColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamInitialSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamSound',\r\n            flagName: 'moonbeamSound',\r\n            flagValue: currFlags.moonbeamSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamInitialSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamSoundDelay',\r\n            flagName: 'moonbeamSoundDelay',\r\n            flagValue: currFlags.moonbeamSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamInitialVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamVolume',\r\n            flagName: 'moonbeamVolume',\r\n            flagValue: currFlags.moonbeamVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamLoopSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamLoopSound',\r\n            flagName: 'moonbeamLoopSound',\r\n            flagValue: currFlags.moonbeamLoopSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamLoopSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamLoopSoundDelay',\r\n            flagName: 'moonbeamLoopSoundDelay',\r\n            flagValue: currFlags.moonbeamLoopSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamLoopVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamLoopVolume',\r\n            flagName: 'moonbeamLoopVolume',\r\n            flagValue: currFlags.moonbeamLoopVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamLoopVolumeEasingLabel\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamLoopEasing',\r\n            flagName: 'moonbeamLoopEasing',\r\n            flagValue: currFlags.moonbeamLoopEasing ?? true,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MoonbeamLoopSoundRadiusLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamLoopRadius',\r\n            flagName: 'moonbeamLoopRadius',\r\n            flagValue: currFlags.moonbeamLoopRadius ?? 20,\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageEffectColorLabel\"),\r\n            type: 'dropdown',\r\n            options: beamDamageOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamDmgColor',\r\n            flagName: 'moonbeamDmgColor',\r\n            flagValue: currFlags.moonbeamDmgColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageEffectSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamDmgSound',\r\n            flagName: 'moonbeamDmgSound',\r\n            flagValue: currFlags.moonbeamDmgSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageEffectSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamDmgSoundDelay',\r\n            flagName: 'moonbeamDmgSoundDelay',\r\n            flagValue: currFlags.moonbeamDmgSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DamageEffectVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.moonbeamDmgVolume',\r\n            flagName: 'moonbeamDmgVolume',\r\n            flagValue: currFlags.moonbeamDmgVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            'allowInitialMidiCall': true\r\n        }\r\n\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class wofPanelDialog extends FormApplication {\r\n    constructor(options = { aseData: {}, templateData: {}, type: '' }) {\r\n        super(options);\r\n        foundry.utils.mergeObject(this.options, options);\r\n        this.data = {};\r\n        this.data.aseData = this.options.aseData;\r\n        this.data.templateData = this.options.templateData;\r\n        this.data.type = this.options.type;\r\n        //console.log('WOF Panel Dialog Data: ', this.data);\r\n    }\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            template: './modules/advancedspelleffects/src/templates/wof-panel-dialog.html',\r\n            id: 'wof-panel-dialog',\r\n            title: game.i18n.localize(\"ASE.WallOfForce\"),\r\n            resizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            left: game.user?.getFlag(\"advancedspelleffects\", \"wofDialogPos.left\") ?? \"auto\",\r\n            top: game.user?.getFlag(\"advancedspelleffects\", \"wofDialogPos.top\") ?? \"auto\",\r\n            submitOnClose: true,\r\n            close: () => { ui.notify }\r\n        });\r\n    }\r\n    async getData() {\r\n        return { data: this.data };\r\n    }\r\n    async _updateObject(event, formData) {\r\n        await aseSocket.executeAsGM(\"updateFlag\", game.user.id, \"wofDialogPos\", { left: this.position.left, top: this.position.top });\r\n    }\r\n}\r\nexport default wofPanelDialog;","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nimport { wofPanelDialog } from \"../apps/wof-panel-dialog.js\";\r\nexport class wallOfForce {\r\n\r\n    static registerHooks() {\r\n        if (!game.user.isGM) return;\r\n        Hooks.on(\"updateMeasuredTemplate\", wallOfForce._updateMeasuredTemplate);\r\n        Hooks.on(\"deleteMeasuredTemplate\", wallOfForce._deleteMeasuredTemplate);\r\n    }\r\n\r\n    static async _updateMeasuredTemplate(template, changes) {\r\n        if (template.getFlag(\"advancedspelleffects\", \"wallOfForceWallNum\") && (changes.x !== undefined || changes.y !== undefined || changes.direction !== undefined)) {\r\n            wallOfForce._placeWalls(template, true);\r\n        }\r\n    }\r\n\r\n    static async _deleteMeasuredTemplate(template) {\r\n        const walls = Tagger.getByTag([`WallOfForce-Wall${template.id}`]).map(wall => wall.id);\r\n        if (walls.length) {\r\n            await canvas.scene.deleteEmbeddedDocuments(\"Wall\", walls);\r\n        }\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        let wallOfForceTemplate = Tagger.getByTag(`WallOfForce-${casterActor.id}`);\r\n        let wofTemplateIds = [];\r\n        if (wallOfForceTemplate.length > 0) {\r\n            wallOfForceTemplate.forEach(template => {\r\n                wofTemplateIds.push(template.id);\r\n            });\r\n            aseSocket.executeAsGM(\"deleteTemplates\", wofTemplateIds);\r\n        }\r\n    }\r\n\r\n    static async createWallOfForce(midiData) {\r\n\r\n        const aseData = {\r\n            itemLevel: midiData.itemLevel,\r\n            flags: midiData.item.getFlag(\"advancedspelleffects\", 'effectOptions'),\r\n            caster: canvas.tokens.get(midiData.tokenId),\r\n            casterActor: canvas.tokens.get(midiData.tokenId).actor\r\n        }\r\n\r\n        const { dimensions, texture, type } = await warpgate.buttonDialog({\r\n            title: 'Choose your Wall of Force shape:',\r\n            buttons: [\r\n                {\r\n                    label: `Sphere/Dome (${aseData.flags.wallOfForceRadius}ft radius)`,\r\n                    value: {\r\n                        dimensions: {\r\n                            radius: aseData.flags.wallOfForceRadius\r\n                        },\r\n                        texture: aseData.flags.useWebP\r\n                            ? `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${aseData.flags.color}_Sphere_Thumb.webp`\r\n                            : \"jb2a.wall_of_force.sphere.\" + aseData.flags.color,\r\n                        type: \"sphere\"\r\n                    }\r\n                },\r\n                {\r\n                    label: `Horizontal Wall (${aseData.flags.wallOfForceSegmentSize * 5}x${aseData.flags.wallOfForceSegmentSize * 2})`,\r\n                    value: {\r\n                        dimensions: {\r\n                            length: aseData.flags.wallOfForceSegmentSize * 5,\r\n                            width: aseData.flags.wallOfForceSegmentSize * 2\r\n                        },\r\n                        texture: aseData.flags.useWebP\r\n                            ? `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${aseData.flags.color}_H_Thumb.webp`\r\n                            : \"jb2a.wall_of_force.horizontal.\" + aseData.flags.color,\r\n                        type: \"horizontal\"\r\n                    }\r\n                },\r\n                {\r\n                    label: `Horizontal Wall (${aseData.flags.wallOfForceSegmentSize * 10}x${aseData.flags.wallOfForceSegmentSize})`,\r\n                    value: {\r\n                        dimensions: {\r\n                            length: aseData.flags.wallOfForceSegmentSize * 10,\r\n                            width: aseData.flags.wallOfForceSegmentSize\r\n                        },\r\n                        texture: aseData.flags.useWebP\r\n                            ? `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${aseData.flags.color}_H_Thumb.webp`\r\n                            : \"jb2a.wall_of_force.horizontal.\" + aseData.flags.color,\r\n                        type: \"horizontal\"\r\n                    }\r\n                },\r\n                {\r\n                    label: `Vertical Wall (${aseData.flags.wallOfForceSegmentSize * 5}x${aseData.flags.wallOfForceSegmentSize * 2})`,\r\n                    value: {\r\n                        dimensions: {\r\n                            length: aseData.flags.wallOfForceSegmentSize * 5,\r\n                            height: aseData.flags.wallOfForceSegmentSize * 2\r\n                        },\r\n                        texture: aseData.flags.useWebP\r\n                            ? `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${aseData.flags.color}_V_Thumb.webp`\r\n                            : \"jb2a.wall_of_force.vertical.\" + aseData.flags.color,\r\n                        type: \"vertical\"\r\n                    }\r\n                },\r\n                {\r\n                    label: `Vertical Wall (${aseData.flags.wallOfForceSegmentSize * 10}x${aseData.flags.wallOfForceSegmentSize})`,\r\n                    value: {\r\n                        dimensions: {\r\n                            length: aseData.flags.wallOfForceSegmentSize * 10,\r\n                            height: aseData.flags.wallOfForceSegmentSize\r\n                        },\r\n                        texture: aseData.flags.useWebP\r\n                            ? `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${aseData.flags.color}_V_Thumb.webp`\r\n                            : \"jb2a.wall_of_force.vertical.\" + aseData.flags.color,\r\n                        type: \"vertical\"\r\n                    }\r\n                },\r\n                {\r\n                    label: `Place Horizontal Panels (${aseData.flags.wallOfForceSegmentSize}x${aseData.flags.wallOfForceSegmentSize})`,\r\n                    value: {\r\n                        dimensions: {\r\n                            length: aseData.flags.wallOfForceSegmentSize,\r\n                            width: aseData.flags.wallOfForceSegmentSize\r\n                        },\r\n                        texture: aseData.flags.useWebP\r\n                            ? `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${aseData.flags.color}_H_Thumb.webp`\r\n                            : \"jb2a.wall_of_force.horizontal.\" + aseData.flags.color,\r\n                        type: \"h-panels\"\r\n                    }\r\n                },\r\n                {\r\n                    label: `Place Vertical Panels (${aseData.flags.wallOfForceSegmentSize}x${aseData.flags.wallOfForceSegmentSize})`,\r\n                    value: {\r\n                        dimensions: {\r\n                            length: aseData.flags.wallOfForceSegmentSize,\r\n                            width: aseData.flags.wallOfForceSegmentSize\r\n                        },\r\n                        texture: aseData.flags.useWebP\r\n                            ? `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${aseData.flags.color}_V_Thumb.webp`\r\n                            : \"jb2a.wall_of_force.vertical.\" + aseData.flags.color,\r\n                        type: \"v-panels\"\r\n                    }\r\n                }\r\n            ]\r\n        }, 'column');\r\n\r\n        if (!dimensions || !texture) return;\r\n\r\n        aseData.dimensions = dimensions;\r\n        aseData.texture = texture;\r\n\r\n        const templateData = {\r\n            user: game.user.id,\r\n            direction: 0,\r\n            x: 0,\r\n            y: 0,\r\n            color: \"#FFFFFF\",\r\n            fillColor: \"#FFFFFF\",\r\n            flags: {\r\n                tagger: { tags: [`WallOfForce-${aseData.casterActor.id}`] },\r\n                advancedspelleffects: {\r\n                    wallOfForceWallNum: 12,\r\n                    dimensions: aseData.dimensions\r\n                }\r\n            }\r\n        }\r\n\r\n        if (type == \"sphere\") {\r\n            templateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.CIRCLE;\r\n            templateData[\"distance\"] = dimensions.radius;\r\n        } else if (type == \"vertical\") {\r\n            templateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RAY;\r\n            templateData[\"distance\"] = dimensions.length;\r\n        } else if (type == \"horizontal\") {\r\n            templateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE;\r\n            templateData[\"distance\"] = Math.sqrt(Math.pow(dimensions.length, 2) + Math.pow(dimensions.width, 2));\r\n            templateData[\"direction\"] = 180 * Math.atan2(dimensions.length, dimensions.width) / Math.PI;\r\n        }\r\n        if (type == \"h-panels\" || type == \"v-panels\") {\r\n            if (type == \"h-panels\") {\r\n                templateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE;\r\n                templateData[\"distance\"] = Math.sqrt(Math.pow(dimensions.length, 2) + Math.pow(dimensions.width, 2));\r\n                templateData[\"direction\"] = 180 * Math.atan2(dimensions.length, dimensions.width) / Math.PI;\r\n            } else if (type == \"v-panels\") {\r\n                templateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RAY;\r\n                templateData[\"distance\"] = dimensions.length;\r\n            }\r\n            templateData.flags.tagger.tags.push('0');\r\n            let wofPanelDiag = new wofPanelDialog({ aseData: aseData, templateData: templateData, type: type }).render(true);\r\n\r\n            let wofPanelData = await wofPanelDiag.getData();\r\n\r\n            Hooks.once('createMeasuredTemplate', async (template) => {\r\n                await template.setFlag('advancedspelleffects', 'placed', true);\r\n                wallOfForce._placePanels(aseData, template, wofPanelDiag, type);\r\n            });\r\n            console.log(\"template data:\", templateData);\r\n            const doc = new MeasuredTemplateDocument(templateData, { parent: canvas.scene });\r\n            let template = new game.dnd5e.canvas.AbilityTemplate(doc);\r\n            template.actorSheet = aseData.casterActor.sheet;\r\n            template.drawPreview();\r\n\r\n\r\n        }\r\n        else {\r\n            //console.log(\"ASE DATA: \", aseData);\r\n            Hooks.once('createMeasuredTemplate', async (template) => {\r\n                await template.setFlag('advancedspelleffects', 'placed', true);\r\n                wallOfForce._placeWallOfForce(aseData, template);\r\n            });\r\n            //console.log(\"template data:\", templateData);\r\n            const doc = new MeasuredTemplateDocument(templateData, { parent: canvas.scene });\r\n            let template = new game.dnd5e.canvas.AbilityTemplate(doc);\r\n            template.actorSheet = aseData.casterActor.sheet;\r\n            template.drawPreview();\r\n        }\r\n\r\n    }\r\n\r\n    static sourceSquareV(center, distance, direction) {\r\n        const gridSize = canvas.grid.h;\r\n        const length = (distance / 5) * gridSize;\r\n\r\n        const x = center.x + length * Math.cos(direction * Math.PI / 180);\r\n        const y = center.y + length * Math.sin(direction * Math.PI / 180);\r\n        //console.log(`x: ${x}, y: ${y}`);\r\n        return { x: x, y: y };\r\n    }\r\n\r\n    static sourceSquare(center, widthSquares, heightSquares) {\r\n\r\n        const gridSize = canvas.grid.h;\r\n        const h = gridSize * heightSquares;\r\n        const w = gridSize * widthSquares;\r\n\r\n        const bottom = center.y + h / 2;\r\n        const left = center.x - w / 2;\r\n        const top = center.y - h / 2;\r\n        const right = center.x + w / 2;\r\n\r\n        const rightSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 45,\r\n            x: right,\r\n            y: top,\r\n        }));\r\n        const bottomSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 45,\r\n            x: left,\r\n            y: bottom,\r\n        }));\r\n        const leftSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 135,\r\n            x: left,\r\n            y: top,\r\n        }));\r\n        const topSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 225,\r\n            x: right,\r\n            y: top,\r\n        }));\r\n        console.log(\"topSpots: \", topSpots);\r\n        console.log(\"leftSpots: \", leftSpots);\r\n        console.log(\"bottomSpots: \", bottomSpots);\r\n        console.log(\"rightSpots: \", rightSpots);\r\n        const allSpots = [\r\n            ...rightSpots.slice(Math.floor(rightSpots.length / 2)),\r\n            ...bottomSpots,\r\n            ...leftSpots,\r\n            ...topSpots,\r\n            ...rightSpots.slice(0, Math.floor(rightSpots.length / 2)),\r\n        ];\r\n        console.log(\"allSpots: \", allSpots);\r\n        return {\r\n            x: left,\r\n            y: top,\r\n            center,\r\n            top,\r\n            bottom,\r\n            left,\r\n            right,\r\n            h,\r\n            w,\r\n            heightSquares,\r\n            widthSquares,\r\n            allSpots,\r\n        };\r\n    };\r\n    static async _placePanels(aseData, template, panelDiag, type) {\r\n\r\n        wallOfForce._playEffects(aseData, template);\r\n        wallOfForce._placeWalls(template);\r\n        /*console.log(\"wofPanelDiag: \", panelDiag);\r\n        console.log(\"type: \", type);\r\n        console.log(\"aseData: \", aseData);\r\n        console.log(\"template: \", template);*/\r\n\r\n        const gridSize = canvas.grid.h;\r\n        const previousTemplateData = template.data;\r\n        let panelsRemaining = panelDiag.data.aseData.flags.wallOfForcePanelCount;\r\n        //console.log(\"Panels Remaining: \", panelsRemaining);\r\n\r\n        const nextTemplateData = template.toObject();\r\n        nextTemplateData.flags.advancedspelleffects['placed'] = false;\r\n        delete nextTemplateData[\"_id\"];\r\n        //console.log(\"nextTemplateData: \", nextTemplateData);\r\n        //console.log(\"previousTemplateData: \", previousTemplateData);\r\n        nextTemplateData.flags.tagger.tags[1] = (Number(nextTemplateData.flags.tagger.tags[1]) + 1).toString();\r\n        if (panelsRemaining < 2 || !panelDiag.rendered) {\r\n            panelDiag.submit();\r\n            return\r\n        };\r\n\r\n        panelDiag.data.aseData.flags.wallOfForcePanelCount--;\r\n        panelDiag.render(true);\r\n\r\n        let previousTemplateCenter;\r\n        let square;\r\n\r\n        let updateTemplateLocation;\r\n\r\n        if (type == \"h-panels\") {\r\n            if (previousTemplateData.direction == 45) {\r\n                previousTemplateCenter = {\r\n                    x: previousTemplateData.x + (((previousTemplateData.flags.advancedspelleffects.dimensions.length / 5) * canvas.grid.size)) / 2,\r\n                    y: previousTemplateData.y + (((previousTemplateData.flags.advancedspelleffects.dimensions.width / 5) * canvas.grid.size)) / 2\r\n                };\r\n            } else if (previousTemplateData.direction == 135) {\r\n                previousTemplateCenter = {\r\n                    x: previousTemplateData.x - (((previousTemplateData.flags.advancedspelleffects.dimensions.length / 5) * canvas.grid.size)) / 2,\r\n                    y: previousTemplateData.y + (((previousTemplateData.flags.advancedspelleffects.dimensions.width / 5) * canvas.grid.size)) / 2\r\n                };\r\n            } else if (previousTemplateData.direction == 225) {\r\n                previousTemplateCenter = {\r\n                    x: previousTemplateData.x - (((previousTemplateData.flags.advancedspelleffects.dimensions.length / 5) * canvas.grid.size)) / 2,\r\n                    y: previousTemplateData.y - (((previousTemplateData.flags.advancedspelleffects.dimensions.width / 5) * canvas.grid.size)) / 2\r\n                };\r\n            }\r\n            const previousTemplateWidthSquares = previousTemplateData.flags.advancedspelleffects.dimensions.length / 5;\r\n            const previousTemplateHeightSquares = previousTemplateData.flags.advancedspelleffects.dimensions.width / 5;\r\n            square = wallOfForce.sourceSquare({ x: previousTemplateCenter.x, y: previousTemplateCenter.y },\r\n                previousTemplateWidthSquares, previousTemplateHeightSquares);\r\n\r\n\r\n\r\n        } else if (type == \"v-panels\") {\r\n\r\n            square = wallOfForce.sourceSquareV({ x: previousTemplateData.x, y: previousTemplateData.y },\r\n                previousTemplateData.distance, previousTemplateData.direction);\r\n            nextTemplateData.x = square.x;\r\n            nextTemplateData.y = square.y;\r\n        }\r\n        const displayTemplateData = JSON.parse(JSON.stringify(nextTemplateData));\r\n        delete displayTemplateData.flags.advancedspelleffects[\"wallOfForceWallNum\"];\r\n        let displayTemplate = (await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', [displayTemplateData]))[0];\r\n        // console.log(\"square: \", square);\r\n        let currentSpotIndex = 0;\r\n        updateTemplateLocation = async (crosshairs) => {\r\n            //console.log(\"crosshairs: \", crosshairs);\r\n            while (crosshairs.inFlight) {\r\n                if (!panelDiag.rendered) {\r\n                    crosshairs.inFlight = false;\r\n                    return;\r\n                }\r\n                await warpgate.wait(100);\r\n                //console.log(displayTemplate);\r\n                if (!displayTemplate) return;\r\n                const verticalTemplate = displayTemplate.data.t == CONST.MEASURED_TEMPLATE_TYPES.RAY;\r\n                //console.log(\"Vertical Template:\", verticalTemplate);\r\n                let ray;\r\n                let angle;\r\n                if (!verticalTemplate) {\r\n                    const totalSpots = square.allSpots.length;\r\n                    const radToNormalizedAngle = (rad) => {\r\n                        let angle = (rad * 180 / Math.PI) % 360;\r\n\r\n                        // offset the angle for even-sided tokens, because it's centered in the grid it's just wonky without the offset\r\n                        if (square.heightSquares % 2 === 1 && square.widthSquares % 2 === 1) {\r\n                            angle -= (360 / totalSpots) / 2;\r\n                        }\r\n                        const normalizedAngle = Math.round(angle / (360 / totalSpots)) * (360 / totalSpots);\r\n                        return normalizedAngle < 0\r\n                            ? normalizedAngle + 360\r\n                            : normalizedAngle;\r\n                    }\r\n\r\n                    ray = new Ray(square.center, crosshairs);\r\n                    angle = radToNormalizedAngle(ray.angle);\r\n                    const spotIndex = Math.ceil(angle / 360 * totalSpots);\r\n\r\n                    if (spotIndex === currentSpotIndex) {\r\n                        continue;\r\n                    }\r\n\r\n                    currentSpotIndex = spotIndex;\r\n                    const spot = square.allSpots[currentSpotIndex];\r\n\r\n                    if (!displayTemplate) return;\r\n                    await displayTemplate.update({ ...spot });\r\n                } else {\r\n                    ray = new Ray(square, crosshairs);\r\n                    angle = (ray.angle * 180 / Math.PI);\r\n\r\n                    if (angle == displayTemplate.data.direction) {\r\n                        continue;\r\n                    }\r\n                    if (!displayTemplate) return;\r\n                    await displayTemplate.update({ direction: angle });\r\n                }\r\n            }\r\n        }\r\n\r\n        const targetConfig = {\r\n            drawIcon: false,\r\n            drawOutline: false,\r\n            interval: 20\r\n        }\r\n        const rotateCrosshairs = await warpgate.crosshairs.show(\r\n            targetConfig,\r\n            {\r\n                show: updateTemplateLocation\r\n            });\r\n        if (rotateCrosshairs.cancelled) {\r\n            if (canvas.scene.templates.get(displayTemplate.id)) {\r\n                await displayTemplate.delete();\r\n            }\r\n            game.user.updateTokenTargets();\r\n            panelDiag.submit();\r\n            return;\r\n        }\r\n        const newFlags = {\r\n            flags: {\r\n                advancedspelleffects: {\r\n                    placed: true\r\n                }\r\n            }\r\n        }\r\n        if (type == \"v-panels\") {\r\n            newFlags.flags.advancedspelleffects[\"wallOfForceWallNum\"] = nextTemplateData.flags.advancedspelleffects[\"wallOfForceWallNum\"]\r\n        }\r\n\r\n        await displayTemplate.update(newFlags);\r\n        wallOfForce._placePanels(aseData, displayTemplate, panelDiag, type);\r\n\r\n    }\r\n\r\n    static async _placeWallOfForce(aseData, templateDocument) {\r\n\r\n        wallOfForce._playEffects(aseData, templateDocument);\r\n        wallOfForce._placeWalls(templateDocument);\r\n\r\n    }\r\n\r\n    static async _placeWalls(templateDocument, deleteOldWalls = false) {\r\n\r\n        if (templateDocument.data.t === CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE) return;\r\n\r\n        if (deleteOldWalls) {\r\n            const walls = Tagger.getByTag([`WallOfForce-Wall${templateDocument.id}`]).map(wall => wall.id);\r\n            if (walls.length) {\r\n                await canvas.scene.deleteEmbeddedDocuments(\"Wall\", walls);\r\n            }\r\n        }\r\n\r\n        const template = templateDocument.object;\r\n\r\n        const walls = [];\r\n\r\n        if (templateDocument.data.t === CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n\r\n            const placedX = template.x;\r\n            const placedY = template.y;\r\n\r\n            let wall_number = 12;\r\n            let wall_angles = 2 * Math.PI / wall_number\r\n\r\n            let outerCircleRadius = template.shape.radius;\r\n\r\n            let lastPoint = false;\r\n            let firstPoint;\r\n            for (let i = 0; i < wall_number; i++) {\r\n                const currentPoint = [\r\n                    placedX + outerCircleRadius * Math.cos(i * wall_angles),\r\n                    placedY + outerCircleRadius * Math.sin(i * wall_angles)\r\n                ]\r\n                if (lastPoint) {\r\n                    walls.push({\r\n                        c: [...lastPoint, ...currentPoint],\r\n                        flags: { tagger: { tags: [`WallOfForce-Wall${templateDocument.id}`] } },\r\n                        move: 20,\r\n                        sight: 0,\r\n                        light: 0,\r\n                        sound: 0\r\n                    })\r\n                }\r\n                lastPoint = [...currentPoint]\r\n                if (!firstPoint) firstPoint = [...currentPoint]\r\n            }\r\n\r\n            walls.push({\r\n                c: [...lastPoint, ...firstPoint],\r\n                flags: { tagger: { tags: [`WallOfForce-Wall${templateDocument.id}`] } },\r\n                move: 20,\r\n                sight: 0,\r\n                light: 0,\r\n                sound: 0\r\n            })\r\n\r\n        } else {\r\n\r\n            const startPoint = template.ray.A;\r\n            const endPoint = template.ray.B;\r\n\r\n            walls.push({\r\n                c: [startPoint.x, startPoint.y, endPoint.x, endPoint.y],\r\n                flags: {\r\n                    tagger: { tags: [`WallOfForce-Wall${templateDocument.id}`] },\r\n                    wallHeight: {\r\n                        wallHeightTop: templateDocument.getFlag('advancedspelleffects', 'dimensions').height,\r\n                        wallHeightBottom: 0\r\n                    }\r\n                },\r\n                move: 20,\r\n                sight: 0,\r\n                light: 0,\r\n                sound: 0\r\n            })\r\n\r\n        }\r\n\r\n        await aseSocket.executeAsGM(\"placeWalls\", walls);\r\n\r\n    }\r\n\r\n    static _playEffects(aseData, template) {\r\n\r\n        if (template.data.t === CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n\r\n            new Sequence()\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .scaleToObject()\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .zIndex(1000)\r\n                .persist()\r\n                .play()\r\n\r\n        } else if (template.data.t === CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE) {\r\n\r\n            new Sequence()\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .scaleToObject()\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .tilingTexture({\r\n                    x: aseData.flags.wallOfForceSegmentSize / 10,\r\n                    y: aseData.flags.wallOfForceSegmentSize / 10\r\n                })\r\n                .belowTokens()\r\n                .zIndex(-1000)\r\n                .persist()\r\n                .play()\r\n\r\n        } else {\r\n            new Sequence()\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .stretchTo(template, { attachTo: true, onlyX: true })\r\n                .tilingTexture({\r\n                    x: aseData.flags.wallOfForceSegmentSize / 10\r\n                })\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .persist()\r\n                .play()\r\n        }\r\n\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallOfForceRadiusLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallOfForceRadiusTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallOfForceRadius',\r\n            flagName: 'wallOfForceRadius',\r\n            flagValue: currFlags.wallOfForceRadius ?? 10,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallOfForceSegmentSizeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallOfForceSegmentSizeTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallOfForceSegmentSize',\r\n            flagName: 'wallOfForceSegmentSize',\r\n            flagValue: currFlags.wallOfForceSegmentSize ?? 10,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallOfForcePanelCountLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallOfForcePanelCountTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallOfForcePanelCount',\r\n            flagName: 'wallOfForcePanelCount',\r\n            flagValue: currFlags.wallOfForcePanelCount ?? 10,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallOfForceColorLabel\"),\r\n            type: 'dropdown',\r\n            options: utilFunctions.getDBOptions('jb2a.wall_of_force.horizontal'),\r\n            name: 'flags.advancedspelleffects.effectOptions.color',\r\n            flagName: 'color',\r\n            flagValue: currFlags.color ?? 'blue',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallOfForceUseWebPLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallOfForceUseWebPTooltip\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.useWebP',\r\n            flagName: 'useWebP',\r\n            flagValue: currFlags.useWebP ?? false,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true,\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","export default class baseSpellClass {\r\n    static registerHooks() {}\r\n    static async getRequiredSettings() {\r\n        return {\r\n            animOptions: [],\r\n            spellOptions: [],\r\n            soundOptions: [],\r\n        }\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class wallPanelDialog extends FormApplication {\r\n    constructor(options = { aseData: {}, templateData: {}, type: '' }) {\r\n        super(options);\r\n        foundry.utils.mergeObject(this.options, options);\r\n        this.data = {};\r\n        this.data.aseData = this.options.aseData;\r\n        this.data.templateData = this.options.templateData;\r\n        this.data.type = this.options.type;\r\n        //console.log('Wall Panel Dialog Data: ', this.data);\r\n    }\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            template: './modules/advancedspelleffects/src/templates/wall-panel-dialog.html',\r\n            id: 'wall-panel-dialog',\r\n            title: game.i18n.localize(\"ASE.WallPanelTitle\"),\r\n            resizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            left: game.user?.getFlag(\"advancedspelleffects\", \"wallPanelDialogPos.left\") ?? \"auto\",\r\n            top: game.user?.getFlag(\"advancedspelleffects\", \"wallPanelDialogPos.top\") ?? \"auto\",\r\n            submitOnClose: true,\r\n            close: () => { ui.notify }\r\n        });\r\n    }\r\n    async getData() {\r\n        return { data: this.data };\r\n    }\r\n    async _updateObject(event, formData) {\r\n        await aseSocket.executeAsGM(\"updateFlag\", game.user.id, \"wallPanelDialogPos\", { left: this.position.left, top: this.position.top });\r\n    }\r\n}\r\nexport default wallPanelDialog;","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nimport baseSpellClass from \"./baseSpellClass.js\";\r\nimport { wallPanelDialog } from \"../apps/wall-panel-dialog.js\";\r\n\r\nexport class wallOfFire extends baseSpellClass {\r\n    constructor(data) {\r\n        super();\r\n        this.data = data;\r\n\r\n        this.actor = game.actors.get(this.data.actor.id);\r\n        this.token = canvas.tokens.get(this.data.tokenId);\r\n        this.item = this.data.item;\r\n        this.itemCardId = this.data.itemCardId;\r\n        this.itemLevel = this.data.itemLevel;\r\n        this.effectOptions = this.item.getFlag(\"advancedspelleffects\", \"effectOptions\") ?? {};\r\n        //console.log('effectOptions:', this.effectOptions);\r\n        this.wallType = \"fire\";\r\n        this.wallCategory = \"wall\";\r\n        this.wallOptions = {};\r\n        this.chatMessage = {};\r\n        this.baseTemplateData = {\r\n            user: game.user.id,\r\n            direction: 0,\r\n            x: 0,\r\n            y: 0,\r\n            color: \"#FFFFFF\",\r\n            fillColor: \"#FFFFFF\",\r\n            flags: {\r\n                tagger: { tags: [`wallSpell-${this.wallType}-${this.actor.id}`] },\r\n                advancedspelleffects: {\r\n                    wallSpellWallNum: 12,\r\n                    dimensions: {},\r\n                    wallType: this.wallType,\r\n                    length: this.effectOptions.length,\r\n                    wallOperationalData: {},\r\n                    wallEffectData: this.effectOptions,\r\n                    wallName: this.item.name\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async cast() {\r\n        this._setWallOptions();\r\n        //console.log(this);\r\n        const { dimensions, texture, type } = await warpgate.buttonDialog(this._getDialogData(), 'column');\r\n        //console.log('dimensions:', dimensions);\r\n        //console.log('texture:', texture);\r\n        //console.log('type:', type);\r\n        if (!dimensions || !texture) return;\r\n        const chatMessage = await game.messages.get(this.itemCardId);\r\n        if (chatMessage) {\r\n            this.chatMessage = chatMessage.id;\r\n        }\r\n        this._setBaseTemplateData(dimensions, type);\r\n\r\n        const aseData = {\r\n            itemLevel: this.itemLevel,\r\n            flags: this.effectOptions,\r\n            caster: this.token,\r\n            casterActor: this.actor,\r\n            dimensions: dimensions,\r\n            texture: texture,\r\n        }\r\n        //console.log(\"Dialog return type\", type);\r\n        Hooks.once('createMeasuredTemplate', async (template) => {\r\n\r\n            const direction = template.data.direction;\r\n            const templateDimensions = template.getFlag('advancedspelleffects', 'dimensions') ?? {};\r\n            const templateLength = templateDimensions?.length ?? 0;\r\n            if ((direction == 0 || direction == 180 || direction == 90 || direction == 270) && templateLength > 0) {\r\n                await template.update({ distance: templateLength, flags: { advancedspelleffects: { placed: true } } });\r\n            } else {\r\n                await template.setFlag('advancedspelleffects', 'placed', true);\r\n            }\r\n\r\n            wallOfFire.playEffects(aseData, template);\r\n\r\n            await wallOfFire.pickFireSide(template);\r\n            \r\n            /** ----------------- DO DAMAGE HERE ----------------- \r\n             * \r\n             * \r\n             * \r\n            */\r\n             wallOfFire.handleDamage(template);\r\n        });\r\n        const doc = new MeasuredTemplateDocument(this.baseTemplateData, { parent: canvas.scene });\r\n        let template = new game.dnd5e.canvas.AbilityTemplate(doc);\r\n        template.actorSheet = aseData.casterActor.sheet;\r\n        template.drawPreview();\r\n        \r\n    }\r\n\r\n\r\n    _setWallOptions() {\r\n        //console.log('wallCategory:', this.wallCategory);\r\n        //console.log('effectOptions:', this.effectOptions);\r\n        this.wallOptions = {\r\n            wallCategory: \"wall\",\r\n            rect: {\r\n                dimensions: {\r\n                    length: this.effectOptions.wallLength,\r\n                    width: this.effectOptions.wallHeight\r\n                }\r\n            },\r\n            circle: {\r\n                dimensions: {\r\n                    radius: this.effectOptions.wallRadius\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    _getDialogData() {\r\n        const wallType = this.wallType;\r\n        const wallOptions = this.wallOptions;\r\n        //console.log('wallOptions:', wallOptions);\r\n        const wallCategory = this.wallCategory;\r\n        const effectOptions = this.effectOptions;\r\n        const useWebP = effectOptions.useWebP ?? false;\r\n        let dialogData = {\r\n            title: `Choose your Wall of ${this.wallType} shape`,\r\n            buttons: [{\r\n                label: `Sphere/Dome/Ring(${wallOptions.circle.dimensions.radius}ft radius)`,\r\n                value: {\r\n                    dimensions: wallOptions.circle.dimensions,\r\n                    texture: this._getTexture({ type: 'circle', effectData: this.effectOptions }, wallType, useWebP),\r\n                    type: \"circle\"\r\n                }\r\n            }, {\r\n                label: `Wall(${wallOptions.rect.dimensions.length}ft x ${wallOptions.rect.dimensions.width}ft)`,\r\n                value: {\r\n                    dimensions: wallOptions.rect.dimensions,\r\n                    texture: this._getTexture({ type: 'wall', effectData: this.effectOptions }, wallType, useWebP),\r\n                    type: \"ray\"\r\n                }\r\n            }]\r\n        };\r\n        return dialogData;\r\n\r\n    }\r\n\r\n    _setBaseTemplateData(dimensions, type) {\r\n        this.baseTemplateData.flags.advancedspelleffects.dimensions = dimensions;\r\n        this.baseTemplateData.flags.tagger.tags.push('0');\r\n        if (type == \"circle\") {\r\n            this.baseTemplateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.CIRCLE;\r\n            this.baseTemplateData[\"distance\"] = dimensions.radius;\r\n        } else if (type == \"ray\") {\r\n            this.baseTemplateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RAY;\r\n            this.baseTemplateData[\"distance\"] = Math.sqrt(Math.pow(dimensions.length, 2) + Math.pow(dimensions.width, 2));\r\n            //this.baseTemplateData[\"direction\"] = 180 * Math.atan2(dimensions.length, dimensions.width) / Math.PI;\r\n            this.baseTemplateData[\"width\"] = this.effectOptions.wallWidth;\r\n        } \r\n\r\n        let damageRoll;\r\n        if (this.effectOptions.levelScaling) {\r\n            damageRoll = `${Number(this.itemLevel) + 1}d8`;\r\n        } else {\r\n            damageRoll = `${this.effectOptions.dmgDieCount}${this.effectOptions.dmgDie}${this.effectOptions.dmgMod > 0 ? ` + ${this.effectOptions.dmgMod}` : ''}`;\r\n\r\n        }\r\n\r\n        this.baseTemplateData.flags.advancedspelleffects.wallOperationalData = {\r\n            savingThrowOnCast: true,\r\n            savingThrow: 'dex',\r\n            halfDamOnSave: true,\r\n            damage: damageRoll,\r\n            damageType: 'fire',\r\n            damageOnTouch: true,\r\n            savingThrowOnTouch: false,\r\n            checkForTouch: true,\r\n            damageSide: '',\r\n            damageInArea: true,\r\n            damageArea: {},\r\n            damageOnCast: true,\r\n            savingThrowDC: this.actor.data.data.attributes.spelldc ?? 0,\r\n            chatMessage: this.chatMessage,\r\n            item: this.item.id,\r\n            casterActor: this.actor.id,\r\n            range: this.effectOptions?.range ?? 10,\r\n            casterToken: this.token.id\r\n        }\r\n\r\n    }\r\n\r\n    _getTexture(options, wallType, useWebP = false) {\r\n        let texture = \"\";\r\n        //console.log('options:', options);\r\n        if (options.type == \"circle\") {\r\n            if (useWebP) {\r\n                texture = `modules/jb2a_patreon/Library/Generic/Fire/FireRing_01_Circle_${options.effectData.fireColor == \"yellow\" ? \"red\" : options.effectData.fireColor}_Thumb.webp`;\r\n            } else {\r\n                texture = `jb2a.fire_ring.900px.${options.effectData.fireColor == \"yellow\" ? \"red\" : options.effectData.fireColor}`;\r\n            }\r\n        } else if (options.type == \"wall\") {\r\n            if (useWebP) {\r\n                texture = `modules/jb2a_patreon/Library/4th_Level/Wall_Of_Fire/WallOfFire_01_${options.effectData.fireColor}_Thumb.webp`;\r\n            } else {\r\n                texture = `jb2a.wall_of_fire.300x100.${options.effectData.fireColor}`;\r\n            }\r\n        }\r\n        return texture;\r\n    }\r\n\r\n    static registerHooks() {\r\n        if (!game.user.isGM) return;\r\n        Hooks.on(\"preUpdateToken\", wallOfFire.preUpdateToken);\r\n        Hooks.on(\"updateCombat\", wallOfFire.updateCombat);\r\n        return;\r\n    }\r\n\r\n    static async updateCombat(combat) {\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(\"Is first GM: \", isGM);\r\n        if (!isGM) return;\r\n        //console.log(\"Updating combat: \", combat);\r\n        const token = canvas.tokens.get(combat.previous.tokenId);\r\n        if (!token) return;\r\n        const grid = canvas?.scene?.data.grid;\r\n        if (!grid) return false;\r\n        const tokenPos = { x: token.data.x, y: token.data.y };\r\n        await token.document.unsetFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\");\r\n        const wallTemplates = canvas.templates.placeables.filter(template =>\r\n        (template.document.getFlag('advancedspelleffects', 'wallOperationalData.damageOnTouch') == true\r\n            || template.document.getFlag('advancedspelleffects', 'wallOperationalData.savingThrowOnTouch') == true));\r\n        //console.log(\"wall templates: \", wallTemplates);\r\n        if (wallTemplates.length && wallTemplates.length > 0) {\r\n            for await (let wallTemplate of wallTemplates) {\r\n                const templateDocument = wallTemplate.document;\r\n                if (!templateDocument) return;\r\n                //console.log(templateDocument.data);\r\n                const templateData = templateDocument.data;\r\n                if (!templateData) return;\r\n                const aseData = templateDocument.getFlag(\"advancedspelleffects\", 'wallOperationalData');\r\n                const aseEffectData = templateDocument.getFlag(\"advancedspelleffects\", 'wallEffectData');\r\n                if (!aseData || !aseData.damageOnTouch) return;\r\n                if (!aseData.checkForTouch) return;\r\n                const wallData = {\r\n                    wallName: templateDocument.getFlag(\"advancedspelleffects\", \"wallName\") ?? \"\",\r\n                    wallTemplateId: templateDocument.id,\r\n                    wallType: templateDocument.getFlag(\"advancedspelleffects\", 'wallType') ?? '',\r\n                    wallOperationalData: aseData,\r\n                    wallEffectData: aseEffectData,\r\n                }\r\n                const wallName = templateDocument.getFlag(\"advancedspelleffects\", \"wallName\") ?? \"\";\r\n                const mTemplate = templateDocument.object;\r\n                const templateDetails = { x: templateDocument.data.x, y: templateDocument.data.y, shape: templateData.t, distance: mTemplate.data.distance };\r\n                //console.log(\"Wall template details: \", templateDetails);\r\n                if (templateDetails.shape == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n                    //console.log(\"Circle template detected...\");\r\n                    let templateCenter = { x: templateDetails.x, y: templateDetails.y };\r\n                    let templateRadius = (templateDetails.distance / 5) * grid;\r\n                    const sideToCheck = templateDocument.getFlag(\"advancedspelleffects\", \"wallOperationalData.damageSide\");\r\n                    //console.log(\"Side to check: \", sideToCheck);\r\n\r\n                    const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n                    const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n\r\n                    widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                        for (let y = startY; y < token.data.height; y++) {\r\n                            const currGrid = {\r\n                                x: tokenPos.x + x * grid,\r\n                                y: tokenPos.y + y * grid,\r\n                            };\r\n                            let inRange = false;\r\n                            if (sideToCheck == \"inside\") {\r\n                                inRange = utilFunctions.isPointInCircle(templateCenter, currGrid, 0, templateRadius);\r\n                            } else if (sideToCheck == \"outside\") {\r\n                                const outerRadius = templateRadius + ((aseData.range / 5) * grid);\r\n                                inRange = utilFunctions.isPointInCircle(templateCenter, currGrid, templateRadius, outerRadius);\r\n                            }\r\n                            if (inRange) {\r\n                                 /** ----------------- DO DAMAGE HERE ----------------- \r\n                                 * \r\n                                 * \r\n                                 * \r\n                                */\r\n                                console.log(\"In range and on side...\", token.name);\r\n                                break widthLoop;\r\n                            } else {\r\n                                console.log(\"Token not in range of wall circle: \", token.name);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    let templatePointA = { x: templateDetails.x, y: templateDetails.y };\r\n                    const templateAngle = (templateData.direction) * (Math.PI / 180.0);\r\n                    const templateLength = ((templateData.distance) * grid) / 5.0;\r\n                    const templatePointBX = templatePointA.x + (templateLength * Math.cos(templateAngle));\r\n                    const templatePointBY = templatePointA.y + (templateLength * Math.sin(templateAngle));\r\n                    let templatePointB = { x: templatePointBX, y: templatePointBY };\r\n                    if ((templatePointA.x > templatePointB.x && templatePointA.y > templatePointB.y) || (templatePointA.x < templatePointB.x && templatePointA.y > templatePointB.y)) {\r\n                        const temp = templatePointA;\r\n                        templatePointA = templatePointB;\r\n                        templatePointB = temp;\r\n                    } else if (templatePointA.x == templatePointB.x) {\r\n                        if (templatePointA.y > templatePointB.y) {\r\n                            const temp = templatePointA;\r\n                            templatePointA = templatePointB;\r\n                            templatePointB = temp;\r\n                        }\r\n                    } else if (templatePointA.y == templatePointB.y) {\r\n                        if (templatePointA.x > templatePointB.x) {\r\n                            const temp = templatePointA;\r\n                            templatePointA = templatePointB;\r\n                            templatePointB = temp;\r\n                        }\r\n                    }\r\n                    //console.log(\"Template Point A: \", templatePointA);\r\n                    //console.log(\"Template Point B: \", templatePointB);\r\n                    const sideToCheck = templateDocument.getFlag(\"advancedspelleffects\", \"wallOperationalData.damageSide\");\r\n                    //console.log(\"Side to check: \", sideToCheck);\r\n                    const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n                    const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n\r\n                    widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                        for (let y = startY; y < token.data.height; y++) {\r\n                            const currGrid = {\r\n                                x: tokenPos.x + x * grid,\r\n                                y: tokenPos.y + y * grid,\r\n                            };\r\n                            const inRange = utilFunctions.isPointNearLine(templatePointA, templatePointB, currGrid, (aseData.range / 5) * grid);\r\n                            if (inRange) {\r\n                                let isOnSide = false;\r\n                                if (sideToCheck == 'bottom' || sideToCheck == 'left') {\r\n                                    isOnSide = utilFunctions.isPointOnLeft(templatePointA, templatePointB, currGrid);\r\n                                } else if (sideToCheck == 'top' || sideToCheck == 'right') {\r\n                                    isOnSide = utilFunctions.isPointOnLeft(templatePointB, templatePointA, currGrid);\r\n                                }\r\n                                if (isOnSide) {\r\n                                     /** ----------------- DO DAMAGE HERE ----------------- \r\n                                     * \r\n                                     * \r\n                                     * \r\n                                    */\r\n                                      console.log(\"In range and on side...\", token.name);\r\n                                    break widthLoop;\r\n                                } else {\r\n                                    console.log(\"Token not on side of wall: \", token.name);\r\n                                }\r\n                            } else {\r\n                                console.log(\"Token not in range of wall: \", token.name);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    static async preUpdateToken(tokenDocument, updateData) {\r\n        const isGM = utilFunctions.isFirstGM();\r\n        if (!isGM) return;\r\n\r\n        if ((!updateData.x && !updateData.y)) return;\r\n        const token = tokenDocument;\r\n        const grid = canvas?.scene?.data.grid;\r\n        if (!grid) return false;\r\n\r\n        const oldPos = { x: tokenDocument.data.x, y: tokenDocument.data.y };\r\n        let newPos = { x: 0, y: 0 };\r\n        newPos.x = (updateData.x) ? updateData.x : tokenDocument.data.x;\r\n        newPos.y = (updateData.y) ? updateData.y : tokenDocument.data.y;\r\n        const movementRay = new Ray(oldPos, newPos);\r\n\r\n        const templates = Array.from(canvas?.scene?.templates ?? {});\r\n        if (templates.length == 0) return;\r\n        let templateDocument = {};\r\n\r\n        let wallsTouched = token.getFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\") ?? [];\r\n        let wallName = \"\";\r\n        for (let i = 0; i < templates.length; i++) {\r\n\r\n            templateDocument = templates[i];\r\n            const templateData = templateDocument.data;\r\n            if (!templateData) return;\r\n            const aseData = templateDocument.getFlag(\"advancedspelleffects\", 'wallOperationalData');\r\n            const aseEffectData = templateDocument.getFlag(\"advancedspelleffects\", 'wallEffectData');\r\n\r\n            wallName = templateDocument.getFlag(\"advancedspelleffects\", \"wallName\") ?? \"\";\r\n            const mTemplate = templateDocument.object;\r\n            const templateDetails = { x: templateDocument.data.x, y: templateDocument.data.y, shape: mTemplate.shape, distance: mTemplate.data.distance };\r\n            const templatePointA = { x: templateDetails.x, y: templateDetails.y };\r\n            const templateAngle = (templateData.direction) * (Math.PI / 180.0);\r\n            const templateLength = ((templateData.distance) * grid) / 5.0;\r\n            const templatePointBX = templatePointA.x + (templateLength * Math.cos(templateAngle));\r\n            const templatePointBY = templatePointA.y + (templateLength * Math.sin(templateAngle));\r\n            const templatePointB = { x: templatePointBX, y: templatePointBY };\r\n\r\n            const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n            const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n\r\n            widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                for (let y = startY; y < token.data.height; y++) {\r\n\r\n                    const currGrid = {\r\n                        x: newPos.x + x * grid - templatePointA.x,\r\n                        y: newPos.y + y * grid - templatePointA.y,\r\n                    };\r\n                    const oldCurrGrid = {\r\n                        x: oldPos.x + x * grid - templatePointA.x,\r\n                        y: oldPos.y + y * grid - templatePointA.y,\r\n                    }\r\n                    let previousContains = templateDetails.shape?.contains(oldCurrGrid.x, oldCurrGrid.y);\r\n                    let contains = templateDetails.shape?.contains(currGrid.x, currGrid.y);\r\n                    if (templateData.t == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n                        previousContains = false;\r\n                        contains = false;\r\n                    }\r\n                    let crossed = false;\r\n                    if (!contains) {\r\n                        const dragCoordOld = {\r\n                            x: movementRay.A.x + x * grid,\r\n                            y: movementRay.A.y + y * grid,\r\n                        };\r\n                        const dragCoordNew = {\r\n                            x: movementRay.B.x + x * grid,\r\n                            y: movementRay.B.y + y * grid,\r\n                        };\r\n                        //console.log(\"Drag Coord Old: \", dragCoordOld);\r\n                        //console.log(\"Drag Coord New: \", dragCoordNew);\r\n                        if (templateData.t == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n\r\n                            crossed = utilFunctions.lineCrossesCircle(dragCoordOld, dragCoordNew, templatePointA, (templateDetails.distance / 5) * grid);\r\n                        } else {\r\n                            crossed = utilFunctions.lineCrossesLine(dragCoordOld, dragCoordNew, templatePointA, templatePointB);\r\n                        }\r\n                    }\r\n\r\n                    if (((previousContains && contains) || (!previousContains)) && (crossed || contains)) {\r\n                        //console.log(\"Token touched wall!\");\r\n                        if (wallsTouched.includes(templateDocument.id)) {\r\n                            console.log(`${token.name} has already been effected by this ${wallName} this turn - ${templateDocument.id}`);\r\n                            ui.notifications.info(game.i18n.format(\"ASE.WallSpellAlreadyEffected\", { name: token.name, wallName: wallName }));\r\n                            break widthLoop;\r\n                        } else {\r\n                            console.log(`${token.name} touched ${wallName} - ${templateDocument.id}`);\r\n                            ui.notifications.info(game.i18n.format(\"ASE.WallSpellTouchingWall\", { name: token.name, wallName: wallName }));\r\n                            wallsTouched.push(templateDocument.id);\r\n                            const wallData = {\r\n                                wallName: wallName,\r\n                                wallTemplateId: templateDocument.id,\r\n                                wallType: templateDocument.getFlag(\"advancedspelleffects\", 'wallType') ?? '',\r\n                                wallOperationalData: aseData,\r\n                                wallEffectData: aseEffectData,\r\n                            }\r\n                            //await token.setFlag(\"advancedspelleffects\", \"wallTouchedData\", tokenFlagData);\r\n                            //await wallSpell.activateWallEffect(token, wallData);\r\n                            /** ----------------- DO DAMAGE HERE ----------------- \r\n                             * \r\n                             * \r\n                             * \r\n                            */\r\n                             console.log(\"In range and on side...\", token.name);\r\n                            break widthLoop;\r\n                        }\r\n                    } else {\r\n                        //console.log(\"Token did not cross template area...\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        await token.setFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\", wallsTouched);\r\n    }\r\n    /*\r\n    static async activateWallEffect(token, wallData) {\r\n        //console.log(\"Activating Wall Effect...\");\r\n        //console.log(\"Token: \", token);\r\n        //console.log(\"Wall Data: \", wallData);\r\n        const wallOperationalData = wallData.wallOperationalData;\r\n        const wallEffectData = wallData.wallEffectData;\r\n        function addTokenToText(token, damageTotal) {\r\n\r\n            return `<div class=\"midi-qol-flex-container\">\r\n      <div class=\"midi-qol-target-npc-GM midi-qol-target-name\" id=\"${token.id}\"> <b>${token.name}</b></div>\r\n      <div class=\"midi-qol-target-npc-Player midi-qol-target-name\" id=\"${token.id}\" style=\"display: none;\"> <b>${token.name}</b></div>\r\n      <div>\r\n      ${game.i18n.format(\"ASE.TookDamageMessage\", { damageTotal: damageTotal })}\r\n        \r\n      </div>\r\n      <div><img src=\"${token?.data?.img}\" height=\"30\" style=\"border:0px\"></div>\r\n    </div>`;\r\n\r\n        }\r\n\r\n        const casterActor = game.actors.get(wallOperationalData.casterActor);\r\n        const casterToken = canvas.tokens.get(wallOperationalData.casterToken);\r\n        const spellItem = casterActor.items.get(wallOperationalData.item);\r\n        //console.log(\"Caster Token: \", casterToken);\r\n        //console.log(\"Caster Actor: \", casterActor);\r\n        //console.log(\"Spell Item: \", spellItem);\r\n\r\n        let itemData = spellItem.data;\r\n        itemData.data.components.concentration = false;\r\n\r\n        if (utilFunctions.isMidiActive()) {\r\n            const damageRoll = await new Roll(wallOperationalData.damage).evaluate({ async: true });\r\n            //console.log(damageRoll);\r\n            if (game.modules.get(\"dice-so-nice\")?.active) {\r\n                game.dice3d?.showForRoll(damageRoll);\r\n            }\r\n            let midiData;\r\n            midiData = await new MidiQOL.DamageOnlyWorkflow(casterActor, casterToken.document, damageRoll.total, wallOperationalData.damageType, [token],\r\n                damageRoll, {\r\n                flavor: `${wallData.wallName} - Damage Roll (${wallOperationalData.damage} ${wallOperationalData.damageType})`,\r\n                itemCardId: \"new\",\r\n                itemData: spellItem.data\r\n            });\r\n            const chatMessage = await game.messages.get(midiData.itemCardId);\r\n            let chatMessageContent = await duplicate(chatMessage.data.content);\r\n            let newChatmessageContent = $(chatMessageContent);\r\n\r\n            newChatmessageContent.find(\".midi-qol-hits-display\").empty();\r\n            newChatmessageContent.find(\".midi-qol-hits-display\").append(\r\n                $(addTokenToText(token, damageRoll.total))\r\n            );\r\n            await chatMessage.update({ content: newChatmessageContent.prop('outerHTML') });\r\n            await ui.chat.scrollBottom();\r\n        }\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(wallEffectData.wallSpellDmgSound)\r\n            .delay(Number(wallEffectData.wallSpellDmgSoundDelay) ?? 0)\r\n            .volume(wallEffectData.wallSpellDmgVolume ?? 0.5)\r\n            .playIf(wallEffectData.wallSpellDmgSound && wallEffectData.wallSpellDmgSound != \"\")\r\n            .effect()\r\n            .file(`jb2a.impact.004.${wallEffectData?.fireImpactColor ?? 'orange'}`)\r\n            .attachTo(token)\r\n            .randomRotation()\r\n            .scaleIn(0.5, 200)\r\n            .scaleToObject()\r\n            .animateProperty(\"sprite\", \"rotation\", { duration: 1000, from: 0, to: 45 })\r\n            .randomOffset(0.5)\r\n            .repeats(4, 100, 250)\r\n            .play()\r\n        return;\r\n    }\r\n    */\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        let wallSpellTemplates = Tagger.getByTag(`wallSpell-fire-${casterActor.id}`);\r\n        let wsTemplateIds = [];\r\n        if (wallSpellTemplates.length > 0) {\r\n            wallSpellTemplates.forEach(template => {\r\n                wsTemplateIds.push(template.id);\r\n            });\r\n            await aseSocket.executeAsGM(\"deleteTemplates\", wsTemplateIds);\r\n        }\r\n        //loop through every token and remove the templateID from the flag wallTouchedData.wallsTouched that matches wsTemplateIds\r\n        const tokens = canvas.tokens.placeables;\r\n        let tokenDocument = {};\r\n        let wallsTouched = [];\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            tokenDocument = tokens[i].document;\r\n            wallsTouched = tokenDocument.getFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\");\r\n            if (!wallsTouched || wallsTouched.length == 0) continue;\r\n            wallsTouched = wallsTouched.filter(wallId => !wsTemplateIds.includes(wallId));\r\n            await tokenDocument.setFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\", wallsTouched);\r\n        }\r\n    }\r\n\r\n    static async pickFireSide(templateDocument) {\r\n        const wallData = templateDocument?.data;\r\n        if (!wallData) return;\r\n        let buttonDialogData;\r\n        if (wallData.t == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n            buttonDialogData = {\r\n                title: \"Pick dome/ring/sphere damaging side\",\r\n                buttons: [\r\n                    {\r\n                        label: \"Inside\",\r\n                        value: 'inside'\r\n                    },\r\n                    {\r\n                        label: \"Outside\",\r\n                        value: 'outside'\r\n                    },\r\n                ]\r\n            };\r\n        } else {\r\n            const direction = wallData.direction;\r\n            if ((direction == 0 || direction == 180)) {\r\n                buttonDialogData = {\r\n                    title: \"Pick wall damaging side\",\r\n                    buttons: [\r\n                        {\r\n                            label: \"Top\",\r\n                            value: 'top'\r\n                        },\r\n                        {\r\n                            label: \"Bottom\",\r\n                            value: 'bottom'\r\n                        },\r\n                    ]\r\n                };\r\n            } else {\r\n                buttonDialogData = {\r\n                    title: \"Pick wall damaging side\",\r\n                    buttons: [\r\n                        {\r\n                            label: \"Left\",\r\n                            value: 'left'\r\n                        },\r\n                        {\r\n                            label: \"Right\",\r\n                            value: 'right'\r\n                        },\r\n                    ]\r\n                };\r\n            }\r\n\r\n        }\r\n        let damageSidePicked = await warpgate.buttonDialog(buttonDialogData, 'column');\r\n        if (!damageSidePicked) return;\r\n        await templateDocument.setFlag('advancedspelleffects', 'wallOperationalData.damageSide', damageSidePicked);\r\n        //console.log(\"damageSidePicked: \", damageSidePicked);\r\n    }\r\n    \r\n    static async handleDamage(templateDocument) {\r\n        const wallData = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData');\r\n        if (!wallData) return;\r\n        const wallEffectData = templateDocument.getFlag('advancedspelleffects', 'wallEffectData');\r\n        console.log(\"ASE WALL OF FIRE - handleDamage: wallEffectData: \", wallEffectData);\r\n        const grid = canvas?.scene?.data.grid;\r\n        if (!grid) return false;\r\n        const damageOnCast = wallData.damageOnCast;\r\n        const damageType = wallData.damageType;\r\n        const wallDamage = wallData.damage;\r\n        const halfDamOnSave = wallData.halfDamOnSave ?? true;\r\n        const savingThrowOnCast = wallData.savingThrowOnCast;\r\n        const mTemplate = templateDocument.object;\r\n        const templateDetails = { x: templateDocument.data.x, y: templateDocument.data.y, shape: mTemplate.shape, distance: mTemplate.data.distance };\r\n        const chatMessageId = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData.chatMessage');\r\n        const chatMessage = await game.messages.get(chatMessageId);\r\n        const casterActorId = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData.casterActor');\r\n        const casterActor = await game.actors.get(casterActorId);\r\n        const wallItemId = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData.item');\r\n        const wallItem = await casterActor.items.get(wallItemId);\r\n        const wallItemUUID = wallItem.uuid;\r\n        let spellState = game.ASESpellStateManager.getSpell(wallItemUUID);\r\n        if(!spellState) {\r\n            wallEffectData.concentration = true;\r\n            wallEffectData.noCastItem = true;\r\n            game.ASESpellStateManager.addSpell(wallItemUUID, wallEffectData);\r\n        }\r\n        //console.log(wallItem);\r\n        if (savingThrowOnCast) {\r\n            const saveType = wallData.savingThrow;\r\n            const saveDC = wallData.savingThrowDC;\r\n            const tokens = canvas.tokens.placeables;\r\n            const targets = [];\r\n            if (tokens.length > 0) {\r\n                for (let i = 0; i < tokens.length; i++) {\r\n                    const token = tokens[i];\r\n                    const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n                    const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n                    widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                        for (let y = startY; y < token.data.height; y++) {\r\n                            const currGrid = {\r\n                                x: token.data.x + x * grid - templateDetails.x,\r\n                                y: token.data.y + y * grid - templateDetails.y,\r\n                            };\r\n                            let contains = templateDetails.shape?.contains(currGrid.x, currGrid.y);\r\n\r\n                            if (contains) {\r\n                                targets.push(token);\r\n                                break widthLoop;\r\n                            } else {\r\n                                //console.log(\"Token did not cross template area...\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //console.log(\"targets: \", targets);\r\n            //game.user.updateTokenTargets(targets);\r\n            if (targets.length && targets.length > 0) {\r\n                const updates = {\r\n                    embedded: {\r\n                        Item: {}\r\n                    }\r\n                };\r\n                const damageRollItemName = game.i18n.localize('ASE.WallOfFireDamageItem');\r\n                let castItemDamage = wallItem.data.data.damage;\r\n                updates.embedded.Item[activationItemName] = {\r\n                    \"type\": \"spell\",\r\n                    \"img\": wallItem.img,\r\n                    \"data\": {\r\n                        \"ability\": \"\",\r\n                        \"actionType\": \"save\",\r\n                        \"activation\": { \"type\": \"action\", \"cost\": 1, \"condition\": \"\" },\r\n                        \"damage\": castItemDamage,\r\n                        \"scaling\": wallItem.data.data.scaling,\r\n                        \"level\": wallItem.data.data.level,\r\n                        \"save\": wallItem.data.data.save,\r\n                        \"preparation\": { \"mode\": 'atwill', \"prepared\": true },\r\n                        \"range\": { \"value\": null, \"long\": null, \"units\": \"\" },\r\n                        \"school\": \"evo\",\r\n                        \"description\": {\r\n                            \"value\": wallItem.data.data.description.value,\r\n                        }\r\n                    },\r\n                    \"flags\": {\r\n                        \"advancedspelleffects\": wallItem.data.flags.advancedspelleffects,\r\n                    }\r\n                }\r\n        \r\n                await warpgate.mutate(caster.document, updates, {}, { name: `${caster.actor.id}-call-lightning` });\r\n            }\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    static playEffects(aseData, template) {\r\n        //console.log(\"Playing effects...\");\r\n        //console.log(\"template: \", template);\r\n        //console.log(\"aseData: \", aseData);\r\n        if (template.data.t === CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n\r\n            new Sequence()\r\n                .sound()\r\n                .file(aseData.flags.wallSpellSound)\r\n                .delay(Number(aseData.flags.wallSpellSoundDelay) ?? 0)\r\n                .volume(aseData.flags.wallSpellVolume ?? 0.5)\r\n                .playIf(aseData.flags.wallSpellSound && aseData.flags.wallSpellSound != \"\")\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .scaleToObject()\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .zIndex(1000)\r\n                .persist()\r\n                .play()\r\n\r\n        } else if (template.data.t === CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE) {\r\n\r\n            new Sequence()\r\n                .sound()\r\n                .file(aseData.flags.wallSpellSound)\r\n                .delay(Number(aseData.flags.wallSpellSoundDelay) ?? 0)\r\n                .volume(aseData.flags.wallSpellVolume ?? 0.5)\r\n                .playIf(aseData.flags.wallSpellSound && aseData.flags.wallSpellSound != \"\")\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .scaleToObject()\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .tilingTexture({\r\n                    x: aseData.flags.wallSegmentSize / 10,\r\n                    y: aseData.flags.wallSegmentSize / 10\r\n                })\r\n                .belowTokens()\r\n                .zIndex(-1000)\r\n                .persist()\r\n                .play()\r\n\r\n        } else {\r\n\r\n            new Sequence()\r\n                .sound()\r\n                .file(aseData.flags.wallSpellSound)\r\n                .delay(Number(aseData.flags.wallSpellSoundDelay) ?? 0)\r\n                .volume(aseData.flags.wallSpellVolume ?? 0.5)\r\n                .playIf(aseData.flags.wallSpellSound && aseData.flags.wallSpellSound != \"\")\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .stretchTo(template, { attachTo: true, onlyX: true })\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .persist()\r\n                .play()\r\n        }\r\n\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallUseWebPLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallUseWebPTooltip\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.useWebP',\r\n            flagName: 'useWebP',\r\n            flagValue: currFlags.useWebP ?? false,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallLengthLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallLengthTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallLength',\r\n            flagName: 'wallLength',\r\n            flagValue: currFlags.wallLength ?? 60,\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallHeightLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallHeightTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallHeight',\r\n            flagName: 'wallHeight',\r\n            flagValue: currFlags.wallHeight ?? 20,\r\n        });\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallWidthLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallWidthTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallWidth',\r\n            flagName: 'wallWidth',\r\n            flagValue: currFlags.wallWidth ?? 1,\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallOfFireColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallOfFireColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: utilFunctions.getDBOptions('jb2a.wall_of_fire.300x100'),\r\n            name: 'flags.advancedspelleffects.effectOptions.fireColor',\r\n            flagName: 'fireColor',\r\n            flagValue: currFlags.fireColor ?? 'yellow',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallOfFireImpactColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallOfFireImpactColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: utilFunctions.getDBOptions('jb2a.impact.004'),\r\n            name: 'flags.advancedspelleffects.effectOptions.fireImpactColor',\r\n            flagName: 'fireImpactColor',\r\n            flagValue: currFlags.fireImpactColor ?? 'yellow',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellDmgSound',\r\n            flagName: 'wallSpellDmgSound',\r\n            flagValue: currFlags.wallSpellDmgSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellDmgSoundDelay',\r\n            flagName: 'wallSpellDmgSoundDelay',\r\n            flagValue: currFlags.wallSpellDmgSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellDamageEffectVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellDamageEffectVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellDmgVolume',\r\n            flagName: 'wallSpellDmgVolume',\r\n            flagValue: currFlags.wallSpellDmgVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        \r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallRadiusLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallRadiusTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallRadius',\r\n            flagName: 'wallRadius',\r\n            flagValue: currFlags.wallRadius ?? 10,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellInitialSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellInitialSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellSound',\r\n            flagName: 'wallSpellSound',\r\n            flagValue: currFlags.wallSpellSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellInitialSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellInitialSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellSoundDelay',\r\n            flagName: 'wallSpellSoundDelay',\r\n            flagValue: currFlags.wallSpellSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellInitialVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellInitialVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellVolume',\r\n            flagName: 'wallSpellVolume',\r\n            flagValue: currFlags.wallSpellVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true,\r\n            \r\n        }\r\n\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class detectStuff {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.actor = game.actors.get(this.data.actor.id);\r\n        this.caster = canvas.tokens.get(this.data.tokenId);\r\n        this.users = [];\r\n        for (const user in this.actor.data.permission) {\r\n            if (user == \"default\") continue;\r\n            if (game.users.get(user)) {\r\n                this.users.push(user);\r\n            }\r\n        }\r\n        this.item = this.data.item;\r\n        this.effectOptions = this.item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        this.preset = this.effectOptions.preset ?? 'magic';\r\n        switch (this.preset) {\r\n            case 'magic':\r\n                this.tags = [\r\n                    \"abjuration\",\r\n                    \"conjuration\",\r\n                    \"divination\",\r\n                    \"enchantment\",\r\n                    \"evocation\",\r\n                    \"illusion\",\r\n                    \"necromancy\",\r\n                    \"transmutation\"\r\n                ];\r\n                this.magicalColors = [\"blue\", \"green\", \"pink\", \"purple\", \"red\", \"yellow\"];\r\n                break;\r\n            case 'goodAndEvil':\r\n                this.tags = [\"good\", \"evil\"];\r\n                break;\r\n            case 'poisonAndDisease':\r\n                this.tags = [\"poison\", \"disease\"];\r\n                break;\r\n            case 'custom':\r\n                this.tags = [];\r\n                this.customTags = [];\r\n                for (let tag of Object.keys(this.effectOptions.tagOptions)) {\r\n                    this.tags.push(this.effectOptions.tagOptions[tag].tagLabel);\r\n                    this.customTags.push({\r\n                        tagLabel: this.effectOptions.tagOptions[tag].tagLabel,\r\n                        tagEffect: this.effectOptions.tagOptions[tag].tagEffect\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n        //console.log(\"Detection Spell: \", this);\r\n    }\r\n    static registerHooks() {\r\n        console.log(\"Registering Hooks for Detect Stuff\");\r\n        Hooks.on(\"updateToken\", detectStuff._updateToken);\r\n    }\r\n    async cast() {\r\n        await this.castDetect();\r\n    }\r\n\r\n    getObjectsInRange(objects) {\r\n        return objects.map(obj => {\r\n            let returnObj = {};\r\n            let pointA = { x: this.caster.data.x + (canvas.grid.size / 2), y: this.caster.data.y + (canvas.grid.size / 2) };\r\n            let pointB = { x: obj.data.x + (canvas.grid.size / 2), y: obj.data.y + (canvas.grid.size / 2) }\r\n            let distance = utilFunctions.measureDistance(pointA, pointB);\r\n            returnObj[\"delay\"] = distance * 55;\r\n            returnObj[\"distance\"] = distance;\r\n            returnObj[\"obj\"] = obj;\r\n            let tag;\r\n            if (this.preset == 'magic') {\r\n                let magicSchool = Tagger.getTags(obj).find(t => this.tags.includes(t.toLowerCase())) || false\r\n                let magicColor = Tagger.getTags(obj).find(t => this.magicalColors.includes(t.toLowerCase())) || \"blue\"\r\n                returnObj[\"introAnimPath\"] = `jb2a.magic_signs.rune.${magicSchool}.intro.${magicColor}`;\r\n                returnObj[\"loopAnimPath\"] = `jb2a.magic_signs.rune.${magicSchool}.loop.${magicColor}`;\r\n                returnObj[\"outroAnimPath\"] = `jb2a.magic_signs.rune.${magicSchool}.outro.${magicColor}`;\r\n                tag = magicSchool;\r\n            } else if (this.preset == 'goodAndEvil') {\r\n                tag = Tagger.getTags(obj).find(t => this.tags.includes(t.toLowerCase())) || false;\r\n                if (tag) {\r\n                    if (tag == \"good\") {\r\n                        returnObj[\"animPath\"] = this.effectOptions.goodAnim;\r\n                    } else if (tag == \"evil\") {\r\n                        returnObj[\"animPath\"] = this.effectOptions.evilAnim;\r\n                    }\r\n                } else {\r\n                    returnObj[\"animPath\"] = false;\r\n                }\r\n            } else if (this.preset == 'poisonAndDisease') {\r\n                tag = Tagger.getTags(obj).find(t => this.tags.includes(t.toLowerCase())) || false;\r\n                if (tag) {\r\n                    if (tag == \"poison\") {\r\n                        returnObj[\"animPath\"] = this.effectOptions.poisonAnim;\r\n                    } else if (tag == \"disease\") {\r\n                        returnObj[\"animPath\"] = this.effectOptions.diseaseAnim;\r\n                    }\r\n                }\r\n                else {\r\n                    returnObj[\"animPath\"] = false;\r\n                }\r\n            } else if (this.preset == 'custom') {\r\n                let objectTags = Tagger.getTags(obj);\r\n                //console.log(\"Object Tags: \", objectTags);\r\n                //console.log(\"Custom Tags: \", this.customTags);\r\n                let customTagObject = this.customTags.filter(ct => objectTags.includes(ct.tagLabel))[0] ?? false;\r\n                //console.log(\"Custom Tag Object: \", customTagObject);\r\n                if (customTagObject) {\r\n                    tag = customTagObject?.tagLabel ?? false;\r\n                }\r\n                //console.log(\"Custom Tag found: \", tag);\r\n                if (tag) {\r\n                    returnObj[\"animPath\"] = customTagObject.tagEffect;\r\n                } else {\r\n                    returnObj[\"animPath\"] = false;\r\n                }\r\n            }\r\n            returnObj[\"tag\"] = tag;\r\n            //console.log(\"Return Object: \", returnObj);\r\n            return returnObj;\r\n        }).filter(obj => (obj.distance <= this.effectOptions.range && this.tags.includes(obj.tag)));\r\n    }\r\n    async castDetect() {\r\n        const taggedObjects = Tagger.getByTag(\"ASE-detect\", { ignore: [this.caster], caseInsensitive: true });\r\n        let objInRange = this.getObjectsInRange(taggedObjects);\r\n        //console.log(\"Tagged Objects in Range: \", objInRange);\r\n        await aseSocket.executeAsGM(\"updateFlag\", this.caster.id, \"detectItemId\", this.item.id);\r\n        this.playAnimSequence(objInRange);\r\n\r\n    }\r\n\r\n    async playAnimSequence(objects) {\r\n        const waveSound = this.effectOptions.waveSound ?? false;\r\n        const waveSoundVolume = this.effectOptions.waveSoundVolume ?? 0.5;\r\n        const waveSoundDelay = this.effectOptions.waveSoundDelay ?? 0;\r\n        const waveColor = this.effectOptions.waveColor ?? \"blue\";\r\n        const auraColor = this.effectOptions.auraColor ?? \"blue\";\r\n\r\n        let detectedObjects = [];\r\n        for (let obj of objects) {\r\n            detectedObjects.push(obj.obj.id);\r\n        }\r\n\r\n        let sequence = new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(waveSound)\r\n            .volume(waveSoundVolume)\r\n            .delay(waveSoundDelay)\r\n            .playIf(waveSound)\r\n            .effect(`jb2a.detect_magic.circle.${waveColor}`)\r\n            .attachTo(this.caster)\r\n            .belowTiles()\r\n            .effect()\r\n            .file(`jb2a.magic_signs.circle.02.divination.intro.${auraColor}`)\r\n            .attachTo(this.caster)\r\n            .scale(0.2)\r\n            .belowTokens()\r\n            .waitUntilFinished(-1000)\r\n            .fadeOut(1000, { ease: \"easeInQuint\" })\r\n            .effect()\r\n            .file(`jb2a.magic_signs.circle.02.divination.loop.${auraColor}`)\r\n            .attachTo(this.caster)\r\n            .persist()\r\n            .extraEndDuration(750)\r\n            .fadeOut(750, { ease: \"easeInQuint\" })\r\n            .scale(0.2)\r\n            .loopProperty(\"sprite\", \"rotation\", { duration: 20000, from: 0, to: 360 })\r\n            .name(`${this.caster.id}-detectMagicAura`)\r\n            .belowTokens();\r\n        for (let obj of objects) {\r\n            if (this.preset == 'magic') {\r\n                this.playMagicalObjectAnim(obj);\r\n            } else {\r\n                this.playObjectAnim(obj);\r\n            }\r\n        }\r\n        await aseSocket.executeAsGM(\"updateFlag\", this.caster.id, \"objectsDetected\", detectedObjects);\r\n        sequence.play();\r\n\r\n    }\r\n\r\n    async playObjectAnim(object) {\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .effect(object.animPath)\r\n            .fadeIn(750, { ease: \"easeInQuint\" })\r\n            .name(`${object.obj.id}-magicRune`)\r\n            .delay(object.delay)\r\n            .forUsers(this.users)\r\n            .attachTo(object.obj)\r\n            .scale(0.5)\r\n            .persist(true)\r\n            .fadeOut(750, { ease: \"easeInQuint\" })\r\n            .zIndex(1)\r\n            .play()\r\n    }\r\n\r\n    async playMagicalObjectAnim(object) {\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .effect(object.introAnimPath)\r\n            .forUsers(this.users)\r\n            .attachTo(object.obj)\r\n            .scale(0.25)\r\n            .delay(object.delay)\r\n            .waitUntilFinished(-1200)\r\n            .zIndex(0)\r\n            .effect(object.loopAnimPath)\r\n            .name(`${object.obj.id}-magicRune`)\r\n            .delay(object.delay)\r\n            .forUsers(this.users)\r\n            .scale(0.25)\r\n            .attachTo(object.obj)\r\n            .persist(true)\r\n            .waitUntilFinished(-750)\r\n            .fadeOut(750, { ease: \"easeInQuint\" })\r\n            .zIndex(1)\r\n            .play()\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        await aseSocket.executeAsGM(\"removeFlag\", casterToken.id, \"detectItemId\");\r\n        let users = [];\r\n        for (const user in casterActor.data.permission) {\r\n            if (user == \"default\") continue;\r\n            if (game.users.get(user)) {\r\n                users.push(user);\r\n            }\r\n        }\r\n        let preset = effectOptions.preset;\r\n        let tags = [];\r\n        let magicalColors = [];\r\n        let customTags = [];\r\n        switch (preset) {\r\n            case 'magic':\r\n                tags = [\r\n                    \"abjuration\",\r\n                    \"conjuration\",\r\n                    \"divination\",\r\n                    \"enchantment\",\r\n                    \"evocation\",\r\n                    \"illusion\",\r\n                    \"necromancy\",\r\n                    \"transmutation\"\r\n                ];\r\n                magicalColors = [\"blue\", \"green\", \"pink\", \"purple\", \"red\", \"yellow\"];\r\n                break;\r\n            case 'goodAndEvil':\r\n                tags = [\"good\", \"evil\"];\r\n                break;\r\n            case 'poisonAndDisease':\r\n                tags = [\"poison\", \"disease\"];\r\n                break;\r\n            case 'custom':\r\n                tags = [];\r\n                customTags = [];\r\n                for (let tag of Object.keys(effectOptions.tagOptions)) {\r\n                    tags.push(effectOptions.tagOptions[tag].tagLabel);\r\n                    customTags.push({\r\n                        tagLabel: effectOptions.tagOptions[tag].tagLabel,\r\n                        tagEffect: effectOptions.tagOptions[tag].tagEffect\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n        const taggedObjects = Tagger.getByTag(\"ASE-detect\", { ignore: [casterToken], caseInsensitive: true });\r\n\r\n        let detectedObjectsIDs = casterToken.document.getFlag(\"advancedspelleffects\", \"objectsDetected\");\r\n        await Sequencer.EffectManager.endEffects({ name: `${casterToken.id}-detectMagicAura`, object: casterToken });\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .effect()\r\n            .file(`jb2a.magic_signs.circle.02.divination.outro.${effectOptions.auraColor}`)\r\n            .scale(0.2)\r\n            .belowTokens()\r\n            .attachTo(casterToken)\r\n            .play()\r\n        for await (let id of detectedObjectsIDs) {\r\n            let object = canvas.scene.tiles.get(id)\r\n                || canvas.scene.tokens.get(id)\r\n                || canvas.scene.drawings.get(id)\r\n                || canvas.scene.walls.get(id)\r\n                || canvas.scene.lights.get(id)\r\n                || game.scenes.get(id)\r\n                || game.users.get(id);\r\n            let pointA = { x: casterToken.data.x + (canvas.grid.size / 2), y: casterToken.data.y + (canvas.grid.size / 2) };\r\n            let pointB = { x: object.data.x + (canvas.grid.size / 2), y: object.data.y + (canvas.grid.size / 2) }\r\n            let distance = utilFunctions.measureDistance(pointA, pointB);\r\n            if (object) {\r\n                if (preset == 'magic') {\r\n                    let magicSchool = Tagger.getTags(object).find(t => tags.includes(t.toLowerCase())) || false;\r\n                    let magicColor = Tagger.getTags(object).find(t => magicalColors.includes(t.toLowerCase())) || \"blue\";\r\n                    await Sequencer.EffectManager.endEffects({ name: `${id}-magicRune` });\r\n                    new Sequence(\"Advanced Spell Effects\")\r\n                        .effect(`jb2a.magic_signs.rune.${magicSchool}.outro.${magicColor}`)\r\n                        .forUsers(users)\r\n                        .attachTo(object.id)\r\n                        .playIf(distance <= 30)\r\n                        .scale(0.25)\r\n                        .zIndex(0)\r\n                        .play();\r\n                } else {\r\n                    await Sequencer.EffectManager.endEffects({ name: `${id}-magicRune` });\r\n                }\r\n            }\r\n        }\r\n        await aseSocket.executeAsGM(\"removeFlag\", casterToken.id, \"objectsDetected\");\r\n    }\r\n\r\n    static async _updateToken(tokenDocument, updateData) {\r\n        //console.log(\"update token\");\r\n        if ((!updateData.x && !updateData.y)) return;\r\n\r\n\r\n        const isGM = utilFunctions.isFirstGM();\r\n        if (!isGM) return;\r\n\r\n\r\n        const itemId = tokenDocument.getFlag(\"advancedspelleffects\", \"detectItemId\");\r\n        if (!itemId) return;\r\n\r\n\r\n        let item = tokenDocument._actor?.items?.get(itemId) ?? game.items.get(itemId) ?? false;\r\n        if (!item) return;\r\n\r\n        //console.log(\"update token: Item: \", item);\r\n        if (tokenDocument.actor.effects.filter(async (effect) => {\r\n            let effectItem = await fromUuid(effect.data.origin);\r\n            return effectItem.name == item.name;\r\n        }).length == 0) {\r\n            return;\r\n        }\r\n        //console.log(\"Found relevant effect\");\r\n        const effectOptions = item.getFlag('advancedspelleffects', 'effectOptions');\r\n        let newPos = { x: 0, y: 0 };\r\n        newPos.x = (updateData.x) ? updateData.x : tokenDocument.data.x;\r\n        newPos.y = (updateData.y) ? updateData.y : tokenDocument.data.y;\r\n        let users = [];\r\n        for (const user in tokenDocument.actor.data.permission) {\r\n            if (user == \"default\") continue;\r\n            if (game.users.get(user)) {\r\n                users.push(user);\r\n            }\r\n        }\r\n\r\n        let preset = effectOptions.preset;\r\n        let tags = [];\r\n        let magicalColors = [];\r\n        let customTags = [];\r\n        let taggedObjects;\r\n        switch (preset) {\r\n            case 'magic':\r\n                tags = [\r\n                    \"abjuration\",\r\n                    \"conjuration\",\r\n                    \"divination\",\r\n                    \"enchantment\",\r\n                    \"evocation\",\r\n                    \"illusion\",\r\n                    \"necromancy\",\r\n                    \"transmutation\"\r\n                ];\r\n                magicalColors = [\"blue\", \"green\", \"pink\", \"purple\", \"red\", \"yellow\"];\r\n                break;\r\n            case 'goodAndEvil':\r\n                tags = [\"good\", \"evil\"];\r\n                break;\r\n            case 'poisonAndDisease':\r\n                tags = [\"poison\", \"disease\"];\r\n                break;\r\n            case 'custom':\r\n                tags = [];\r\n                customTags = [];\r\n                for (let tag of Object.keys(effectOptions.tagOptions)) {\r\n                    tags.push(effectOptions.tagOptions[tag].tagLabel);\r\n                    customTags.push({\r\n                        tagLabel: effectOptions.tagOptions[tag].tagLabel,\r\n                        tagEffect: effectOptions.tagOptions[tag].tagEffect\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n        taggedObjects = Tagger.getByTag(\"ASE-detect\",\r\n            { caseInsensitive: true });\r\n        let detectedObjects = taggedObjects.map(obj => {\r\n            let returnObj = {};\r\n            let pointA = { x: newPos.x + (canvas.grid.size / 2), y: newPos.y + (canvas.grid.size / 2) };\r\n            let pointB = { x: obj.data.x + (canvas.grid.size / 2), y: obj.data.y + (canvas.grid.size / 2) };\r\n            let distance = utilFunctions.measureDistance(pointA, pointB);\r\n            returnObj[\"delay\"] = 0;\r\n            returnObj[\"distance\"] = distance;\r\n            returnObj[\"obj\"] = obj;\r\n            let tag;\r\n            if (preset == 'magic') {\r\n                let magicSchool = Tagger.getTags(obj).find(t => tags.includes(t.toLowerCase())) || false\r\n                let magicColor = Tagger.getTags(obj).find(t => magicalColors.includes(t.toLowerCase())) || \"blue\"\r\n                returnObj[\"introAnimPath\"] = `jb2a.magic_signs.rune.${magicSchool}.intro.${magicColor}`;\r\n                returnObj[\"loopAnimPath\"] = `jb2a.magic_signs.rune.${magicSchool}.loop.${magicColor}`;\r\n                returnObj[\"outroAnimPath\"] = `jb2a.magic_signs.rune.${magicSchool}.outro.${magicColor}`;\r\n                tag = magicSchool;\r\n            } else if (preset == 'goodAndEvil') {\r\n                tag = Tagger.getTags(obj).find(t => tags.includes(t.toLowerCase())) || false;\r\n                if (tag) {\r\n                    if (tag == \"good\") {\r\n                        returnObj[\"animPath\"] = effectOptions.goodAnim;\r\n                    } else if (tag == \"evil\") {\r\n                        returnObj[\"animPath\"] = effectOptions.evilAnim;\r\n                    }\r\n                } else {\r\n                    returnObj[\"animPath\"] = false;\r\n                }\r\n            } else if (preset == 'poisonAndDisease') {\r\n                tag = Tagger.getTags(obj).find(t => tags.includes(t.toLowerCase())) || false;\r\n                if (tag) {\r\n                    if (tag == \"poison\") {\r\n                        returnObj[\"animPath\"] = effectOptions.poisonAnim;\r\n                    } else if (tag == \"disease\") {\r\n                        returnObj[\"animPath\"] = effectOptions.diseaseAnim;\r\n                    }\r\n                }\r\n                else {\r\n                    returnObj[\"animPath\"] = false;\r\n                }\r\n            } else if (preset == 'custom') {\r\n                let objectTags = Tagger.getTags(obj);\r\n                //console.log(\"Object Tags: \", objectTags);\r\n                //console.log(\"Custom Tags: \", customTags);\r\n                let customTagObject = customTags.filter(ct => objectTags.includes(ct.tagLabel))[0] ?? false;\r\n                //console.log(\"Custom Tag Object: \", customTagObject);\r\n                if (customTagObject) {\r\n                    tag = customTagObject?.tagLabel ?? false;\r\n                }\r\n                //console.log(\"Custom Tag found: \", tag);\r\n                if (tag) {\r\n                    returnObj[\"animPath\"] = customTagObject.tagEffect;\r\n                } else {\r\n                    returnObj[\"animPath\"] = false;\r\n                }\r\n            }\r\n            returnObj[\"tag\"] = tag;\r\n            //console.log(\"Return Object: \", returnObj);\r\n            return returnObj;\r\n        }).filter(obj => (tags.includes(obj.tag)));;\r\n\r\n\r\n\r\n        let detectedObjectsOutOfRange = detectedObjects.filter(o => o.distance > effectOptions.range);\r\n        let detectedObjectsInRange = detectedObjects.filter(o => o.distance <= effectOptions.range);\r\n        let detectedObjectsIDs = tokenDocument.getFlag(\"advancedspelleffects\", \"objectsDetected\");\r\n\r\n        //console.log(\"Detected Objects: \", detectedObjects);\r\n        //console.log(\"Detected Objects Out of Range: \", detectedObjectsOutOfRange);\r\n       // console.log(\"Detected Objects In Range: \", detectedObjectsInRange);\r\n        //handle out of range objects\r\n        for await (let detectedObj of detectedObjectsOutOfRange) {\r\n            if (preset == 'magic') {\r\n                await Sequencer.EffectManager.endEffects({ name: `${detectedObj.obj.id}-magicRune` });\r\n                new Sequence(\"Advanced Spell Effects\")\r\n                    .effect(detectedObj.outroAnimPath)\r\n                    .forUsers(users)\r\n                    .playIf(detectedObjectsIDs.includes(detectedObj.obj.id))\r\n                    .attachTo(detectedObj.obj.id)\r\n                    .scale(0.25)\r\n                    .zIndex(0)\r\n                    .play();\r\n            } else {\r\n                await Sequencer.EffectManager.endEffects({ name: `${detectedObj.obj.id}-magicRune` });\r\n            }\r\n        }\r\n        //remove id of each detectedObjectOutOfRange from detectedObjectsIDs\r\n        if (detectedObjectsIDs?.length > 0) {\r\n            for (let detectedObj of detectedObjectsOutOfRange) {\r\n                detectedObjectsIDs = detectedObjectsIDs?.filter(id => id != detectedObj.obj.id) ?? [];\r\n            }\r\n            await aseSocket.executeAsGM(\"updateFlag\", tokenDocument.id, \"objectsDetected\", detectedObjectsIDs);\r\n        }\r\n        //handle in range objects\r\n        for await (let detectedObj of detectedObjectsInRange) {\r\n            if (detectedObjectsIDs?.includes(detectedObj.obj.id)) {\r\n                continue;\r\n            }\r\n            if (preset == 'magic') {\r\n                new Sequence(\"Advanced Spell Effects\")\r\n                    .effect(detectedObj.introAnimPath)\r\n                    .forUsers(users)\r\n                    .attachTo(detectedObj.obj)\r\n                    .scale(0.25)\r\n                    .delay(detectedObj.delay)\r\n                    .waitUntilFinished(-1200)\r\n                    .zIndex(0)\r\n                    .effect(detectedObj.loopAnimPath)\r\n                    .name(`${detectedObj.obj.id}-magicRune`)\r\n                    .delay(detectedObj.delay)\r\n                    .forUsers(users)\r\n                    .scale(0.25)\r\n                    .attachTo(detectedObj.obj)\r\n                    .persist(true)\r\n                    .waitUntilFinished(-750)\r\n                    .fadeOut(750, { ease: \"easeInQuint\" })\r\n                    .zIndex(1)\r\n                    .play()\r\n            } else {\r\n                new Sequence(\"Advanced Spell Effects\")\r\n                    .effect(detectedObj.animPath)\r\n                    .fadeIn(750, { ease: \"easeInQuint\" })\r\n                    .name(`${detectedObj.obj.id}-magicRune`)\r\n                    .delay(detectedObj.delay)\r\n                    .forUsers(users)\r\n                    .scale(0.5)\r\n                    .attachTo(detectedObj.obj)\r\n                    .persist(true)\r\n                    .fadeOut(750, { ease: \"easeInQuint\" })\r\n                    .zIndex(1)\r\n                    .play()\r\n            }\r\n        }\r\n        //add id of each detectedObjectInRange to detectedObjectsIDs if not already in it\r\n        for (let detectedObj of detectedObjectsInRange) {\r\n            if (detectedObjectsIDs?.length > 0) {\r\n                if (!detectedObjectsIDs.includes(detectedObj.obj.id)) {\r\n                    detectedObjectsIDs.push(detectedObj.obj.id);\r\n                }\r\n            }\r\n        }\r\n        await aseSocket.executeAsGM(\"updateFlag\", tokenDocument.id, \"objectsDetected\", detectedObjectsIDs);\r\n\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n\r\n        const detectMagicWaves = `jb2a.detect_magic.circle`;\r\n        const detectMagicWaveColorOptions = utilFunctions.getDBOptions(detectMagicWaves);\r\n\r\n        const detectMagicAuras = `jb2a.magic_signs.circle.02.divination.intro`;\r\n        const detectMagicAuraColorOptions = utilFunctions.getDBOptions(detectMagicAuras);\r\n\r\n        const detectPresetAnims = 'jb2a.icon';\r\n        const detectPresetAnimOptions = utilFunctions.getDBOptionsIcons(detectPresetAnims);\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        const presetOptions = [\r\n            {\"magic\": 'Detect Magic'},\r\n            {\"goodAndEvil\": 'Detect Good and Evil'},\r\n            {\"poisonAndDisease\": 'Detect Poison and Disease'},\r\n            {\"custom\": 'Custom'}];\r\n            \r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectPresetsLabel\"),\r\n            type: 'dropdown',\r\n            options: presetOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.preset',\r\n            flagName: 'preset',\r\n            flagValue: currFlags.preset ?? 'magic',\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectRangeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.DetectRangeTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.range',\r\n            flagName: 'range',\r\n            flagValue: currFlags.range ?? 30,\r\n        });\r\n\r\n\r\n        /* spellOptions.push({\r\n             label: game.i18n.localize(\"ASE.DetectTagsLabel\"),\r\n             tooltip: game.i18n.localize(\"ASE.DetectTagsTooltip\"),\r\n             type: 'textInput',\r\n             name: 'flags.advancedspelleffects.effectOptions.tags',\r\n             flagName: 'tags',\r\n             flagValue: currFlags.tags ?? '',\r\n         });*/\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectWaveColorLabel\"),\r\n            type: 'dropdown',\r\n            options: detectMagicWaveColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.waveColor',\r\n            flagName: 'waveColor',\r\n            flagValue: currFlags.waveColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectWaveSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.waveSound',\r\n            flagName: 'waveSound',\r\n            flagValue: currFlags.waveSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectWaveSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.waveSoundDelay',\r\n            flagName: 'wakeSoundDelay',\r\n            flagValue: currFlags.waveSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectWaveSoundVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.waveVolume',\r\n            flagName: 'waveVolume',\r\n            flagValue: currFlags.waveVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectAuraColorLabel\"),\r\n            type: 'dropdown',\r\n            options: detectMagicAuraColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.auraColor',\r\n            flagName: 'auraColor',\r\n            flagValue: currFlags.auraColor ?? 'blue',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectGoodAnimLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.DetectGoodAnimTooltip\"),\r\n            type: 'dropdown',\r\n            options: detectPresetAnimOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.goodAnim',\r\n            flagName: 'goodAnim',\r\n            flagValue: currFlags.goodAnim ?? 'jb2a.icon.runes03.yellow',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectEvilAnimLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.DetectEvilAnimTooltip\"),\r\n            type: 'dropdown',\r\n            options: detectPresetAnimOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.evilAnim',\r\n            flagName: 'evilAnim',\r\n            flagValue: currFlags.evilAnim ?? 'jb2a.icon.runes03.dark_black',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectPoisonAnimLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.DetectPoisonAnimTooltip\"),\r\n            type: 'dropdown',\r\n            options: detectPresetAnimOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.poisonAnim',\r\n            flagName: 'poisonAnim',\r\n            flagValue: currFlags.poisonAnim ?? 'jb2a.icon.poison.dark_green',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.DetectDiseaseAnimLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.DetectDiseaseAnimTooltip\"),\r\n            type: 'dropdown',\r\n            options: detectPresetAnimOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.diseaseAnim',\r\n            flagName: 'diseaseAnim',\r\n            flagValue: currFlags.diseaseAnim ?? 'jb2a.icon.poison.purple',\r\n        });\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true\r\n        }\r\n\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nimport baseSpellClass from \"./baseSpellClass.js\";\r\nimport { wallPanelDialog } from \"../apps/wall-panel-dialog.js\";\r\n\r\n\r\nexport class wallSpell extends baseSpellClass {\r\n    constructor(data) {\r\n        super();\r\n        this.data = data;\r\n\r\n        this.actor = game.actors.get(this.data.actor.id);\r\n        this.token = canvas.tokens.get(this.data.tokenId);\r\n        this.item = this.data.item;\r\n        this.itemCardId = this.data.itemCardId;\r\n        this.itemLevel = this.data.itemLevel;\r\n        this.effectOptions = this.item.getFlag(\"advancedspelleffects\", \"effectOptions\") ?? {};\r\n        //console.log('effectOptions:', this.effectOptions);\r\n        this.wallType = this.effectOptions.wallType.toLowerCase();\r\n        this.wallCategory = \"\";\r\n        this.wallOptions = {};\r\n        this.chatMessage = {};\r\n        this.baseTemplateData = {\r\n            user: game.user.id,\r\n            direction: 0,\r\n            x: 0,\r\n            y: 0,\r\n            color: \"#FFFFFF\",\r\n            fillColor: \"#FFFFFF\",\r\n            flags: {\r\n                tagger: { tags: [`wallSpell-${this.wallType}-${this.actor.id}`] },\r\n                advancedspelleffects: {\r\n                    wallSpellWallNum: 12,\r\n                    dimensions: {},\r\n                    wallType: this.wallType,\r\n                    length: this.effectOptions.wallLength,\r\n                    wallOperationalData: {},\r\n                    wallEffectData: this.effectOptions,\r\n                    wallName: this.item.name\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async cast() {\r\n        this._setWallCategory();\r\n        this._setWallOptions();\r\n        //console.log(this);\r\n        const { dimensions, texture, type } = await warpgate.buttonDialog(this._getDialogData(), 'column');\r\n        //console.log('dimensions:', dimensions);\r\n        //console.log('texture:', texture);\r\n        //console.log('type:', type);\r\n        if (!dimensions || !texture) return;\r\n        const chatMessage = await game.messages.get(this.itemCardId);\r\n        if (chatMessage) {\r\n            this.chatMessage = chatMessage.id;\r\n        }\r\n        this._setBaseTemplateData(dimensions, type);\r\n\r\n        const aseData = {\r\n            itemLevel: this.itemLevel,\r\n            flags: this.effectOptions,\r\n            caster: this.token,\r\n            casterActor: this.actor,\r\n            dimensions: dimensions,\r\n            texture: texture,\r\n        }\r\n        //console.log(\"Dialog return type\", type);\r\n        if (type == \"h-panels\" || type == \"v-panels\") {\r\n            let wallPanelDiag = new wallPanelDialog({ aseData: aseData, templateData: this.baseTemplateData, type: type }).render(true);\r\n           // let wallSpellPanelData = await wallPanelDiag.getData();\r\n            //console.log('wallSpellPanelData:', wallSpellPanelData);\r\n            Hooks.once('createMeasuredTemplate', async (template) => {\r\n                await template.setFlag('advancedspelleffects', 'placed', true);\r\n                wallSpell.placePanels(aseData, template, wallPanelDiag, type);\r\n            });\r\n            //console.log(\"template data:\", this.baseTemplateData);\r\n            const doc = new MeasuredTemplateDocument(this.baseTemplateData, { parent: canvas.scene });\r\n            let template = new game.dnd5e.canvas.AbilityTemplate(doc);\r\n            template.actorSheet = aseData.casterActor.sheet;\r\n            template.drawPreview();\r\n        } else {\r\n            Hooks.once('createMeasuredTemplate', async (template) => {\r\n\r\n                const direction = template.data.direction;\r\n                const templateDimensions = template.getFlag('advancedspelleffects', 'dimensions') ?? {};\r\n                const templateLength = templateDimensions?.length ?? 0;\r\n                if ((direction == 0 || direction == 180 || direction == 90 || direction == 270) && templateLength > 0) {\r\n                    await template.update({ distance: templateLength, flags: { advancedspelleffects: { placed: true } } });\r\n                } else {\r\n                    await template.setFlag('advancedspelleffects', 'placed', true);\r\n                }\r\n\r\n                wallSpell.playEffects(aseData, template);\r\n                wallSpell.placeWalls(template);\r\n                if (this.wallType.includes('fire')) {\r\n                    await wallSpell.pickFireSide(template);\r\n                }\r\n                if (utilFunctions.isMidiActive()) {\r\n                    wallSpell.handleOnCast(template);\r\n                }\r\n            });\r\n            const doc = new MeasuredTemplateDocument(this.baseTemplateData, { parent: canvas.scene });\r\n            let template = new game.dnd5e.canvas.AbilityTemplate(doc);\r\n            template.actorSheet = aseData.casterActor.sheet;\r\n            template.drawPreview();\r\n        }\r\n    }\r\n\r\n    _setWallCategory() {\r\n        if (this.wallType.includes('thorns') || this.wallType.includes('fire') || this.wallType.includes('light')\r\n            || this.wallType.includes('sand') || this.wallType.includes('water')) {\r\n            this.wallCategory = 'wall';\r\n        } else if (this.wallType.includes('force') || this.wallType.includes('ice') || this.wallType.includes('stone')) {\r\n            this.wallCategory = 'panels';\r\n        }\r\n    }\r\n\r\n    _setWallOptions() {\r\n        //console.log('wallCategory:', this.wallCategory);\r\n        //console.log('effectOptions:', this.effectOptions);\r\n        switch (this.wallCategory) {\r\n            case \"wall\":\r\n                this.wallOptions = {\r\n                    wallCategory: \"wall\",\r\n                    rect: {\r\n                        dimensions: {\r\n                            length: this.effectOptions.wallLength,\r\n                            width: this.effectOptions.wallHeight\r\n                        }\r\n                    },\r\n                    circle: {\r\n                        dimensions: {\r\n                            radius: this.effectOptions.wallRadius\r\n                        }\r\n                    }\r\n                };\r\n                break;\r\n            case \"panels\":\r\n                this.wallOptions = {\r\n                    wallCategory: \"panels\",\r\n                    rect: {\r\n                        horizontal: {\r\n                            dimensions: {\r\n                                length: this.effectOptions.wallSegmentSize,\r\n                                width: this.effectOptions.wallSegmentSize\r\n                            }\r\n                        },\r\n                        vertical: {\r\n                            dimensions: {\r\n                                length: this.effectOptions.wallSegmentSize,\r\n                                width: this.effectOptions.wallSegmentSize\r\n                            }\r\n                        }\r\n                    },\r\n                    circle: {\r\n                        dimensions: {\r\n                            radius: this.effectOptions.wallRadius\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                this.wallOptions = {\r\n                    wallCategory: \"wall\",\r\n                    rect: {\r\n                        dimensions: {\r\n                            length: this.effectOptions.wallLength,\r\n                            height: this.effectOptions.wallHeight\r\n                        }\r\n                    },\r\n                    circle: {\r\n                        dimensions: {\r\n                            radius: this.effectOptions.wallRadius\r\n                        }\r\n                    }\r\n                };\r\n                break;\r\n        }\r\n    }\r\n\r\n    _getDialogData() {\r\n        const wallType = this.wallType;\r\n        const wallOptions = this.wallOptions;\r\n        //console.log('wallOptions:', wallOptions);\r\n        const wallCategory = this.wallCategory;\r\n        const effectOptions = this.effectOptions;\r\n        const useWebP = effectOptions.useWebP ?? false;\r\n        let dialogData = {\r\n            title: `Choose your Wall of ${this.wallType} shape`,\r\n            buttons: []\r\n        };\r\n\r\n        if (!wallType.toLowerCase().includes(\"light\") && !wallType.toLowerCase().includes(\"sand\")) {\r\n            dialogData.buttons.push({\r\n                label: `Sphere/Dome/Ring(${wallOptions.circle.dimensions.radius}ft radius)`,\r\n                value: {\r\n                    dimensions: wallOptions.circle.dimensions,\r\n                    texture: this._getTexture({ type: 'circle', effectData: this.effectOptions }, wallType, useWebP),\r\n                    type: \"circle\"\r\n                }\r\n            });\r\n        }\r\n        switch (wallCategory) {\r\n            case \"wall\":\r\n                dialogData.buttons.push({\r\n                    label: `Wall(${wallOptions.rect.dimensions.length}ft x ${wallOptions.rect.dimensions.width}ft)`,\r\n                    value: {\r\n                        dimensions: wallOptions.rect.dimensions,\r\n                        texture: this._getTexture({ type: 'wall', effectData: this.effectOptions }, wallType, useWebP),\r\n                        type: \"ray\"\r\n                    }\r\n                });\r\n                break;\r\n            case \"panels\":\r\n                dialogData.buttons.push({\r\n                    label: `Horizontal Panels(${wallOptions.rect.horizontal.dimensions.length}ft x ${wallOptions.rect.horizontal.dimensions.width}ft)`,\r\n                    value: {\r\n                        dimensions: wallOptions.rect.horizontal.dimensions,\r\n                        texture: this._getTexture({ type: 'panel', subtype: 'horizontal', effectData: this.effectOptions }, wallType, useWebP),\r\n                        type: \"h-panels\"\r\n                    }\r\n                });\r\n                dialogData.buttons.push({\r\n                    label: `Vertical Panels(${wallOptions.rect.vertical.dimensions.length}ft x ${wallOptions.rect.vertical.dimensions.width}ft)`,\r\n                    value: {\r\n                        dimensions: wallOptions.rect.vertical.dimensions,\r\n                        texture: this._getTexture({ type: 'panel', subtype: 'vertical', effectData: this.effectOptions }, wallType, useWebP),\r\n                        type: \"v-panels\"\r\n                    }\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return dialogData;\r\n\r\n    }\r\n\r\n    _setBaseTemplateData(dimensions, type) {\r\n        this.baseTemplateData.flags.advancedspelleffects.dimensions = dimensions;\r\n        this.baseTemplateData.flags.tagger.tags.push('0');\r\n        if (type == \"circle\") {\r\n            this.baseTemplateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.CIRCLE;\r\n            this.baseTemplateData[\"distance\"] = dimensions.radius;\r\n        } else if (type == \"ray\") {\r\n            this.baseTemplateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RAY;\r\n            this.baseTemplateData[\"distance\"] = Math.sqrt(Math.pow(dimensions.length, 2) + Math.pow(dimensions.width, 2));\r\n            //this.baseTemplateData[\"direction\"] = 180 * Math.atan2(dimensions.length, dimensions.width) / Math.PI;\r\n            this.baseTemplateData[\"width\"] = this.effectOptions.wallWidth;\r\n        } else if (type == \"v-panels\") {\r\n            this.baseTemplateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RAY;\r\n            this.baseTemplateData[\"distance\"] = dimensions.length;\r\n        } else if (type == \"h-panels\") {\r\n            this.baseTemplateData[\"t\"] = CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE;\r\n            this.baseTemplateData[\"distance\"] = Math.sqrt(Math.pow(dimensions.length, 2) + Math.pow(dimensions.width, 2));\r\n            this.baseTemplateData[\"direction\"] = 180 * Math.atan2(dimensions.length, dimensions.width) / Math.PI;\r\n        }\r\n        switch (this.wallType) {\r\n            case 'fire':\r\n                let damageRoll;\r\n                if (this.effectOptions.levelScaling) {\r\n                    damageRoll = `${Number(this.itemLevel) + 1}d8`;\r\n                } else {\r\n                    damageRoll = `${this.effectOptions.dmgDieCount}${this.effectOptions.dmgDie}${this.effectOptions.dmgMod > 0 ? ` + ${this.effectOptions.dmgMod}` : ''}`;\r\n\r\n                }\r\n\r\n                this.baseTemplateData.flags.advancedspelleffects.wallOperationalData = {\r\n                    savingThrowOnCast: true,\r\n                    savingThrow: 'dex',\r\n                    halfDamOnSave: true,\r\n                    damage: damageRoll,\r\n                    damageType: 'fire',\r\n                    damageOnTouch: true,\r\n                    savingThrowOnTouch: false,\r\n                    checkForTouch: true,\r\n                    damageSide: '',\r\n                    damageInArea: true,\r\n                    damageArea: {},\r\n                    damageOnCast: true,\r\n                    savingThrowDC: this.actor.data.data.attributes.spelldc ?? 0,\r\n                    chatMessage: this.chatMessage,\r\n                    item: this.item.id,\r\n                    casterActor: this.actor.id,\r\n                    range: this.effectOptions?.range ?? 10,\r\n                    casterToken: this.token.id\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n    _getTexture(options, wallType, useWebP = false) {\r\n        let texture = \"\";\r\n        //console.log('options:', options);\r\n        switch (wallType) {\r\n            case \"thorns\":\r\n                if (useWebP) {\r\n                    texture = 'modules/jb2a_patreon/Library/1st_Level/Entangle/Entangle_01_Brown_Thumb.webp';\r\n                } else {\r\n                    texture = 'jb2a.entangle.brown';\r\n                }\r\n                break;\r\n            case \"fire\":\r\n                if (options.type == \"circle\") {\r\n                    if (useWebP) {\r\n                        texture = `modules/jb2a_patreon/Library/Generic/Fire/FireRing_01_Circle_${options.effectData.fireColor == \"yellow\" ? \"red\" : options.effectData.fireColor}_Thumb.webp`;\r\n                    } else {\r\n                        texture = `jb2a.fire_ring.900px.${options.effectData.fireColor == \"yellow\" ? \"red\" : options.effectData.fireColor}`;\r\n                    }\r\n                } else if (options.type == \"wall\") {\r\n                    if (useWebP) {\r\n                        texture = `modules/jb2a_patreon/Library/4th_Level/Wall_Of_Fire/WallOfFire_01_${options.effectData.fireColor}_Thumb.webp`;\r\n                    } else {\r\n                        texture = `jb2a.wall_of_fire.300x100.${options.effectData.fireColor}`;\r\n                    }\r\n                }\r\n                break;\r\n            case \"force\":\r\n                if (options.type == \"circle\") {\r\n                    if (useWebP) {\r\n                        texture = `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${options.effectData.forceColor}_Sphere_Thumb.webp`;\r\n                    } else {\r\n                        texture = `jb2a.wall_of_force.sphere.${options.effectData.forceColor}`;\r\n                    }\r\n                } else if (options.type == \"panel\") {\r\n                    if (options.subtype == \"horizontal\") {\r\n                        if (useWebP) {\r\n                            texture = `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${options.effectData.forceColor}_H_Thumb.webp`;\r\n                        } else {\r\n                            texture = `jb2a.wall_of_force.horizontal.${options.effectData.forceColor}`;\r\n                        }\r\n                    } else if (options.subtype == \"vertical\") {\r\n                        if (useWebP) {\r\n                            texture = `modules/jb2a_patreon/Library/5th_Level/Wall_Of_Force/WallOfForce_01_${options.effectData.forceColor}_V_Thumb.webp`;\r\n                        } else {\r\n                            texture = `jb2a.wall_of_force.vertical.${options.effectData.forceColor}`;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return texture;\r\n    }\r\n\r\n    static registerHooks() {\r\n        if (!game.user.isGM) return;\r\n        Hooks.on(\"updateMeasuredTemplate\", wallSpell.updateMeasuredTemplate);\r\n        Hooks.on(\"deleteMeasuredTemplate\", wallSpell.deleteMeasuredTemplate);\r\n        Hooks.on(\"preUpdateToken\", wallSpell.preUpdateToken);\r\n        Hooks.on(\"updateCombat\", wallSpell.updateCombat);\r\n        return;\r\n    }\r\n\r\n    static async updateCombat(combat) {\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(\"Is first GM: \", isGM);\r\n        if (!isGM) return;\r\n        //console.log(\"Updating combat: \", combat);\r\n        const token = canvas.tokens.get(combat.previous.tokenId);\r\n        if (!token) return;\r\n        const grid = canvas?.scene?.data.grid;\r\n        if (!grid) return false;\r\n        const tokenPos = { x: token.data.x, y: token.data.y };\r\n        await token.document.unsetFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\");\r\n        const wallTemplates = canvas.templates.placeables.filter(template =>\r\n        (template.document.getFlag('advancedspelleffects', 'wallOperationalData.damageOnTouch') == true\r\n            || template.document.getFlag('advancedspelleffects', 'wallOperationalData.savingThrowOnTouch') == true));\r\n        //console.log(\"wall templates: \", wallTemplates);\r\n        if (wallTemplates.length && wallTemplates.length > 0) {\r\n            for await (let wallTemplate of wallTemplates) {\r\n                const templateDocument = wallTemplate.document;\r\n                if (!templateDocument) return;\r\n                //console.log(templateDocument.data);\r\n                const templateData = templateDocument.data;\r\n                if (!templateData) return;\r\n                const aseData = templateDocument.getFlag(\"advancedspelleffects\", 'wallOperationalData');\r\n                const aseEffectData = templateDocument.getFlag(\"advancedspelleffects\", 'wallEffectData');\r\n                if (!aseData || !aseData.damageOnTouch) return;\r\n                if (!aseData.checkForTouch) return;\r\n                const wallData = {\r\n                    wallName: templateDocument.getFlag(\"advancedspelleffects\", \"wallName\") ?? \"\",\r\n                    wallTemplateId: templateDocument.id,\r\n                    wallType: templateDocument.getFlag(\"advancedspelleffects\", 'wallType') ?? '',\r\n                    wallOperationalData: aseData,\r\n                    wallEffectData: aseEffectData,\r\n                }\r\n                const wallName = templateDocument.getFlag(\"advancedspelleffects\", \"wallName\") ?? \"\";\r\n                const mTemplate = templateDocument.object;\r\n                const templateDetails = { x: templateDocument.data.x, y: templateDocument.data.y, shape: templateData.t, distance: mTemplate.data.distance };\r\n                //console.log(\"Wall template details: \", templateDetails);\r\n                if (templateDetails.shape == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n                    //console.log(\"Circle template detected...\");\r\n                    let templateCenter = { x: templateDetails.x, y: templateDetails.y };\r\n                    let templateRadius = (templateDetails.distance / 5) * grid;\r\n                    const sideToCheck = templateDocument.getFlag(\"advancedspelleffects\", \"wallOperationalData.damageSide\");\r\n                    //console.log(\"Side to check: \", sideToCheck);\r\n\r\n                    const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n                    const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n\r\n                    widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                        for (let y = startY; y < token.data.height; y++) {\r\n                            const currGrid = {\r\n                                x: tokenPos.x + x * grid,\r\n                                y: tokenPos.y + y * grid,\r\n                            };\r\n                            let inRange = false;\r\n                            if (sideToCheck == \"inside\") {\r\n                                inRange = utilFunctions.isPointInCircle(templateCenter, currGrid, 0, templateRadius);\r\n                            } else if (sideToCheck == \"outside\") {\r\n                                const outerRadius = templateRadius + ((aseData.range / 5) * grid);\r\n                                inRange = utilFunctions.isPointInCircle(templateCenter, currGrid, templateRadius, outerRadius);\r\n                            }\r\n                            if (inRange) {\r\n                                wallSpell.activateWallEffect(token, wallData);\r\n                                break widthLoop;\r\n                            } else {\r\n                                console.log(\"Token not in range of wall circle: \", token.name);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    let templatePointA = { x: templateDetails.x, y: templateDetails.y };\r\n                    const templateAngle = (templateData.direction) * (Math.PI / 180.0);\r\n                    const templateLength = ((templateData.distance) * grid) / 5.0;\r\n                    const templatePointBX = templatePointA.x + (templateLength * Math.cos(templateAngle));\r\n                    const templatePointBY = templatePointA.y + (templateLength * Math.sin(templateAngle));\r\n                    let templatePointB = { x: templatePointBX, y: templatePointBY };\r\n                    if ((templatePointA.x > templatePointB.x && templatePointA.y > templatePointB.y) || (templatePointA.x < templatePointB.x && templatePointA.y > templatePointB.y)) {\r\n                        const temp = templatePointA;\r\n                        templatePointA = templatePointB;\r\n                        templatePointB = temp;\r\n                    } else if (templatePointA.x == templatePointB.x) {\r\n                        if (templatePointA.y > templatePointB.y) {\r\n                            const temp = templatePointA;\r\n                            templatePointA = templatePointB;\r\n                            templatePointB = temp;\r\n                        }\r\n                    } else if (templatePointA.y == templatePointB.y) {\r\n                        if (templatePointA.x > templatePointB.x) {\r\n                            const temp = templatePointA;\r\n                            templatePointA = templatePointB;\r\n                            templatePointB = temp;\r\n                        }\r\n                    }\r\n                    //console.log(\"Template Point A: \", templatePointA);\r\n                    //console.log(\"Template Point B: \", templatePointB);\r\n                    const sideToCheck = templateDocument.getFlag(\"advancedspelleffects\", \"wallOperationalData.damageSide\");\r\n                    //console.log(\"Side to check: \", sideToCheck);\r\n                    const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n                    const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n\r\n                    widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                        for (let y = startY; y < token.data.height; y++) {\r\n                            const currGrid = {\r\n                                x: tokenPos.x + x * grid,\r\n                                y: tokenPos.y + y * grid,\r\n                            };\r\n                            const inRange = utilFunctions.isPointNearLine(templatePointA, templatePointB, currGrid, (aseData.range / 5) * grid);\r\n                            if (inRange) {\r\n                                let isOnSide = false;\r\n                                if (sideToCheck == 'bottom' || sideToCheck == 'left') {\r\n                                    isOnSide = utilFunctions.isPointOnLeft(templatePointA, templatePointB, currGrid);\r\n                                } else if (sideToCheck == 'top' || sideToCheck == 'right') {\r\n                                    isOnSide = utilFunctions.isPointOnLeft(templatePointB, templatePointA, currGrid);\r\n                                }\r\n                                if (isOnSide) {\r\n                                    wallSpell.activateWallEffect(token, wallData);\r\n                                    break widthLoop;\r\n                                } else {\r\n                                    console.log(\"Token not on side of wall: \", token.name);\r\n                                }\r\n                            } else {\r\n                                console.log(\"Token not in range of wall: \", token.name);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    static async preUpdateToken(tokenDocument, updateData) {\r\n        const isGM = utilFunctions.isFirstGM();\r\n        if (!isGM) return;\r\n\r\n        if ((!updateData.x && !updateData.y)) return;\r\n        const token = tokenDocument;\r\n        const grid = canvas?.scene?.data.grid;\r\n        if (!grid) return false;\r\n\r\n        const oldPos = { x: tokenDocument.data.x, y: tokenDocument.data.y };\r\n        let newPos = { x: 0, y: 0 };\r\n        newPos.x = (updateData.x) ? updateData.x : tokenDocument.data.x;\r\n        newPos.y = (updateData.y) ? updateData.y : tokenDocument.data.y;\r\n        const movementRay = new Ray(oldPos, newPos);\r\n\r\n        const templates = Array.from(canvas?.scene?.templates ?? {});\r\n        if (templates.length == 0) return;\r\n        let templateDocument = {};\r\n\r\n        let wallsTouched = token.getFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\") ?? [];\r\n        let wallName = \"\";\r\n        for (let i = 0; i < templates.length; i++) {\r\n\r\n            templateDocument = templates[i];\r\n            const templateData = templateDocument.data;\r\n            if (!templateData) return;\r\n            const aseData = templateDocument.getFlag(\"advancedspelleffects\", 'wallOperationalData');\r\n            const aseEffectData = templateDocument.getFlag(\"advancedspelleffects\", 'wallEffectData');\r\n            if (!aseData || !aseData.damageOnTouch) return;\r\n            if (!aseData.checkForTouch) return;\r\n            wallName = templateDocument.getFlag(\"advancedspelleffects\", \"wallName\") ?? \"\";\r\n            const mTemplate = templateDocument.object;\r\n            const templateDetails = { x: templateDocument.data.x, y: templateDocument.data.y, shape: mTemplate.shape, distance: mTemplate.data.distance };\r\n            const templatePointA = { x: templateDetails.x, y: templateDetails.y };\r\n            const templateAngle = (templateData.direction) * (Math.PI / 180.0);\r\n            const templateLength = ((templateData.distance) * grid) / 5.0;\r\n            const templatePointBX = templatePointA.x + (templateLength * Math.cos(templateAngle));\r\n            const templatePointBY = templatePointA.y + (templateLength * Math.sin(templateAngle));\r\n            const templatePointB = { x: templatePointBX, y: templatePointBY };\r\n\r\n            const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n            const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n\r\n            widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                for (let y = startY; y < token.data.height; y++) {\r\n\r\n                    const currGrid = {\r\n                        x: newPos.x + x * grid - templatePointA.x,\r\n                        y: newPos.y + y * grid - templatePointA.y,\r\n                    };\r\n                    const oldCurrGrid = {\r\n                        x: oldPos.x + x * grid - templatePointA.x,\r\n                        y: oldPos.y + y * grid - templatePointA.y,\r\n                    }\r\n                    let previousContains = templateDetails.shape?.contains(oldCurrGrid.x, oldCurrGrid.y);\r\n                    let contains = templateDetails.shape?.contains(currGrid.x, currGrid.y);\r\n                    if (templateData.t == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n                        previousContains = false;\r\n                        contains = false;\r\n                    }\r\n                    let crossed = false;\r\n                    if (!contains) {\r\n                        const dragCoordOld = {\r\n                            x: movementRay.A.x + x * grid,\r\n                            y: movementRay.A.y + y * grid,\r\n                        };\r\n                        const dragCoordNew = {\r\n                            x: movementRay.B.x + x * grid,\r\n                            y: movementRay.B.y + y * grid,\r\n                        };\r\n                        //console.log(\"Drag Coord Old: \", dragCoordOld);\r\n                        //console.log(\"Drag Coord New: \", dragCoordNew);\r\n                        if (templateData.t == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n\r\n                            crossed = utilFunctions.lineCrossesCircle(dragCoordOld, dragCoordNew, templatePointA, (templateDetails.distance / 5) * grid);\r\n                        } else {\r\n                            crossed = utilFunctions.lineCrossesLine(dragCoordOld, dragCoordNew, templatePointA, templatePointB);\r\n                        }\r\n                    }\r\n\r\n                    if (((previousContains && contains) || (!previousContains)) && (crossed || contains)) {\r\n                        //console.log(\"Token touched wall!\");\r\n                        if (wallsTouched.includes(templateDocument.id)) {\r\n                            console.log(`${token.name} has already been effected by this ${wallName} this turn - ${templateDocument.id}`);\r\n                            ui.notifications.info(game.i18n.format(\"ASE.WallSpellAlreadyEffected\", { name: token.name, wallName: wallName }));\r\n                            break widthLoop;\r\n                        } else {\r\n                            console.log(`${token.name} touched ${wallName} - ${templateDocument.id}`);\r\n                            ui.notifications.info(game.i18n.format(\"ASE.WallSpellTouchingWall\", { name: token.name, wallName: wallName }));\r\n                            wallsTouched.push(templateDocument.id);\r\n                            const wallData = {\r\n                                wallName: wallName,\r\n                                wallTemplateId: templateDocument.id,\r\n                                wallType: templateDocument.getFlag(\"advancedspelleffects\", 'wallType') ?? '',\r\n                                wallOperationalData: aseData,\r\n                                wallEffectData: aseEffectData,\r\n                            }\r\n                            //await token.setFlag(\"advancedspelleffects\", \"wallTouchedData\", tokenFlagData);\r\n                            await wallSpell.activateWallEffect(token, wallData);\r\n                            break widthLoop;\r\n                        }\r\n                    } else {\r\n                        //console.log(\"Token did not cross template area...\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        await token.setFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\", wallsTouched);\r\n    }\r\n\r\n    static async activateWallEffect(token, wallData) {\r\n        //console.log(\"Activating Wall Effect...\");\r\n        //console.log(\"Token: \", token);\r\n        //console.log(\"Wall Data: \", wallData);\r\n        const wallOperationalData = wallData.wallOperationalData;\r\n        const wallEffectData = wallData.wallEffectData;\r\n        function addTokenToText(token, damageTotal) {\r\n\r\n            return `<div class=\"midi-qol-flex-container\">\r\n      <div class=\"midi-qol-target-npc-GM midi-qol-target-name\" id=\"${token.id}\"> <b>${token.name}</b></div>\r\n      <div class=\"midi-qol-target-npc-Player midi-qol-target-name\" id=\"${token.id}\" style=\"display: none;\"> <b>${token.name}</b></div>\r\n      <div>\r\n      ${game.i18n.format(\"ASE.TookDamageMessage\", { damageTotal: damageTotal })}\r\n        \r\n      </div>\r\n      <div><img src=\"${token?.data?.img}\" height=\"30\" style=\"border:0px\"></div>\r\n    </div>`;\r\n\r\n        }\r\n\r\n        const casterActor = game.actors.get(wallOperationalData.casterActor);\r\n        const casterToken = canvas.tokens.get(wallOperationalData.casterToken);\r\n        const spellItem = casterActor.items.get(wallOperationalData.item);\r\n        //console.log(\"Caster Token: \", casterToken);\r\n        //console.log(\"Caster Actor: \", casterActor);\r\n        //console.log(\"Spell Item: \", spellItem);\r\n\r\n        let itemData = spellItem.data;\r\n        itemData.data.components.concentration = false;\r\n\r\n        if (utilFunctions.isMidiActive()) {\r\n            const damageRoll = await new Roll(wallOperationalData.damage).evaluate({ async: true });\r\n            //console.log(damageRoll);\r\n            if (game.modules.get(\"dice-so-nice\")?.active) {\r\n                game.dice3d?.showForRoll(damageRoll);\r\n            }\r\n            let midiData;\r\n            midiData = await new MidiQOL.DamageOnlyWorkflow(casterActor, casterToken.document, damageRoll.total, wallOperationalData.damageType, [token],\r\n                damageRoll, {\r\n                flavor: `${wallData.wallName} - Damage Roll (${wallOperationalData.damage} ${wallOperationalData.damageType})`,\r\n                itemCardId: \"new\",\r\n                itemData: spellItem.data\r\n            });\r\n            const chatMessage = await game.messages.get(midiData.itemCardId);\r\n            let chatMessageContent = await duplicate(chatMessage.data.content);\r\n            let newChatmessageContent = $(chatMessageContent);\r\n\r\n            newChatmessageContent.find(\".midi-qol-hits-display\").empty();\r\n            newChatmessageContent.find(\".midi-qol-hits-display\").append(\r\n                $(addTokenToText(token, damageRoll.total))\r\n            );\r\n            await chatMessage.update({ content: newChatmessageContent.prop('outerHTML') });\r\n            await ui.chat.scrollBottom();\r\n        }\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(wallEffectData.wallSpellDmgSound)\r\n            .delay(Number(wallEffectData.wallSpellDmgSoundDelay) ?? 0)\r\n            .volume(wallEffectData.wallSpellDmgVolume ?? 0.5)\r\n            .playIf(wallEffectData.wallSpellDmgSound && wallEffectData.wallSpellDmgSound != \"\")\r\n            .effect()\r\n            .file(`jb2a.impact.004.${wallEffectData?.fireImpactColor ?? 'orange'}`)\r\n            .attachTo(token)\r\n            .randomRotation()\r\n            .scaleIn(0.5, 200)\r\n            .scaleToObject()\r\n            .animateProperty(\"sprite\", \"rotation\", { duration: 1000, from: 0, to: 45 })\r\n            .randomOffset(0.5)\r\n            .repeats(4, 100, 250)\r\n            .play()\r\n        return;\r\n    }\r\n\r\n    static async updateMeasuredTemplate(template, changes) {\r\n        if (template.getFlag(\"advancedspelleffects\", \"wallSpellWallNum\") && (changes.x !== undefined || changes.y !== undefined || changes.direction !== undefined)) {\r\n            wallSpell.placeWalls(template, true);\r\n        }\r\n    }\r\n\r\n    static async deleteMeasuredTemplate(template) {\r\n        //console.log('template', template);\r\n        const walls = Tagger.getByTag([`wallSpell-${template.getFlag(\"advancedspelleffects\", \"wallType\")}-Wall${template.id}`]).map(wall => wall.id);\r\n        if (walls.length) {\r\n            await canvas.scene.deleteEmbeddedDocuments(\"Wall\", walls);\r\n        }\r\n    }\r\n\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        let wallSpellTemplates = Tagger.getByTag(`wallSpell-${effectOptions.wallType}-${casterActor.id}`);\r\n        let wsTemplateIds = [];\r\n        if (wallSpellTemplates.length > 0) {\r\n            wallSpellTemplates.forEach(template => {\r\n                wsTemplateIds.push(template.id);\r\n            });\r\n            await aseSocket.executeAsGM(\"deleteTemplates\", wsTemplateIds);\r\n        }\r\n        //loop through every token and remove the templateID from the flag wallTouchedData.wallsTouched that matches wsTemplateIds\r\n        const tokens = canvas.tokens.placeables;\r\n        let tokenDocument = {};\r\n        let wallsTouched = [];\r\n        for (let i = 0; i < tokens.length; i++) {\r\n            tokenDocument = tokens[i].document;\r\n            wallsTouched = tokenDocument.getFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\");\r\n            if (!wallsTouched || wallsTouched.length == 0) continue;\r\n            wallsTouched = wallsTouched.filter(wallId => !wsTemplateIds.includes(wallId));\r\n            await tokenDocument.setFlag(\"advancedspelleffects\", \"wallTouchedData.wallsTouched\", wallsTouched);\r\n        }\r\n    }\r\n\r\n    static async placeWalls(templateDocument, deleteOldWalls = false) {\r\n        //console.log(\"placing walls...\");\r\n        if (templateDocument.data.t === CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE) return;\r\n\r\n        const wallType = templateDocument.getFlag(\"advancedspelleffects\", \"wallType\") ?? \"\";\r\n        //console.log('wallType: ', wallType);\r\n        if (wallType != \"force\") return;\r\n\r\n        if (deleteOldWalls) {\r\n            const walls = Tagger.getByTag([`wallSpell-${wallType}-Wall${templateDocument.id}`]).map(wall => wall.id);\r\n            if (walls.length) {\r\n                await canvas.scene.deleteEmbeddedDocuments(\"Wall\", walls);\r\n            }\r\n        }\r\n\r\n        const template = templateDocument.object;\r\n        //console.log('template: ', template);\r\n\r\n        const walls = [];\r\n\r\n        if (templateDocument.data.t === CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n\r\n            const placedX = template.x;\r\n            const placedY = template.y;\r\n\r\n            let wall_number = 12;\r\n            let wall_angles = 2 * Math.PI / wall_number\r\n\r\n            let outerCircleRadius = template.shape.radius;\r\n\r\n            let lastPoint = false;\r\n            let firstPoint;\r\n            for (let i = 0; i < wall_number; i++) {\r\n                const currentPoint = [\r\n                    placedX + outerCircleRadius * Math.cos(i * wall_angles),\r\n                    placedY + outerCircleRadius * Math.sin(i * wall_angles)\r\n                ]\r\n                if (lastPoint) {\r\n                    walls.push({\r\n                        c: [...lastPoint, ...currentPoint],\r\n                        flags: { tagger: { tags: [`wallSpell-${wallType}-Wall${templateDocument.id}`] } },\r\n                        move: 20,\r\n                        sight: 0,\r\n                        light: 0,\r\n                        sound: 0\r\n                    })\r\n                }\r\n                lastPoint = [...currentPoint]\r\n                if (!firstPoint) firstPoint = [...currentPoint]\r\n            }\r\n\r\n            walls.push({\r\n                c: [...lastPoint, ...firstPoint],\r\n                flags: { tagger: { tags: [`wallSpell-${wallType}-Wall${templateDocument.id}`] } },\r\n                move: 20,\r\n                sight: 0,\r\n                light: 0,\r\n                sound: 0\r\n            })\r\n\r\n        } else {\r\n\r\n            const startPoint = template.ray.A;\r\n            const endPoint = template.ray.B;\r\n\r\n            walls.push({\r\n                c: [startPoint.x, startPoint.y, endPoint.x, endPoint.y],\r\n                flags: {\r\n                    tagger: { tags: [`wallSpell-${wallType}-Wall${templateDocument.id}`] },\r\n                    wallHeight: {\r\n                        wallHeightTop: templateDocument.getFlag('advancedspelleffects', 'dimensions').width,\r\n                        wallHeightBottom: 0\r\n                    }\r\n                },\r\n                move: 20,\r\n                sight: 0,\r\n                light: 0,\r\n                sound: 0\r\n            })\r\n\r\n        }\r\n        //console.log('walls: ', walls);\r\n        await aseSocket.executeAsGM(\"placeWalls\", walls);\r\n\r\n    }\r\n\r\n    static sourceSquareV(center, distance, direction) {\r\n        const gridSize = canvas.grid.h;\r\n        const length = (distance / 5) * gridSize;\r\n\r\n        const x = center.x + length * Math.cos(direction * Math.PI / 180);\r\n        const y = center.y + length * Math.sin(direction * Math.PI / 180);\r\n        //console.log(`x: ${x}, y: ${y}`);\r\n        return { x: x, y: y };\r\n    }\r\n\r\n    static sourceSquare(center, widthSquares, heightSquares) {\r\n\r\n        const gridSize = canvas.grid.h;\r\n        const h = gridSize * heightSquares;\r\n        const w = gridSize * widthSquares;\r\n\r\n        const bottom = center.y + h / 2;\r\n        const left = center.x - w / 2;\r\n        const top = center.y - h / 2;\r\n        const right = center.x + w / 2;\r\n\r\n        const rightSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 45,\r\n            x: right,\r\n            y: top,\r\n        }));\r\n        const bottomSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 45,\r\n            x: left,\r\n            y: bottom,\r\n        }));\r\n        const leftSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 135,\r\n            x: left,\r\n            y: top,\r\n        }));\r\n        const topSpots = [...new Array(1)].map((_, i) => ({\r\n            direction: 225,\r\n            x: right,\r\n            y: top,\r\n        }));\r\n        //console.log(\"topSpots: \", topSpots);\r\n        // console.log(\"leftSpots: \", leftSpots);\r\n        //console.log(\"bottomSpots: \", bottomSpots);\r\n        //console.log(\"rightSpots: \", rightSpots);\r\n        const allSpots = [\r\n            ...rightSpots.slice(Math.floor(rightSpots.length / 2)),\r\n            ...bottomSpots,\r\n            ...leftSpots,\r\n            ...topSpots,\r\n            ...rightSpots.slice(0, Math.floor(rightSpots.length / 2)),\r\n        ];\r\n        //console.log(\"allSpots: \", allSpots);\r\n        return {\r\n            x: left,\r\n            y: top,\r\n            center,\r\n            top,\r\n            bottom,\r\n            left,\r\n            right,\r\n            h,\r\n            w,\r\n            heightSquares,\r\n            widthSquares,\r\n            allSpots,\r\n        };\r\n    };\r\n\r\n    static async pickFireSide(templateDocument) {\r\n        const wallData = templateDocument?.data;\r\n        if (!wallData) return;\r\n        let buttonDialogData;\r\n        if (wallData.t == CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n            buttonDialogData = {\r\n                title: \"Pick dome/ring/sphere damaging side\",\r\n                buttons: [\r\n                    {\r\n                        label: \"Inside\",\r\n                        value: 'inside'\r\n                    },\r\n                    {\r\n                        label: \"Outside\",\r\n                        value: 'outside'\r\n                    },\r\n                ]\r\n            };\r\n        } else {\r\n            const direction = wallData.direction;\r\n            if ((direction == 0 || direction == 180)) {\r\n                buttonDialogData = {\r\n                    title: \"Pick wall damaging side\",\r\n                    buttons: [\r\n                        {\r\n                            label: \"Top\",\r\n                            value: 'top'\r\n                        },\r\n                        {\r\n                            label: \"Bottom\",\r\n                            value: 'bottom'\r\n                        },\r\n                    ]\r\n                };\r\n            } else {\r\n                buttonDialogData = {\r\n                    title: \"Pick wall damaging side\",\r\n                    buttons: [\r\n                        {\r\n                            label: \"Left\",\r\n                            value: 'left'\r\n                        },\r\n                        {\r\n                            label: \"Right\",\r\n                            value: 'right'\r\n                        },\r\n                    ]\r\n                };\r\n            }\r\n\r\n        }\r\n        let damageSidePicked = await warpgate.buttonDialog(buttonDialogData, 'column');\r\n        if (!damageSidePicked) return;\r\n        await templateDocument.setFlag('advancedspelleffects', 'wallOperationalData.damageSide', damageSidePicked);\r\n        //console.log(\"damageSidePicked: \", damageSidePicked);\r\n    }\r\n\r\n    static async handleOnCast(templateDocument) {\r\n        const wallData = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData');\r\n        if (!wallData) return;\r\n        const wallEffectData = templateDocument.getFlag('advancedspelleffects', 'wallEffectData');\r\n        const grid = canvas?.scene?.data.grid;\r\n        if (!grid) return false;\r\n        const damageOnCast = wallData.damageOnCast;\r\n        const damageType = wallData.damageType;\r\n        const wallDamage = wallData.damage;\r\n        const halfDamOnSave = wallData.halfDamOnSave ?? true;\r\n        const savingThrowOnCast = wallData.savingThrowOnCast;\r\n        const mTemplate = templateDocument.object;\r\n        const templateDetails = { x: templateDocument.data.x, y: templateDocument.data.y, shape: mTemplate.shape, distance: mTemplate.data.distance };\r\n        const chatMessageId = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData.chatMessage');\r\n        const chatMessage = await game.messages.get(chatMessageId);\r\n        const casterActorId = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData.casterActor');\r\n        const casterActor = await game.actors.get(casterActorId);\r\n        const wallItemId = templateDocument.getFlag('advancedspelleffects', 'wallOperationalData.item');\r\n        const wallItem = await casterActor.items.get(wallItemId);\r\n        //console.log(wallItem);\r\n        if (!chatMessage) {\r\n            ui.notifications.info(`No chat message found for wall spell, no damage will be applied`);\r\n            return;\r\n        }\r\n        if (savingThrowOnCast) {\r\n            const saveType = wallData.savingThrow;\r\n            const saveDC = wallData.savingThrowDC;\r\n            const tokens = canvas.tokens.placeables;\r\n            const targets = [];\r\n            if (tokens.length > 0) {\r\n                for (let i = 0; i < tokens.length; i++) {\r\n                    const token = tokens[i];\r\n                    const startX = token.data.width >= 1 ? 0.5 : (token.data.width / 2);\r\n                    const startY = token.data.height >= 1 ? 0.5 : (token.data.height / 2);\r\n                    widthLoop: for (let x = startX; x < token.data.width; x++) {\r\n                        for (let y = startY; y < token.data.height; y++) {\r\n                            const currGrid = {\r\n                                x: token.data.x + x * grid - templateDetails.x,\r\n                                y: token.data.y + y * grid - templateDetails.y,\r\n                            };\r\n                            let contains = templateDetails.shape?.contains(currGrid.x, currGrid.y);\r\n\r\n                            if (contains) {\r\n                                targets.push(token);\r\n                                break widthLoop;\r\n                            } else {\r\n                                //console.log(\"Token did not cross template area...\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //console.log(\"targets: \", targets);\r\n            //game.user.updateTokenTargets(targets);\r\n            if (targets.length && targets.length > 0) {\r\n                //console.log('chat message', chatMessage);\r\n                let chatMessageContent = await duplicate(chatMessage.data.content);\r\n                let targetTokens = new Set();\r\n                let saves = new Set();\r\n                let newChatmessageContent = $(chatMessageContent);\r\n                newChatmessageContent.find(\".midi-qol-saves-display\").empty();\r\n                if (halfDamOnSave) {\r\n                    let damage = await new Roll(wallDamage).evaluate({ async: true });\r\n                    for await (let targetToken of targets) {\r\n                        let targetTokenAbilities = targetToken?.actor?.data?.data?.abilities ?? {};\r\n                        let targetTokenSaveMod = targetTokenAbilities[saveType]?.save ?? 0;\r\n                        let saveRoll = await new Roll(\"1d20+@mod\", { mod: targetTokenSaveMod }).evaluate({ async: true });\r\n                        let save = saveRoll.total;\r\n                        targetTokens.add(targetToken)\r\n                        if (save >= saveDC) {\r\n                            saves.add(targetToken)\r\n                        }\r\n                        //console.log(\"Adding token to chat card...\");\r\n                        newChatmessageContent.find(\".midi-qol-saves-display\").append(\r\n                            $(wallSpell.addTokenToText(targetToken, save, saveDC, damage))\r\n                        );\r\n                        //console.log(\"Wall Effect Data: \", wallEffectData);\r\n                        new Sequence(\"Advanced Spell Effects\")\r\n                            .sound()\r\n                            .file(wallEffectData.wallSpellDmgSound)\r\n                            .delay(Number(wallEffectData.wallSpellDmgSoundDelay) ?? 0)\r\n                            .volume(wallEffectData.wallSpellDmgVolume ?? 0.5)\r\n                            .playIf(wallEffectData.wallSpellDmgSound && wallEffectData.wallSpellDmgSound != \"\")\r\n                            .effect()\r\n                            .file(`jb2a.impact.004.${wallEffectData?.fireImpactColor ?? 'orange'}`)\r\n                            .attachTo(targetToken)\r\n                            .randomRotation()\r\n                            .scaleIn(0.5, 200)\r\n                            .animateProperty(\"sprite\", \"rotation\", { duration: 1000, from: 0, to: 45 })\r\n                            .randomOffset(0.5)\r\n                            .repeats(4, 100, 250)\r\n                            .play()\r\n                    }\r\n                    await chatMessage.update({ content: newChatmessageContent.prop('outerHTML') });\r\n                    await ui.chat.scrollBottom();\r\n                    MidiQOL.applyTokenDamage(\r\n                        [{ damage: damage.total, type: damageType }],\r\n                        damage.total,\r\n                        targetTokens,\r\n                        wallItem,\r\n                        saves\r\n                    );\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    static addTokenToText(token, roll, dc, damageRoll) {\r\n        //console.log(damageRoll);\r\n        let saveResult = roll >= dc ? true : false;\r\n\r\n        return `<div class=\"midi-qol-flex-container\">\r\n      <div class=\"midi-qol-target-npc-GM midi-qol-target-name\" id=\"${token.id}\"> <b>${token.name}</b></div>\r\n      <div class=\"midi-qol-target-npc-Player midi-qol-target-name\" id=\"${token.id}\" style=\"display: none;\"> <b>${token.name}</b></div>\r\n      <div>\r\n      ${saveResult ? game.i18n.format(\"ASE.SavePassMessage\", { saveTotal: roll, damageTotal: Math.floor(damageRoll.total / 2) }) : game.i18n.format(\"ASE.SaveFailMessage\", { saveTotal: roll, damageTotal: damageRoll.total })}\r\n      </div>\r\n      <div><img src=\"${token?.data?.img}\" height=\"30\" style=\"border:0px\"></div>\r\n    </div>`;\r\n    }\r\n\r\n    static async placePanels(aseData, template, panelDiag, type) {\r\n\r\n        wallSpell.playEffects(aseData, template);\r\n        wallSpell.placeWalls(template);\r\n        /*console.log(\"wofPanelDiag: \", panelDiag);\r\n        console.log(\"type: \", type);\r\n        console.log(\"aseData: \", aseData);\r\n        console.log(\"template: \", template);*/\r\n\r\n        const gridSize = canvas.grid.h;\r\n        const previousTemplateData = template.data;\r\n        //console.log(\"previousTemplateData: \", previousTemplateData);\r\n        let panelsRemaining = panelDiag.data.aseData.flags.panelCount;\r\n        //console.log(\"Panels Remaining: \", panelsRemaining);\r\n\r\n        const nextTemplateData = template.toObject();\r\n        nextTemplateData.flags.advancedspelleffects['placed'] = false;\r\n        delete nextTemplateData[\"_id\"];\r\n        //console.log(\"nextTemplateData: \", nextTemplateData);\r\n        //console.log(\"previousTemplateData: \", previousTemplateData);\r\n        nextTemplateData.flags.tagger.tags[1] = (Number(nextTemplateData.flags.tagger.tags[1]) + 1).toString();\r\n        if (panelsRemaining < 2 || !panelDiag.rendered) {\r\n            panelDiag.submit();\r\n            return\r\n        };\r\n\r\n        panelDiag.data.aseData.flags.panelCount--;\r\n        panelDiag.render(true);\r\n\r\n        let previousTemplateCenter = {};\r\n        let square;\r\n\r\n        let updateTemplateLocation;\r\n\r\n        if (type == \"h-panels\") {\r\n            if (previousTemplateData.direction == 45) {\r\n                previousTemplateCenter = {\r\n                    x: previousTemplateData.x + (((previousTemplateData.flags.advancedspelleffects.dimensions.length / 5) * canvas.grid.size)) / 2,\r\n                    y: previousTemplateData.y + (((previousTemplateData.flags.advancedspelleffects.dimensions.width / 5) * canvas.grid.size)) / 2\r\n                };\r\n            } else if (previousTemplateData.direction == 135) {\r\n                previousTemplateCenter = {\r\n                    x: previousTemplateData.x - (((previousTemplateData.flags.advancedspelleffects.dimensions.length / 5) * canvas.grid.size)) / 2,\r\n                    y: previousTemplateData.y + (((previousTemplateData.flags.advancedspelleffects.dimensions.width / 5) * canvas.grid.size)) / 2\r\n                };\r\n            } else if (previousTemplateData.direction == 225) {\r\n                previousTemplateCenter = {\r\n                    x: previousTemplateData.x - (((previousTemplateData.flags.advancedspelleffects.dimensions.length / 5) * canvas.grid.size)) / 2,\r\n                    y: previousTemplateData.y - (((previousTemplateData.flags.advancedspelleffects.dimensions.width / 5) * canvas.grid.size)) / 2\r\n                };\r\n            }\r\n            const previousTemplateWidthSquares = previousTemplateData.flags.advancedspelleffects.dimensions.length / 5;\r\n            const previousTemplateHeightSquares = previousTemplateData.flags.advancedspelleffects.dimensions.width / 5;\r\n            square = wallSpell.sourceSquare({ x: previousTemplateCenter.x, y: previousTemplateCenter.y },\r\n                previousTemplateWidthSquares, previousTemplateHeightSquares);\r\n\r\n\r\n\r\n        } else if (type == \"v-panels\") {\r\n\r\n            square = wallSpell.sourceSquareV({ x: previousTemplateData.x, y: previousTemplateData.y },\r\n                previousTemplateData.distance, previousTemplateData.direction);\r\n            nextTemplateData.x = square.x;\r\n            nextTemplateData.y = square.y;\r\n        }\r\n        const displayTemplateData = JSON.parse(JSON.stringify(nextTemplateData));\r\n        delete displayTemplateData.flags.advancedspelleffects[\"wallSpellWallNum\"];\r\n        let displayTemplate = (await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', [displayTemplateData]))[0];\r\n        // console.log(\"square: \", square);\r\n        let currentSpotIndex = 0;\r\n        updateTemplateLocation = async (crosshairs) => {\r\n            //console.log(\"crosshairs: \", crosshairs);\r\n            while (crosshairs.inFlight) {\r\n                if (!panelDiag.rendered) {\r\n                    crosshairs.inFlight = false;\r\n                    return;\r\n                }\r\n                await warpgate.wait(100);\r\n                //console.log(displayTemplate);\r\n                if (!displayTemplate) return;\r\n                const verticalTemplate = displayTemplate.data.t == CONST.MEASURED_TEMPLATE_TYPES.RAY;\r\n                //console.log(\"Vertical Template:\", verticalTemplate);\r\n                let ray;\r\n                let angle;\r\n                if (!verticalTemplate) {\r\n                    const totalSpots = square.allSpots.length;\r\n                    const radToNormalizedAngle = (rad) => {\r\n                        let angle = (rad * 180 / Math.PI) % 360;\r\n\r\n                        // offset the angle for even-sided tokens, because it's centered in the grid it's just wonky without the offset\r\n                        if (square.heightSquares % 2 === 1 && square.widthSquares % 2 === 1) {\r\n                            angle -= (360 / totalSpots) / 2;\r\n                        }\r\n                        const normalizedAngle = Math.round(angle / (360 / totalSpots)) * (360 / totalSpots);\r\n                        return normalizedAngle < 0\r\n                            ? normalizedAngle + 360\r\n                            : normalizedAngle;\r\n                    }\r\n\r\n                    ray = new Ray(square.center, crosshairs);\r\n                    angle = radToNormalizedAngle(ray.angle);\r\n                    const spotIndex = Math.ceil(angle / 360 * totalSpots);\r\n\r\n                    if (spotIndex === currentSpotIndex) {\r\n                        continue;\r\n                    }\r\n\r\n                    currentSpotIndex = spotIndex;\r\n                    const spot = square.allSpots[currentSpotIndex];\r\n\r\n                    if (!displayTemplate) return;\r\n                    await displayTemplate.update({ ...spot });\r\n                } else {\r\n                    ray = new Ray(square, crosshairs);\r\n                    angle = (ray.angle * 180 / Math.PI);\r\n\r\n                    if (angle == displayTemplate.data.direction) {\r\n                        continue;\r\n                    }\r\n                    if (!displayTemplate) return;\r\n                    await displayTemplate.update({ direction: angle });\r\n                }\r\n            }\r\n        }\r\n\r\n        const targetConfig = {\r\n            drawIcon: false,\r\n            drawOutline: false,\r\n            interval: 20\r\n        }\r\n        const rotateCrosshairs = await warpgate.crosshairs.show(\r\n            targetConfig,\r\n            {\r\n                show: updateTemplateLocation\r\n            });\r\n        if (rotateCrosshairs.cancelled) {\r\n            if (canvas.scene.templates.get(displayTemplate.id)) {\r\n                await displayTemplate.delete();\r\n            }\r\n            game.user.updateTokenTargets();\r\n            panelDiag.submit();\r\n            return;\r\n        }\r\n        const newFlags = {\r\n            flags: {\r\n                advancedspelleffects: {\r\n                    placed: true\r\n                }\r\n            }\r\n        }\r\n        if (type == \"v-panels\") {\r\n            newFlags.flags.advancedspelleffects[\"wallSpellWallNum\"] = nextTemplateData.flags.advancedspelleffects[\"wallSpellWallNum\"]\r\n        }\r\n\r\n        await displayTemplate.update(newFlags);\r\n        wallSpell.placePanels(aseData, displayTemplate, panelDiag, type);\r\n\r\n    }\r\n\r\n    static playEffects(aseData, template) {\r\n        //console.log(\"Playing effects...\");\r\n        //console.log(\"template: \", template);\r\n        //console.log(\"aseData: \", aseData);\r\n        if (template.data.t === CONST.MEASURED_TEMPLATE_TYPES.CIRCLE) {\r\n\r\n            new Sequence()\r\n                .sound()\r\n                .file(aseData.flags.wallSpellSound)\r\n                .delay(Number(aseData.flags.wallSpellSoundDelay) ?? 0)\r\n                .volume(aseData.flags.wallSpellVolume ?? 0.5)\r\n                .playIf(aseData.flags.wallSpellSound && aseData.flags.wallSpellSound != \"\")\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .scaleToObject()\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .zIndex(1000)\r\n                .persist()\r\n                .play()\r\n\r\n        } else if (template.data.t === CONST.MEASURED_TEMPLATE_TYPES.RECTANGLE) {\r\n\r\n            new Sequence()\r\n                .sound()\r\n                .file(aseData.flags.wallSpellSound)\r\n                .delay(Number(aseData.flags.wallSpellSoundDelay) ?? 0)\r\n                .volume(aseData.flags.wallSpellVolume ?? 0.5)\r\n                .playIf(aseData.flags.wallSpellSound && aseData.flags.wallSpellSound != \"\")\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .scaleToObject()\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .tilingTexture({\r\n                    x: aseData.flags.wallSegmentSize / 10,\r\n                    y: aseData.flags.wallSegmentSize / 10\r\n                })\r\n                .belowTokens()\r\n                .zIndex(-1000)\r\n                .persist()\r\n                .play()\r\n\r\n        } else {\r\n\r\n            new Sequence()\r\n                .sound()\r\n                .file(aseData.flags.wallSpellSound)\r\n                .delay(Number(aseData.flags.wallSpellSoundDelay) ?? 0)\r\n                .volume(aseData.flags.wallSpellVolume ?? 0.5)\r\n                .playIf(aseData.flags.wallSpellSound && aseData.flags.wallSpellSound != \"\")\r\n                .effect(aseData.texture)\r\n                .attachTo(template)\r\n                .stretchTo(template, { attachTo: true, onlyX: true })\r\n                .fadeIn(250)\r\n                .fadeOut(250)\r\n                .persist()\r\n                .play()\r\n        }\r\n\r\n    }\r\n\r\n    static getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        const dieOptions = [\r\n            {'d4': 'd4'},\r\n            {'d6': 'd6'},\r\n            {'d8': 'd8'},\r\n            {'d10': 'd10'},\r\n            {'d12': 'd12'},\r\n            {'d20': 'd20'}\r\n        ];\r\n\r\n        const wallTypeOptions = [\r\n            //'thorns': \"Wall of Thorns\",\r\n            {'fire': \"Wall of Fire\"},\r\n            {'force': \"Wall of Force\"},\r\n            //'ice': \"Wall of Ice\",\r\n            //'light': \"Wall of Light\",\r\n            //'sand': \"Wall of Sand\",\r\n            //'stone': \"Wall of Stone\",\r\n            //'water': \"Wall of Water\"\r\n        ];\r\n\r\n        const wallType = currFlags.wallType ?? 'fire';\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallTypeOptionsLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallTypeOptionsTooltip\"),\r\n            type: 'dropdown',\r\n            options: wallTypeOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.wallType',\r\n            flagName: 'wallType',\r\n            flagValue: currFlags.wallType ?? 'fire',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallUseWebPLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallUseWebPTooltip\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.useWebP',\r\n            flagName: 'useWebP',\r\n            flagValue: currFlags.useWebP ?? false,\r\n        });\r\n\r\n        if (wallType == 'fire') {\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.ScaleWithLevelLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.ScaleWithLevelTooltip\"),\r\n                type: 'checkbox',\r\n                name: 'flags.advancedspelleffects.effectOptions.levelScaling',\r\n                flagName: 'levelScaling',\r\n                flagValue: currFlags.levelScaling ?? true,\r\n            });\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.DamageDieCountLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.DamageDieCountTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.dmgDieCount',\r\n                flagName: 'dmgDieCount',\r\n                flagValue: currFlags.dmgDieCount ?? 5,\r\n            });\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.DamageDieLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.DamageDieTooltip\"),\r\n                type: 'dropdown',\r\n                options: dieOptions,\r\n                name: 'flags.advancedspelleffects.effectOptions.dmgDie',\r\n                flagName: 'dmgDie',\r\n                flagValue: currFlags.dmgDie ?? 'd8',\r\n            });\r\n\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.DamageBonusLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.DamageBonusTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.dmgMod',\r\n                flagName: 'dmgMod',\r\n                flagValue: currFlags.dmgMod ?? 0,\r\n            });\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallLengthLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallLengthTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.wallLength',\r\n                flagName: 'wallLength',\r\n                flagValue: currFlags.wallLength ?? 60,\r\n            });\r\n\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallHeightLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallHeightTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.wallHeight',\r\n                flagName: 'wallHeight',\r\n                flagValue: currFlags.wallHeight ?? 20,\r\n            });\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallWidthLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallWidthTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.wallWidth',\r\n                flagName: 'wallWidth',\r\n                flagValue: currFlags.wallWidth ?? 1,\r\n            });\r\n            animOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallOfFireColorLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallOfFireColorTooltip\"),\r\n                type: 'dropdown',\r\n                options: utilFunctions.getDBOptions('jb2a.wall_of_fire.300x100'),\r\n                name: 'flags.advancedspelleffects.effectOptions.fireColor',\r\n                flagName: 'fireColor',\r\n                flagValue: currFlags.fireColor ?? 'yellow',\r\n            });\r\n            animOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallOfFireImpactColorLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallOfFireImpactColorTooltip\"),\r\n                type: 'dropdown',\r\n                options: utilFunctions.getDBOptions('jb2a.impact.004'),\r\n                name: 'flags.advancedspelleffects.effectOptions.fireImpactColor',\r\n                flagName: 'fireImpactColor',\r\n                flagValue: currFlags.fireImpactColor ?? 'yellow',\r\n            });\r\n            soundOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundTooltip\"),\r\n                type: 'fileInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.wallSpellDmgSound',\r\n                flagName: 'wallSpellDmgSound',\r\n                flagValue: currFlags.wallSpellDmgSound ?? '',\r\n            });\r\n            soundOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundDelayLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallSpellDamageEffectSoundDelayTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.wallSpellDmgSoundDelay',\r\n                flagName: 'wallSpellDmgSoundDelay',\r\n                flagValue: currFlags.wallSpellDmgSoundDelay ?? 0,\r\n            });\r\n            soundOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallSpellDamageEffectVolumeLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallSpellDamageEffectVolumeTooltip\"),\r\n                type: 'rangeInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.wallSpellDmgVolume',\r\n                flagName: 'wallSpellDmgVolume',\r\n                flagValue: currFlags.wallSpellDmgVolume ?? 0.5,\r\n                min: 0,\r\n                max: 1,\r\n                step: 0.01,\r\n            });\r\n        }\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallRadiusLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallRadiusTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallRadius',\r\n            flagName: 'wallRadius',\r\n            flagValue: currFlags.wallRadius ?? 10,\r\n        });\r\n\r\n        if (wallType == 'force') {\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallSegmentSizeLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallSegmentSizeTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.wallSegmentSize',\r\n                flagName: 'wallSegmentSize',\r\n                flagValue: currFlags.wallSegmentSize ?? 10,\r\n            });\r\n\r\n            spellOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallPanelCountLabel\"),\r\n                tooltip: game.i18n.localize(\"ASE.WallPanelCountTooltip\"),\r\n                type: 'numberInput',\r\n                name: 'flags.advancedspelleffects.effectOptions.panelCount',\r\n                flagName: 'panelCount',\r\n                flagValue: currFlags.panelCount ?? 10,\r\n            });\r\n            animOptions.push({\r\n                label: game.i18n.localize(\"ASE.WallOfForceColorLabel\"),\r\n                type: 'dropdown',\r\n                options: utilFunctions.getDBOptions('jb2a.wall_of_force.horizontal'),\r\n                name: 'flags.advancedspelleffects.effectOptions.forceColor',\r\n                flagName: 'forceColor',\r\n                flagValue: currFlags.forceColor ?? 'blue',\r\n            });\r\n        }\r\n\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellInitialSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellInitialSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellSound',\r\n            flagName: 'wallSpellSound',\r\n            flagValue: currFlags.wallSpellSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellInitialSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellInitialSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellSoundDelay',\r\n            flagName: 'wallSpellSoundDelay',\r\n            flagValue: currFlags.wallSpellSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.WallSpellInitialVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.WallSpellInitialVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.wallSpellVolume',\r\n            flagName: 'wallSpellVolume',\r\n            flagValue: currFlags.wallSpellVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true,\r\n            \r\n        }\r\n\r\n    }\r\n}","import { aseSocket } from \"./aseSockets.js\";\r\nimport * as utilFunctions from \"./utilityFunctions.js\";\r\n//Importing spells\r\nimport { darkness } from \"./spells/darkness.js\";\r\nimport { detectMagic } from \"./spells/detectMagic.js\";\r\nimport { callLightning } from \"./spells/callLightning.js\";\r\nimport { fogCloud } from \"./spells/fogCloud.js\";\r\nimport { summonCreature } from \"./spells/summonCreature.js\";\r\nimport { witchBolt } from \"./spells/witchBolt.js\";\r\nimport { vampiricTouch } from \"./spells/vampiricTouch.js\";\r\nimport { moonBeam } from \"./spells/moonBeam.js\";\r\nimport { wallOfForce } from \"./spells/wallOfForce.js\";\r\nimport {wallOfFire } from \"./spells/wallOfFire.js\";\r\nimport { detectStuff } from \"./spells/detectStuff.js\";\r\nimport { wallSpell } from \"./spells/wallSpell.js\";\r\n\r\nexport class concentrationHandler {\r\n\r\n    static registerHooks() {\r\n        Hooks.on(\"deleteActiveEffect\", concentrationHandler._handleConcentration);\r\n    }\r\n\r\n    static async _handleConcentration(activeEffect) {\r\n        console.log(\"Handling removal of Concentration: \", activeEffect);\r\n        const isGM = utilFunctions.isFirstGM();\r\n        //console.log(\"Is first GM: \", isGM);\r\n        //if (!isGM) return;\r\n        if (activeEffect.data.label != 'Concentration' && activeEffect.data.label != game.i18n.localize(\"ASE.ConcentratingLabel\")) return;\r\n        let origin = activeEffect.data.origin?.split(\".\");\r\n        //console.log(\"Origin: \", origin);\r\n        if (!origin || origin?.length < 4) return false;\r\n        let itemId = origin[5] ?? origin[3];\r\n        let casterActor;\r\n        let casterToken;\r\n        let effectSource;\r\n        if (origin[0] == \"Actor\") {\r\n            casterActor = game.actors.get(origin[1]);\r\n            casterToken = await casterActor.getActiveTokens()[0];\r\n        }\r\n        else {\r\n            casterToken = canvas.tokens.get(origin[3]);\r\n            casterActor = casterToken.actor;\r\n        }\r\n        effectSource = casterActor.items.get(itemId).name;\r\n        //console.log(\"ASE Concentration removed - Effect Source: \", effectSource);\r\n        let item = casterActor.items.filter((item) => item.name == effectSource)[0] ?? undefined;\r\n        if (!item) return;\r\n        let aseEnabled = item.getFlag(\"advancedspelleffects\", 'enableASE') ?? false;\r\n        let effectOptions = item.getFlag(\"advancedspelleffects\", 'effectOptions') ?? {};\r\n        if (!aseEnabled) return;\r\n        const spellEffect = item.getFlag(\"advancedspelleffects\", 'spellEffect') ?? undefined;\r\n\r\n        switch (spellEffect) {\r\n            case game.i18n.localize(\"ASE.Darkness\"):\r\n                await darkness.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.DetectMagic'):\r\n                await detectMagic.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.DetectStuff'):\r\n                await detectStuff.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.CallLightning'):\r\n                await callLightning.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.FogCloud'):\r\n                await fogCloud.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.WitchBolt'):\r\n                await witchBolt.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.VampiricTouch'):\r\n                await vampiricTouch.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.Moonbeam'):\r\n                await moonBeam.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.WallOfForce'):\r\n                await wallOfForce.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.WallSpell'):\r\n                await wallSpell.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n            case game.i18n.localize('ASE.WallOfFire'):\r\n                console.log(\" REMOVING CONCENTRATION FOR Wall of Fire\");\r\n                await wallOfFire.handleConcentration(casterActor, casterToken, effectOptions);\r\n                return;\r\n        }\r\n        if (effectSource.includes(game.i18n.localize(\"ASE.Summon\"))) {\r\n            summonCreature.handleConcentration(casterActor, casterToken, effectOptions);\r\n            return;\r\n        }\r\n        console.log(\"ASE: Effect source not recognized...\");\r\n    }\r\n\r\n    static async addConcentration(actor, item) {\r\n        //console.log(\"item in addConcentration: \", item);\r\n        let selfTarget = item.actor.token ? item.actor.token.object : utilFunctions.getSelfTarget(item.actor);\r\n        if (!selfTarget)\r\n            return;\r\n\r\n        let concentrationName = game.i18n.localize(\"ASE.ConcentratingLabel\");\r\n        const inCombat = (game.combat?.turns.some(combatant => combatant.token?.id === selfTarget.id));\r\n        const effectData = {\r\n            changes: [],\r\n            origin: item.uuid,\r\n            disabled: false,\r\n            icon: \"modules/advancedspelleffects/icons/concentrate.png\",\r\n            label: concentrationName,\r\n            duration: {},\r\n            flags: { \"advancedspelleffects\": { isConcentration: item?.uuid } }\r\n        };\r\n        const convertedDuration = utilFunctions.convertDuration(item.data.data.duration, inCombat);\r\n        if (convertedDuration?.type === \"seconds\") {\r\n            effectData.duration = { seconds: convertedDuration.seconds, startTime: game.time.worldTime };\r\n        }\r\n        else if (convertedDuration?.type === \"turns\") {\r\n            effectData.duration = {\r\n                rounds: convertedDuration.rounds,\r\n                turns: convertedDuration.turns,\r\n                startRound: game.combat?.round,\r\n                startTurn: game.combat?.turn\r\n            };\r\n        }\r\n        await actor.createEmbeddedDocuments(\"ActiveEffect\", [effectData]);\r\n        //console.log(\"Done creating and adding effect to actor...\");\r\n        return true;\r\n        // return await actor.createEmbeddedDocuments(\"ActiveEffect\", [effectData]);\r\n\r\n    }\r\n\r\n}","import { concentrationHandler } from \"../concentrationHandler.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n//Contributed by Wasp - The Sequencer Guy\r\nexport class vampiricTouch {\r\n    static async cast(midiData) {\r\n        const tokenD = canvas.tokens.get(midiData.tokenId);\r\n        let tactor = midiData.actor;\r\n        const target = Array.from(midiData.targets)[0];\r\n        let effectOptions = midiData.item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n\r\n        let casterAnim = `jb2a.energy_strands.overlay.${effectOptions.vtCasterColor}.01`;\r\n        const casterSound = effectOptions.vtCasterSound ?? \"\";\r\n        const casterSoundDelay = Number(effectOptions.vtCasterSoundDelay) ?? 0;\r\n        const casterSoundVolume = effectOptions.vtCasterVolume ?? 1;\r\n\r\n        const impactSound = effectOptions.vtImpactSound;\r\n        const impactSoundDelay = Number(effectOptions.vtImpactSoundDelay) ?? 0;\r\n        const impactVolume = effectOptions.vtImpactVolume ?? 1;\r\n\r\n\r\n        const siphonSound = effectOptions.vtSiphonSound;\r\n        const siphonSoundDelay = Number(effectOptions.vtSiphonSoundDelay) ?? 0;\r\n        const siphonVolume = effectOptions.vtSiphonVolume ?? 1;\r\n\r\n        const itemData = midiData.item.data.data;\r\n        console.log(itemData);\r\n\r\n        const maxStrands = effectOptions.vtMaxStrands ?? 20;\r\n        const updates = {\r\n            embedded: {\r\n                Item: {}\r\n            }\r\n        };\r\n        const activationItemName = game.i18n.localize('ASE.VampiricTouchAttack');\r\n\r\n        updates.embedded.Item[activationItemName] = {\r\n            \"type\": \"spell\",\r\n            \"img\": midiData.item.img,\r\n            \"data\": {\r\n                \"ability\": \"\",\r\n                \"actionType\": itemData.actionType,\r\n                \"activation\": { \"type\": 'action', \"cost\": 1 },\r\n                \"damage\": itemData.damage,\r\n                \"level\": midiData.itemLevel,\r\n                \"preparation\": { \"mode\": 'atwill', \"prepared\": true },\r\n                \"range\": { \"value\": 5, \"units\": 'ft' },\r\n                \"school\": \"nec\",\r\n                \"target\": { \"value\": 1, \"type\": 'creature' },\r\n                \"description\": {\r\n                    \"value\": game.i18n.localize(\"ASE.VampiricTouchDescription\")\r\n                }\r\n            },\r\n            \"flags\": {\r\n                \"advancedspelleffects\": {\r\n                    \"enableASE\": true,\r\n                    \"spellEffect\": game.i18n.localize('ASE.VampiricTouchAttack'),\r\n                    \"castItem\": true,\r\n                    \"castStage\": \"preDamage\",\r\n                    'effectOptions': {\r\n                        'vtStrandColor': effectOptions.vtStrandColor,\r\n                        'vtImpactColor': effectOptions.vtImpactColor,\r\n                        'vtSiphonSound': siphonSound,\r\n                        'vtSiphonSoundDelay': siphonSoundDelay,\r\n                        'vtSiphonVolume': siphonVolume,\r\n                        'vtImpactSound': impactSound,\r\n                        'vtImpactSoundDelay': impactSoundDelay,\r\n                        'vtImpactVolume': impactVolume,\r\n                        'vtMaxStrands': maxStrands,\r\n                        'allowInitialMidiCall': true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n       /* if (game.modules.get(\"midi-qol\")?.active) {\r\n            missed = Array.from(midiData.hitTargets).length == 0;\r\n            damageTotal = midiData.damageRoll?.total ?? 12;\r\n            if (Array.from(midiData.hitTargets).length > 0) {\r\n                const updatedHP = tactor.data.data.attributes.hp.value + Math.floor(damageTotal / 2);\r\n                await tactor.update({\r\n                    \"data.attributes.hp.value\": Math.min(tactor.data.data.attributes.hp.max, updatedHP)\r\n                });\r\n            }\r\n            strandNum = Math.min(Math.floor(damageTotal), maxStrands);\r\n        }\r\n        */\r\n        new Sequence('Advanced Spell Effects')\r\n            .sound()\r\n            .file(casterSound)\r\n            .delay(casterSoundDelay)\r\n            .volume(casterSoundVolume)\r\n            .playIf(casterSound != \"\")\r\n            .effect()\r\n            .file(casterAnim)\r\n            .attachTo(tokenD)\r\n            .scaleToObject(1.15)\r\n            .zIndex(1)\r\n            .persist()\r\n            .name(`${tokenD.id}-vampiric-touch`)\r\n            .scaleIn(0, 12 * 200, { ease: \"easeInOutBack\" })\r\n            .scaleOut(0, 1000, { ease: \"easeInOutBack\" })\r\n            .fadeOut(1000)\r\n            //.scale(0.4)\r\n            .play()\r\n            \r\n        await warpgate.mutate(tokenD.document, updates, {}, { name: `${tactor.id}-vampiric-touch` });\r\n        ui.notifications.info(game.i18n.format(\"ASE.AddedAtWill\", { spellName: game.i18n.localize(\"ASE.VampiricTouchAttack\") }));\r\n        await ChatMessage.create({ content: `${tactor.name}'s hands are wrapped in darkness...` });\r\n        effectOptions.concentration = true;\r\n        let castItem = tactor.items.getName(activationItemName);\r\n        effectOptions.castItem = castItem.uuid;\r\n        effectOptions.targets = [target.document.uuid];\r\n        game.ASESpellStateManager.addSpell(midiData.itemUuid, effectOptions);\r\n\r\n    }\r\n    static async handleConcentration(casterActor, casterToken, effectOptions) {\r\n        //handle concentration removal for vampiric touch\r\n        await warpgate.revert(casterToken.document, `${casterActor.id}-vampiric-touch`);\r\n\r\n        ui.notifications.info(game.i18n.format(\"ASE.RemovedAtWill\", { spellName: game.i18n.localize(\"ASE.VampiricTouchAttack\") }));\r\n\r\n        await Sequencer.EffectManager.endEffects({ name: `${casterToken.id}-vampiric-touch` });\r\n\r\n        await ChatMessage.create({ content: `${casterActor.name}'s returns to normal.` });\r\n    }\r\n\r\n    static async activateTouch(midiData) {\r\n        const tokenD = canvas.tokens.get(midiData.tokenId);\r\n        let tactor = midiData.actor;\r\n        const target = Array.from(midiData.targets)[0];\r\n        console.log(\"ASE: Vampiric Touch Activated: target:\", target);\r\n        let missed = false;\r\n        let damageTotal = 4 * midiData.itemLevel;\r\n        let effectOptions = midiData.item.getFlag(\"advancedspelleffects\", 'effectOptions');\r\n        let strandAnim = `jb2a.energy_strands.range.standard.${effectOptions.vtStrandColor}`;\r\n        let impactAnim = `jb2a.impact.004.${effectOptions.vtImpactColor}`;\r\n        const siphonSound = effectOptions.vtSiphonSound;\r\n        const siphonSoundDelay = Number(effectOptions.vtSiphonSoundDelay) ?? 0;\r\n        const siphonVolume = effectOptions.vtSiphonVolume ?? 1;\r\n        const impactSound = effectOptions.vtImpactSound;\r\n        const impactSoundDelay = Number(effectOptions.vtImpactSoundDelay) ?? 0;\r\n        const impactVolume = effectOptions.vtImpactVolume ?? 1;\r\n        const maxStrands = Number(effectOptions.vtMaxStrands) ?? 20;\r\n        missed = Array.from(midiData.hitTargets).length == 0;\r\n        damageTotal = midiData.damageRoll?.total ?? 12;\r\n        if (Array.from(midiData.hitTargets).length > 0) {\r\n            const updatedHP = tactor.data.data.attributes.hp.value + Math.floor(damageTotal / 2);\r\n            await tactor.update({\r\n                \"data.attributes.hp.value\": Math.min(tactor.data.data.attributes.hp.max, updatedHP)\r\n            })\r\n        }\r\n        const strandNum = Math.min(Math.floor(damageTotal), maxStrands);\r\n        new Sequence('Advanced Spell Effects')\r\n            .sound()\r\n            .file(impactSound)\r\n            .delay(impactSoundDelay + 100)\r\n            .volume(impactVolume)\r\n            .playIf(impactSound != \"\")\r\n            .effect()\r\n            .file(impactAnim)\r\n            .atLocation(target)\r\n            .scaleToObject()\r\n            .missed(missed)\r\n            .delay(100)\r\n            .sound()\r\n            .file(siphonSound)\r\n            .delay(siphonSoundDelay)\r\n            .volume(siphonVolume)\r\n            .playIf(siphonSound != \"\" && !missed)\r\n            .effect()\r\n            .file(strandAnim)\r\n            .atLocation(target)\r\n            .playIf(!missed)\r\n            .stretchTo(tokenD)\r\n            .repeats(Math.max(1, strandNum), 100, 200)\r\n            .randomizeMirrorY()\r\n            .play()\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        //console.log(currFlags);\r\n        const vampiricTouchCasterAnim = 'jb2a.energy_strands.overlay';\r\n        const vampiricTouchStrandAnim = `jb2a.energy_strands.range.standard`;\r\n        const vampiricTouchImpactAnim = `jb2a.impact.004`;\r\n\r\n        const vampiricTouchCasterColorOptions = utilFunctions.getDBOptions(vampiricTouchCasterAnim);\r\n        const vampiricTouchStrandColorOptions = utilFunctions.getDBOptions(vampiricTouchStrandAnim);\r\n        const vampiricTouchImpactColorOptions = utilFunctions.getDBOptions(vampiricTouchImpactAnim);\r\n\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n        let spellOptions = [];\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.VTCasterEffectLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTCasterEffectTooltip'),\r\n            type: 'dropdown',\r\n            options: vampiricTouchCasterColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.vtCasterColor',\r\n            flagName: 'vtCasterColor',\r\n            flagValue: currFlags.vtCasterColor ?? 'blue',\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTCasterSoundLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTCasterSoundTooltip'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtCasterSound',\r\n            flagName: 'vtCasterSound',\r\n            flagValue: currFlags.vtCasterSound ?? '',\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTCasterSoundDelayLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTCasterSoundDelayTooltip'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtCasterSoundDelay',\r\n            flagName: 'vtCasterSoundDelay',\r\n            flagValue: currFlags.vtCasterSoundDelay ?? 0,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTCasterVolumeLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTCasterVolumeTooltip'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtCasterVolume',\r\n            flagName: 'vtCasterVolume',\r\n            flagValue: currFlags.vtCasterVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.VTSiphonEffectLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTSiphonEffectTooltip'),\r\n            type: 'dropdown',\r\n            options: vampiricTouchStrandColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.vtStrandColor',\r\n            flagName: 'vtStrandColor',\r\n            flagValue: currFlags.vtStrandColor ?? 'blue',\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTSiphonSoundLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTSiphonSoundTooltip'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtSiphonSound',\r\n            flagName: 'vtSiphonSound',\r\n            flagValue: currFlags.vtSiphonSound ?? '',\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTSiphonSoundDelayLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTSiphonSoundDelayTooltip'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtSiphonSoundDelay',\r\n            flagName: 'vtSiphonSoundDelay',\r\n            flagValue: currFlags.vtSiphonSoundDelay ?? 0,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTSiphonVolumeLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTSiphonVolumeTooltip'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtSiphonVolume',\r\n            flagName: 'vtSiphonVolume',\r\n            flagValue: currFlags.vtSiphonVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.VTImpactEffectLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTImpactEffectTooltip'),\r\n            type: 'dropdown',\r\n            options: vampiricTouchImpactColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.vtImpactColor',\r\n            flagName: 'vtImpactColor',\r\n            flagValue: currFlags.vtImpactColor ?? 'blue',\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTImpactSoundLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTImpactSoundTooltip'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtImpactSound',\r\n            flagName: 'vtImpactSound',\r\n            flagValue: currFlags.vtImpactSound ?? '',\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTImpactSoundDelayLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTImpactSoundDelayTooltip'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtImpactSoundDelay',\r\n            flagName: 'vtImpactSoundDelay',\r\n            flagValue: currFlags.vtImpactSoundDelay ?? 0,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.VTImpactVolumeLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTImpactVolumeTooltip'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtImpactVolume',\r\n            flagName: 'vtImpactVolume',\r\n            flagValue: currFlags.vtImpactVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.VTMaxStrandsLabel'),\r\n            tooltip: game.i18n.localize('ASE.VTMaxStrandsTooltip'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.vtMaxStrands',\r\n            flagName: 'vtMaxStrands',\r\n            flagValue: currFlags.vtMaxStrands ?? 20,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true,\r\n        }\r\n\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport function ChainLightningSequence(data) {\r\n    console.log(\"ChainLightningSequence: \", data);\r\n    const firstTarget = data.firstTarget;\r\n    //find if firstTarget is in data.failedSaves\r\n    let firstTargetFailedSave = false;\r\n    if(data.failedSaves){\r\n        for(let i = 0; i < data.failedSaves.length; i++){\r\n            if(data.failedSaves[i] == firstTarget){\r\n                firstTargetFailedSave = true;\r\n            }\r\n        }\r\n    }\r\n    //construct new object with each data.targets and whether or not they failed their save\r\n    let targets = [];\r\n    for(let i = 0; i < data.targets.length; i++){\r\n        let target = data.targets[i];\r\n        let failedSave = false;\r\n        if(data.failedSaves){\r\n            for(let j = 0; j < data.failedSaves.length; j++){\r\n                if(data.failedSaves[j] == target){\r\n                    failedSave = true;\r\n                }\r\n            }\r\n        }\r\n        //push to targets if not firstTarget\r\n        if(target != firstTarget){\r\n            targets.push({token: target, failedSave: failedSave});\r\n        }\r\n    }\r\n    console.log(\"ChainLightningSequence: targets: \", targets);\r\n    console.log(\"ChainLightningSequence: firstTargetFailedSave: \", firstTargetFailedSave);\r\n    let sequence = new Sequence()\r\n            .wait(350)\r\n            .sound()\r\n            .file(data.effectOptions.primarySound)\r\n            .delay(data.effectOptions.primarySoundDelay)\r\n            .volume(data.effectOptions.primarySoundVolume)\r\n            .playIf(data.effectOptions.primarySound != \"\")\r\n            .effect()\r\n            .file(`jb2a.chain_lightning.primary.${data.effectOptions.primaryBoltColor}`)\r\n            .atLocation(data.caster)\r\n            .stretchTo(data.firstTarget)\r\n            .randomizeMirrorY()\r\n            .effect()\r\n            .file(`jb2a.static_electricity.02.${data.effectOptions.saveFailEffectColor}`)\r\n            .atLocation(data.firstTarget)\r\n            .scaleToObject(1.3)\r\n            .randomRotation()\r\n            .duration(5000)\r\n            .delay(600)\r\n            .playIf(firstTargetFailedSave)\r\n            .wait(750)\r\n            for (let target of targets) {\r\n                let randomDelay = utilFunctions.getRandomInt(data.effectOptions.secondaryBoltDelayLower, data.effectOptions.secondaryBoltDelayUpper);\r\n                sequence.sound()\r\n                    .file(data.effectOptions.secondarySound)\r\n                    .delay(randomDelay + data.effectOptions.secondarySoundDelay)\r\n                    .volume(data.effectOptions.secondarySoundVolume)\r\n                    .playIf(data.effectOptions.secondarySound != \"\")\r\n                    .effect()\r\n                    .file(`jb2a.chain_lightning.secondary.${data.effectOptions.secondaryBoltColor}`)\r\n                    .atLocation(data.firstTarget)\r\n                    .stretchTo(target.token)\r\n                    .randomizeMirrorY()\r\n                    .delay(randomDelay)\r\n                    .effect()\r\n                    .file(`jb2a.static_electricity.02.${data.effectOptions.saveFailEffectColor}`)\r\n                    .atLocation(target.token)\r\n                    .scaleToObject(1.63)\r\n                    .randomRotation() \r\n                    .duration(5000)\r\n                    .delay(randomDelay + 400)\r\n                    .playIf(target.failedSave)\r\n            }\r\n\r\n            return sequence;\r\n}","import * as utilFunctions from \"../utilityFunctions.js\";\r\nimport { ChainLightningSequence } from \"../sequences/ChainLightningSequence.js\";\r\n//Courtesy of Wasp - The Sequencer Guy\r\nexport class chainLightning {\r\n\r\n    constructor(data) {\r\n        this.params = data;\r\n        this.actor = game.actors.get(this.params.actor.id);\r\n        this.token = canvas.tokens.get(this.params.tokenId);\r\n        this.item = this.params.item;\r\n        this.firstTarget = this.params.targets[0] ?? Array.from(this.params.targets)[0];\r\n        this.itemCardId = this.params.itemCardId;\r\n\r\n        this.originalDamage = this.params.damageTotal;\r\n\r\n        this.effectOptions = this.item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        this.spellLevel = this.params.itemLevel ? Number(this.params.itemLevel) : 6;\r\n        if (this.effectOptions.levelScaling || this.effectOptions.levelScaling === undefined) {\r\n            this.targetsToJumpTo = 3 + (this.spellLevel - 6);\r\n        }\r\n        else if (!this.effectOptions.levelScaling) {\r\n            this.targetsToJumpTo = Number(this.effectOptions.numJumps) ?? 3;\r\n        }\r\n\r\n\r\n        this.spellSaveDC = this.actor.data.data.attributes.spelldc;\r\n\r\n        this.targetData = [];\r\n\r\n    }\r\n\r\n\r\n    static registerHooks() {\r\n        return;\r\n    }\r\n    async cast() {\r\n        console.log(\"Running Chain Lightning...\");\r\n        if(!this.firstTarget) {\r\n            ui.notifications.error(\"Target Required\");\r\n            return;\r\n        }\r\n        //await this.rollInitialDamage();\r\n        await this.promptJumps();\r\n        console.log(this);\r\n        if(this.targetData) {\r\n            let targets = this.targetData.map(target => target.token.document.uuid);\r\n            targets.push(this.firstTarget.document.uuid);\r\n            let spellOptions = {\r\n                targetted: true,\r\n                targets: targets,\r\n                sequenceBuilder: ChainLightningSequence,\r\n                firstTarget: this.firstTarget.document.uuid,\r\n                effectOptions: this.effectOptions,\r\n                caster: this.token.document.uuid,\r\n                failedSaves: []\r\n            };\r\n            game.ASESpellStateManager.addSpell(this.item.uuid, spellOptions)\r\n            return;\r\n        }\r\n        /*if (!this.targetData) {\r\n            await this.playSequence();\r\n            return;\r\n        }\r\n        await this.rollSaves();\r\n        await this.playSequence();\r\n        if (game.modules.get(\"midi-qol\")?.active) {\r\n            await this.applyDamage();\r\n            await this.updateChatCards();\r\n        }*/\r\n    }\r\n\r\n    async promptJumps() {\r\n\r\n        let firstTarget = this.firstTarget;\r\n        let tokenD = this.token;\r\n        //console.log(\"firstTarget\", firstTarget);\r\n        //console.log(\"tokenD\", tokenD);\r\n        const potentialTargets = canvas.tokens.placeables.filter(function (target) {\r\n            return target.actor?.data?.data?.attributes.hp.value > 0\r\n                && canvas.grid.measureDistance(firstTarget, target) <= 32.5\r\n                && target !== firstTarget\r\n                && target !== tokenD\r\n        });\r\n\r\n        if (!potentialTargets.length) return;\r\n\r\n        const targetList = potentialTargets.map((target, index) => {\r\n            return `\r\n            <tr class=\"chain-lightning-target\" tokenId=\"${target.id}\">\r\n                <td class=\"chain-lightning-flex\">\r\n                    <img src=\"${target.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\"> - ${target.name}\r\n                </td>\r\n                <td>\r\n                    <input type=\"checkbox\" class='target' name=\"${index}\">\r\n                </td>\r\n            </tr>\r\n            `;\r\n        }).join('');\r\n\r\n        const content = `\r\n        <style>\r\n            .chain-lightning-flex {\r\n                display: inline-flex;\r\n                align-items: center;\r\n            }\r\n            .chain-lightning-flex img {\r\n                margin-right: 0.5rem;\r\n            }\r\n        </style>\r\n        <p>Your chain lightning can jump to <b>${this.targetsToJumpTo}</b> targets.</p>\r\n        <p>You have <b class=\"chain-lightning-count\">${this.targetsToJumpTo}</b> left to assign.</p>\r\n        <form class=\"flexcol\">\r\n            <table width=\"100%\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Potential Target</th>\r\n                        <th>Jump to</th>\r\n                    </tr>\r\n                    ${targetList}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n        `;\r\n\r\n        this.targetData = await new Promise(async resolve => {\r\n            let resolved = false;\r\n            new Dialog({\r\n                title: \"Chain Lightning: Choose Jump Targets\",\r\n                content,\r\n                buttons: {\r\n                    one: {\r\n                        icon: `<i class=\"fas fa-bolt\"></i>`,\r\n                        label: \"FIRE AT WILL\",\r\n                        callback: async (html) => {\r\n                            let selected_targets = html.find('input:checkbox:checked');\r\n                            let targetData = [];\r\n                            for (let input of selected_targets) {\r\n                                targetData.push({\r\n                                    token: potentialTargets[Number(input.name)],\r\n                                    saved: true\r\n                                });\r\n                            }\r\n                            resolved = true;\r\n                            resolve(targetData);\r\n                        }\r\n                    }\r\n                },\r\n                close: () => {\r\n                    if (!resolved) resolve(false);\r\n                },\r\n                render: (html) => {\r\n\r\n                    const jumpCount = html.find('.chain-lightning-count');\r\n\r\n                    html.find(\".chain-lightning-target\").on(\"mouseenter\", function (e) {\r\n                        let token = canvas.tokens.get($(this).attr('tokenId'));\r\n                        token._onHoverIn(e);\r\n                    }).on(\"mouseleave\", function (e) {\r\n                        let token = canvas.tokens.get($(this).attr('tokenId'));\r\n                        token._onHoverOut(e);\r\n                    });\r\n\r\n                    let numJumps = this.targetsToJumpTo;\r\n\r\n                    html.find(\"input:checkbox\").on('change', function () {\r\n                        let total = html.find('input:checkbox:checked').length;\r\n                        jumpCount.text(Math.max(numJumps - total, 0));\r\n                        html.find('input:checkbox:not(:checked)').each(function () {\r\n                            $(this).prop('disabled', total === numJumps);\r\n                        });\r\n                    });\r\n\r\n                }\r\n            }).render(true);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        const primaryColorOptions = utilFunctions.getDBOptions('jb2a.chain_lightning.primary');\r\n        const secondaryColorOptions = utilFunctions.getDBOptions('jb2a.chain_lightning.secondary');\r\n        const failSaveEffectColorOptions = utilFunctions.getDBOptions('jb2a.static_electricity.02');\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningPrimaryColorLabel\"),\r\n            type: 'dropdown',\r\n            options: primaryColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.primaryBoltColor',\r\n            flagName: 'primaryBoltColor',\r\n            flagValue: currFlags.primaryBoltColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningPrimarySoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.primarySound',\r\n            flagName: 'primarySound',\r\n            flagValue: currFlags.primarySound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningPrimarySoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.primarySoundDelay',\r\n            flagName: 'primarySoundDelay',\r\n            flagValue: currFlags.primarySoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningPrimaryVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.primarySoundVolume',\r\n            flagName: 'primarySoundVolume',\r\n            flagValue: currFlags.primarySoundVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningSecondaryColorLabel\"),\r\n            type: 'dropdown',\r\n            options: secondaryColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.secondaryBoltColor',\r\n            flagName: 'secondaryBoltColor',\r\n            flagValue: currFlags.secondaryBoltColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningSecondarySoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.secondarySound',\r\n            flagName: 'secondarySound',\r\n            flagValue: currFlags.secondarySound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningSecondarySoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.secondarySoundDelay',\r\n            flagName: 'secondarySoundDelay',\r\n            flagValue: currFlags.secondarySoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningSecondaryVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.secondarySoundVolume',\r\n            flagName: 'secondarySoundVolume',\r\n            flagValue: currFlags.secondarySoundVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningSecondaryDelayLowerLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.secondaryBoltDelayLower',\r\n            flagName: 'secondaryBoltDelayLower',\r\n            flagValue: currFlags.secondaryBoltDelayLower ?? 0,\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningSecondaryDelayUpperLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.secondaryBoltDelayUpper',\r\n            flagName: 'secondaryBoltDelayUpper',\r\n            flagValue: currFlags.secondaryBoltDelayUpper ?? 250,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ChainLightningSaveFailEffectLabel\"),\r\n            type: 'dropdown',\r\n            options: failSaveEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.saveFailEffectColor',\r\n            flagName: 'saveFailEffectColor',\r\n            flagValue: currFlags.saveFailEffectColor ?? 'blue',\r\n        });\r\n\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false,\r\n        }\r\n\r\n    }\r\n\r\n}","import * as utilFunctions from \"../utilityFunctions.js\";\r\nexport class mirrorImage {\r\n    constructor(data) {\r\n        this.params = data;\r\n        this.actor = game.actors.get(this.params.actor.id);\r\n        this.token = canvas.tokens.get(this.params.tokenId);\r\n        this.item = this.params.item;\r\n        this.effectOptions = this.item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n    }\r\n    static registerHooks() {\r\n        if (utilFunctions.isMidiActive()) {\r\n            Hooks.on(\"midi-qol.preCheckHits\", mirrorImage.handlePreCheckHits);\r\n        }\r\n        Hooks.on(\"endedSequencerEffect\", mirrorImage.handleMirrorImageEnded);\r\n        return;\r\n    }\r\n\r\n    async cast() {\r\n        // console.log(\"Casting ASE Mirror Image...\");\r\n        //console.log(this);\r\n        await this.playSequence();\r\n        await this.token.document.setFlag(\"advancedspelleffects\", \"mirrorImage\", this.effectOptions);\r\n    }\r\n\r\n    static async handlePreCheckHits(data) {\r\n\r\n        //console.log(data);\r\n\r\n        let target = Array.from(data.targets)[0];\r\n        if (!target) return;\r\n\r\n        const mirrorImages = Sequencer.EffectManager.getEffects().filter(effect => effect.data.name && effect.data.name.startsWith(`MirrorImage-${target.id}`));\r\n        if (mirrorImages.length == 0) return;\r\n\r\n        const effectOptions = target.document.getFlag(\"advancedspelleffects\", \"mirrorImage\");\r\n        if (!effectOptions) return;\r\n\r\n        const mirrorImageEffectNames = mirrorImages.map(effect => effect.data.name);\r\n\r\n        const attackRoll = data.attackRoll;\r\n        //console.log(\"Arrack Roll: \", attackRoll.total);\r\n        const targetAC = target.document.actor.data.data.attributes.ac.value;\r\n        //console.log(\"Target AC: \", targetAC);\r\n\r\n        const imagesRemaining = mirrorImages.length;\r\n        const imageAC = 10 + target.actor.data.data.abilities.dex.mod;\r\n\r\n        const roll = new Roll(`1d20`).evaluate({ async: false });\r\n        //console.log(\"Mirror Image Roll: \", roll.total);\r\n\r\n        let dc;\r\n        if (imagesRemaining == 3) {\r\n            dc = 6;\r\n\r\n        }\r\n        else if (imagesRemaining == 2) {\r\n            dc = 8;\r\n        }\r\n        else if (imagesRemaining == 1) {\r\n            dc = 11;\r\n        }\r\n        else {\r\n            console.log(\"Error: Mirror Images remaining is not 1, 2, or 3.\");\r\n            return;\r\n        }\r\n        //console.log(\"Mirror Image DC: \", dc);\r\n\r\n        if (roll.total < dc) {\r\n            console.log(\"Mirror Image failed.\");\r\n            await warpgate.wait(500);\r\n            await mirrorImage.updateChatCardFailed(data.itemCardId, target, roll.total);\r\n            return;\r\n        }\r\n        else {\r\n            console.log(\"Mirror Image succeeded.\");\r\n            data.noAutoDamage = true;\r\n            if (attackRoll.total >= imageAC) {\r\n                // console.log(\"Mirror Image hit.\");\r\n                await warpgate.wait(effectOptions.imageDestroyDelay);\r\n                await Sequencer.EffectManager.endEffects({ name: mirrorImageEffectNames[0] });\r\n                await mirrorImage.updateChatCard(data.itemCardId, target, roll.total, true);\r\n                //console.log(\"------------Done Mirror Image Pre Check Hits------------\");\r\n                return;\r\n            }\r\n            else {\r\n                await warpgate.wait(500);\r\n                await mirrorImage.updateChatCard(data.itemCardId, target, roll.total, false);\r\n                //console.log(\"------------Done Mirror Image Pre Check Hits------------\");\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    static async handleMirrorImageEnded(effect) {\r\n        // console.log(effect);\r\n        if (!effect.data?.name) return;\r\n        if (!effect.data.name.startsWith(\"MirrorImage\")) return;\r\n        //console.log(effect.sprite.getGlobalPosition());\r\n        //console.log(effect.sprite.worldTransform);\r\n        // console.log(\"Removing Mirror Image...\");\r\n\r\n        const targetID = effect.data.name.split(\"-\")[1];\r\n        const target = canvas.tokens.get(targetID);\r\n        const effectOptions = target.document.getFlag(\"advancedspelleffects\", \"mirrorImage\");\r\n        // console.log(effectOptions);\r\n        const imageDestroyEffect = `jb2a.impact.004.${effectOptions.imageDestroyEffectColor}`;\r\n        const imageDestroySound = effectOptions.imageDestroySound ?? \"\";\r\n        const imageDestroySoundDelay = effectOptions.imageDestroySoundDelay ?? 0;\r\n        const imageDestroyVolume = effectOptions.imageDestroyVolume ?? 1;\r\n\r\n        const spritePos = effect.sprite.worldTransform;\r\n        const t = canvas.stage.worldTransform;\r\n        const adjustedPos = {\r\n            x: (spritePos.tx - t.tx) / canvas.stage.scale.x,\r\n            y: (spritePos.ty - t.ty) / canvas.stage.scale.y\r\n        }\r\n        //console.log(adjustedPos)\r\n        new Sequence()\r\n            .effect(imageDestroyEffect)\r\n            .atLocation(adjustedPos)\r\n            .sound()\r\n            .file(imageDestroySound)\r\n            .volume(imageDestroyVolume)\r\n            .delay(imageDestroySoundDelay)\r\n            .playIf(imageDestroySound != \"\")\r\n            .play()\r\n    }\r\n\r\n    static async updateChatCardFailed(itemCardId, target, attackRoll) {\r\n        const chatMessage = await game.messages.get(itemCardId, target);\r\n        // console.log(chatMessage);\r\n        let chatMessageContent = $(await duplicate(chatMessage.data.content));\r\n        // console.log(chatMessageContent);\r\n        //chatMessageContent.find(\".midi-qol-hits-display\").empty();\r\n        chatMessageContent.find(\".midi-qol-hits-display\").append(`<div class=\"midi-qol-flex-container\">\r\n                    <div>\r\n                        Mirror Image Roll: <b>${attackRoll}</b>\r\n                    </div>\r\n                </div>`);\r\n        await chatMessage.update({ content: chatMessageContent.prop('outerHTML') });\r\n    }\r\n\r\n    static async updateChatCard(itemCardId, target, attackRoll, hit) {\r\n\r\n        const chatMessage = await game.messages.get(itemCardId, target);\r\n        // console.log(chatMessage);\r\n        let chatMessageContent = $(await duplicate(chatMessage.data.content));\r\n        // console.log(chatMessageContent);\r\n        chatMessageContent.find(\".midi-qol-hits-display\").empty();\r\n        chatMessageContent.find(\".midi-qol-hits-display\").append(`<div class=\"midi-qol-flex-container\">\r\n                    <div>\r\n                        Mirror Image Roll: <b>${attackRoll}</b>  - Attack ${hit ? 'hits' : 'misses'}\r\n                    </div>\r\n                    <div class=\"midi-qol-target-npc-GM midi-qol-target-name\" id=\"${target.id}\"> ${target.name}'s Mirror Image!</div>\r\n                    <div class=\"midi-qol-target-npc-Player midi-qol-target-name\" id=\"${target.id}\"> ${target.name}'s Mirror Image!\r\n                    </div>\r\n                    <div><img src=\"${target.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\">\r\n                    </div>\r\n                </div>`);\r\n        await chatMessage.update({ content: chatMessageContent.prop('outerHTML') });\r\n    }\r\n\r\n    async playSequence() {\r\n\r\n        const casterToken = this.token;\r\n        const numberOfImages = 3;\r\n\r\n        let casterTokenImg = casterToken.data.img;\r\n\r\n\r\n        const positions = [];\r\n\r\n        const angles = [...Array(120).keys()].map(x => x * 3);\r\n        for (let i = 0; i < numberOfImages; i++) {\r\n            var centerOffset = 10 + Math.random() * this.effectOptions.orbitRadius;\r\n            var rotationOffset = angles.length / numberOfImages * i;\r\n            const trig = (formula) => {\r\n                const pos = angles.map(angle => centerOffset * Math[formula](angle * (Math.PI / 180)));\r\n                return [...pos.slice(rotationOffset), ...pos.slice(0, rotationOffset)];\r\n            }\r\n            positions.push({\r\n                x: trig('cos'),\r\n                y: trig('sin'),\r\n            });\r\n        }\r\n\r\n        const castEffect = `jb2a.impact.004.${this.effectOptions.castEffectColor}`;\r\n        const runeGlowColor = this.effectOptions.runeColor;\r\n        const orbitDuration = this.effectOptions.orbitDuration;\r\n        const imageOpacity = this.effectOptions.imageOpacity;\r\n        const castEffectSound = this.effectOptions.castSound ?? \"\";\r\n        const castEffectSoundDelay = this.effectOptions.castSoundDelay ?? 0;\r\n        const castEffectVolume = this.effectOptions.castVolume ?? 1;\r\n\r\n\r\n        const seq = new Sequence()\r\n            .sound()\r\n            .file(castEffectSound)\r\n            .volume(castEffectVolume)\r\n            .delay(castEffectSoundDelay)\r\n            .playIf(castEffectSound != \"\")\r\n            .effect()\r\n            .file(castEffect)\r\n            .atLocation(casterToken)\r\n            .fadeIn(500)\r\n            .effect()\r\n            .file(\"jb2a.extras.tmfx.runes.circle.simple.illusion\")\r\n            .atLocation(casterToken)\r\n            .duration(2000)\r\n            .fadeIn(500)\r\n            .fadeOut(500)\r\n            .scale(0.5)\r\n            .filter(\"Glow\", {\r\n                color: runeGlowColor\r\n            })\r\n            .scaleIn(0, 500, {\r\n                ease: \"easeOutCubic\"\r\n            })\r\n            .waitUntilFinished(-1000);\r\n\r\n        positions.forEach((position, index) => {\r\n            seq.effect()\r\n                .from(casterToken)\r\n                .fadeIn(1000)\r\n                .attachTo(casterToken)\r\n                .loopProperty(\"sprite\", \"position.x\", {\r\n                    values: index % 2 ? position.x : position.x.slice().reverse(),\r\n                    duration: orbitDuration,\r\n                    pingPong: false,\r\n                })\r\n                .loopProperty(\"sprite\", \"position.y\", {\r\n                    values: index % 3 ? position.y : position.y.slice().reverse(),\r\n                    duration: orbitDuration,\r\n                    pingPong: false,\r\n                })\r\n                .persist()\r\n                .scaleOut(0, 300, { ease: \"easeInExpo\" })\r\n                .opacity(imageOpacity)\r\n                .name(`MirrorImage-${casterToken.id}-${index}`);\r\n        });\r\n\r\n        seq.play()\r\n\r\n    }\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        const burstEffectColorOptions = utilFunctions.getDBOptions('jb2a.impact.004');\r\n        const runeColorOptions = [\r\n            {\"0x3c1361\": \"Dark Purple\"},\r\n            {\"0x00b4ff\": \"Blue\"},\r\n            {\"0x1DD0DE\": \"Cyan\"},\r\n            {\"0x1D8B16\": \"Green\"},\r\n            {\"0xFFCE00\": \"Yellow\"},\r\n            {\"0xFF9B00\": \"Orange\"},\r\n            {\"0xFF0000\": \"Red\"},\r\n            {\"0x7D1DFF\": \"Purple\"},\r\n            {\"0xFF00FF\": \"Pink\"},\r\n            {\"0xFFFFFF\": \"White\"},\r\n            {\"0x000000\": \"Black\"}\r\n        ];\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageCreateEffectColorLabel\"),\r\n            type: 'dropdown',\r\n            options: burstEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.castEffectColor',\r\n            flagName: 'castEffectColor',\r\n            flagValue: currFlags.castEffectColor ?? 'blue',\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageCreateEffectColorTooltip\"),\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageCastSoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.castSound',\r\n            flagName: 'castSound',\r\n            flagValue: currFlags.castSound ?? '',\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageCastSoundTooltip\"),\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageCastSoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.castSoundDelay',\r\n            flagName: 'castSoundDelay',\r\n            flagValue: currFlags.castSoundDelay ?? 0,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageCastSoundDelayTooltip\"),\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageCastVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.castVolume',\r\n            flagName: 'castVolume',\r\n            flagValue: currFlags.castVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageCastVolumeTooltip\"),\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageRuneColorLabel\"),\r\n            type: 'dropdown',\r\n            options: runeColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.runeColor',\r\n            flagName: 'runeColor',\r\n            flagValue: currFlags.runeColor ?? '0x00b4ff',\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageRuneColorTooltip\"),\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageOrbitRadiusLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.orbitRadius',\r\n            flagName: 'orbitRadius',\r\n            flagValue: currFlags.orbitRadius ?? 40,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageOrbitRadiusTooltip\"),\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageOrbitDurationLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.orbitDuration',\r\n            flagName: 'orbitDuration',\r\n            flagValue: currFlags.orbitDuration ?? 24,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageOrbitDurationTooltip\"),\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageOpacityLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.imageOpacity',\r\n            flagName: 'imageOpacity',\r\n            flagValue: currFlags.imageOpacity ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.1,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageOpacityTooltip\"),\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageDestroyDelay\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.imageDestroyDelay',\r\n            flagName: 'imageDestroyDelay',\r\n            flagValue: currFlags.imageDestroyDelay ?? 0,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageDestroyDelayTooltip\"),\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageDestroyEffectColorLabel\"),\r\n            type: 'dropdown',\r\n            options: burstEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.imageDestroyEffectColor',\r\n            flagName: 'imageDestroyEffectColor',\r\n            flagValue: currFlags.imageDestroyEffectColor ?? 'blue',\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageDestroyEffectColorTooltip\"),\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageDestroySoundLabel\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.imageDestroySound',\r\n            flagName: 'imageDestroySound',\r\n            flagValue: currFlags.imageDestroySound ?? '',\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageDestroySoundTooltip\"),\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageDestroySoundDelayLabel\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.imageDestroySoundDelay',\r\n            flagName: 'imageDestroySoundDelay',\r\n            flagValue: currFlags.imageDestroySoundDelay ?? 0,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageDestroySoundDelayTooltip\"),\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.MirrorImageDestroyVolumeLabel\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.imageDestroyVolume',\r\n            flagName: 'imageDestroyVolume',\r\n            flagValue: currFlags.imageDestroyVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n            tooltip: game.i18n.localize(\"ASE.MirrorImageDestroyVolumeTooltip\"),\r\n        });\r\n\r\n\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true,\r\n        }\r\n\r\n    }\r\n}","// Chaos Bolt by Wasp\r\n\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\nimport baseSpellClass from \"./baseSpellClass.js\";\r\n\r\nexport class chaosBolt extends baseSpellClass {\r\n\r\n    elements = {\r\n        \"Acid\": \"icons/magic/acid/projectile-faceted-glob.webp\",\r\n        \"Cold\": \"icons/magic/air/wind-tornado-wall-blue.webp\",\r\n        \"Fire\": \"icons/magic/fire/beam-jet-stream-embers.webp\",\r\n        \"Force\": \"icons/magic/sonic/projectile-sound-rings-wave.webp\",\r\n        \"Lightning\": \"icons/magic/lightning/bolt-blue.webp\",\r\n        \"Poison\": \"icons/magic/death/skull-poison-green.webp\",\r\n        \"Psychic\": \"icons/magic/control/fear-fright-monster-grin-red-orange.webp\",\r\n        \"Thunder\": \"icons/magic/sonic/explosion-shock-wave-teal.webp\"\r\n    }\r\n\r\n    constructor(args) {\r\n        super();\r\n\r\n        this.params = args;\r\n\r\n        this.actor = game.actors.get(this.params.actor.id);\r\n        this.token = canvas.tokens.get(this.params.tokenId);\r\n        this.item = this.params.item;\r\n        this.effectOptions = this.item.getFlag(\"advancedspelleffects\", \"effectOptions\") ?? {};\r\n\r\n        this.itemCardId = this.params.itemCardId;\r\n\r\n        this.spellLevel = Number(this.params.itemLevel);\r\n\r\n        this.target = Array.from(this.params.targets)[0];\r\n\r\n        this.targetsHitSoFar = [];\r\n\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n\r\n        const acidEffects = `jb2a.magic_missile`;\r\n        const acidEffectColorOptions = utilFunctions.getDBOptions(acidEffects);\r\n\r\n        const coldEffects = `jb2a.ray_of_frost`;\r\n        const coldEffectColorOptions = utilFunctions.getDBOptions(coldEffects);\r\n\r\n        const fireEffects = 'jb2a.fire_bolt';\r\n        const fireEffectColorOptions = utilFunctions.getDBOptions(fireEffects);\r\n\r\n        const forceEffects = 'jb2a.eldritch_blast';\r\n        const forceEffectColorOptions = utilFunctions.getDBOptions(forceEffects);\r\n\r\n        const lightningEffects = 'jb2a.chain_lightning.primary';\r\n        const lightningEffectColorOptions = utilFunctions.getDBOptions(lightningEffects);\r\n\r\n        const poisonEffects = 'jb2a.spell_projectile.skull';\r\n        const poisonEffectColorOptions = utilFunctions.getDBOptions(poisonEffects);\r\n\r\n        const psychicEffects = 'jb2a.disintegrate';\r\n        const psychicEffectColorOptions = utilFunctions.getDBOptions(psychicEffects);\r\n\r\n        const thunderEffects = 'jb2a.bullet.01';\r\n        const thunderEffectColorOptions = utilFunctions.getDBOptions(thunderEffects);\r\n\r\n        const thunderShatterEffects = 'jb2a.shatter';\r\n        const thunderShatterEffectColorOptions = utilFunctions.getDBOptions(thunderShatterEffects);\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.AcidEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.AcidEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: acidEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.acidColor',\r\n            flagName: 'acidColor',\r\n            flagValue: currFlags.acidColor ?? 'green',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.AcidEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.AcidEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.acidSound',\r\n            flagName: 'acidSound',\r\n            flagValue: currFlags.acidSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.AcidEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.AcidEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.acidSoundDelay',\r\n            flagName: 'acidSoundDelay',\r\n            flagValue: currFlags.acidSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.AcidEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.AcidEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.acidVolume',\r\n            flagName: 'acidVolume',\r\n            flagValue: currFlags.acidVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ColdEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ColdEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: coldEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.coldColor',\r\n            flagName: 'coldColor',\r\n            flagValue: currFlags.coldColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ColdEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ColdEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.coldSound',\r\n            flagName: 'coldSound',\r\n            flagValue: currFlags.coldSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ColdEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ColdEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.coldSoundDelay',\r\n            flagName: 'coldSoundDelay',\r\n            flagValue: currFlags.coldSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ColdEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ColdEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.coldVolume',\r\n            flagName: 'coldVolume',\r\n            flagValue: currFlags.coldVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.FireEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.FireEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: fireEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.fireColor',\r\n            flagName: 'fireColor',\r\n            flagValue: currFlags.fireColor ?? 'orange',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.FireEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.FireEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.fireSound',\r\n            flagName: 'fireSound',\r\n            flagValue: currFlags.fireSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.FireEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.FireEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.fireSoundDelay',\r\n            flagName: 'fireSoundDelay',\r\n            flagValue: currFlags.fireSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.FireEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.FireEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.fireVolume',\r\n            flagName: 'fireVolume',\r\n            flagValue: currFlags.fireVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ForceEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ForceEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: forceEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.forceColor',\r\n            flagName: 'forceColor',\r\n            flagValue: currFlags.forceColor ?? 'purple',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ForceEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ForceEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.forceSound',\r\n            flagName: 'forceSound',\r\n            flagValue: currFlags.forceSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ForceEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ForceEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.forceSoundDelay',\r\n            flagName: 'forceSoundDelay',\r\n            flagValue: currFlags.forceSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ForceEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ForceEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.forceVolume',\r\n            flagName: 'forceVolume',\r\n            flagValue: currFlags.forceVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.LightningEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.LightningEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: lightningEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.lightningColor',\r\n            flagName: 'lightningColor',\r\n            flagValue: currFlags.lightningColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.LightningEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.LightningEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.lightningSound',\r\n            flagName: 'lightningSound',\r\n            flagValue: currFlags.lightningSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.LightningEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.LightningEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.lightningSoundDelay',\r\n            flagName: 'lightningSoundDelay',\r\n            flagValue: currFlags.lightningSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.LightningEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.LightningEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.lightningVolume',\r\n            flagName: 'lightningVolume',\r\n            flagValue: currFlags.lightningVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.PoisonEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PoisonEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: poisonEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.poisonColor',\r\n            flagName: 'poisonColor',\r\n            flagValue: currFlags.poisonColor ?? 'pinkpurple',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PoisonEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PoisonEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.poisonSound',\r\n            flagName: 'poisonSound',\r\n            flagValue: currFlags.poisonSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PoisonEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PoisonEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.poisonSoundDelay',\r\n            flagName: 'poisonSoundDelay',\r\n            flagValue: currFlags.poisonSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PoisonEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PoisonEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.poisonVolume',\r\n            flagName: 'poisonVolume',\r\n            flagValue: currFlags.poisonVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.PsychicEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PsychicEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: psychicEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.psychicColor',\r\n            flagName: 'psychicColor',\r\n            flagValue: currFlags.psychicColor ?? 'dark_red',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PsychicEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PsychicEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.psychicSound',\r\n            flagName: 'psychicSound',\r\n            flagValue: currFlags.psychicSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PsychicEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PsychicEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.psychicSoundDelay',\r\n            flagName: 'psychicSoundDelay',\r\n            flagValue: currFlags.psychicSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.PsychicEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.PsychicEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.psychicVolume',\r\n            flagName: 'psychicVolume',\r\n            flagValue: currFlags.psychicVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: thunderEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderColor',\r\n            flagName: 'thunderColor',\r\n            flagValue: currFlags.thunderColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderSound',\r\n            flagName: 'thunderSound',\r\n            flagValue: currFlags.thunderSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderSoundDelay',\r\n            flagName: 'thunderSoundDelay',\r\n            flagValue: currFlags.thunderSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderVolume',\r\n            flagName: 'thunderVolume',\r\n            flagValue: currFlags.thunderVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderShatterEffectColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderShatterEffectColorTooltip\"),\r\n            type: 'dropdown',\r\n            options: thunderShatterEffectColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderShatterColor',\r\n            flagName: 'thunderShatterColor',\r\n            flagValue: currFlags.thunderShatterColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderShatterEffectSoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderShatterEffectSoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderShatterSound',\r\n            flagName: 'thunderShatterSound',\r\n            flagValue: currFlags.thunderShatterSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderShatterEffectSoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderShatterEffectSoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderShatterSoundDelay',\r\n            flagName: 'thunderShatterSoundDelay',\r\n            flagValue: currFlags.thunderShatterSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ThunderShatterEffectSoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ThunderShatterEffectSoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.thunderShatterVolume',\r\n            flagName: 'thunderShatterVolume',\r\n            flagValue: currFlags.thunderShatterVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            animOptions: animOptions,\r\n            spellOptions: spellOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: false,\r\n        }\r\n    }\r\n\r\n    static async cast(args) {\r\n        console.log(\"ASE | CHAOS BOLT | Cast Args: \", args);\r\n        const workflow = new this(args);\r\n        const spellStateOptions = {\r\n            repeat: true,\r\n            damInterrupt: true,\r\n            effectOptions: workflow.effectOptions,\r\n            item: workflow.item,\r\n            caster: workflow.token,\r\n            targets: [workflow.target.document.uuid],\r\n            targetsHit: []\r\n        };\r\n        console.log(\"ASE | CHAOS BOLT | spellStateOptions: \", spellStateOptions);\r\n        game.ASESpellStateManager.addSpell(workflow.item.uuid, spellStateOptions);\r\n        /*let bouncing = true;\r\n        while (bouncing) {\r\n            const validTarget = await workflow.determineTarget();\r\n            if (!validTarget) break;\r\n            await workflow.rollAttack();\r\n            const validDamage = await workflow.rollDamage();\r\n            await workflow.updateChatCards();\r\n            bouncing = workflow.attackData[workflow.attackData.length - 1].bounce && validDamage;\r\n        }\r\n\r\n        await workflow.playSequence();*/\r\n    }\r\n\r\n    static async damageInterrupt(data){\r\n        console.log(\"ASE | CHAOS BOLT | Damage Interrupt Data: \", data);\r\n\r\n        const elements = {\r\n            \"Acid\": \"icons/magic/acid/projectile-faceted-glob.webp\",\r\n            \"Cold\": \"icons/magic/air/wind-tornado-wall-blue.webp\",\r\n            \"Fire\": \"icons/magic/fire/beam-jet-stream-embers.webp\",\r\n            \"Force\": \"icons/magic/sonic/projectile-sound-rings-wave.webp\",\r\n            \"Lightning\": \"icons/magic/lightning/bolt-blue.webp\",\r\n            \"Poison\": \"icons/magic/death/skull-poison-green.webp\",\r\n            \"Psychic\": \"icons/magic/control/fear-fright-monster-grin-red-orange.webp\",\r\n            \"Thunder\": \"icons/magic/sonic/explosion-shock-wave-teal.webp\"\r\n        };\r\n        const damageSequences = {\r\n            \"acid\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.acidSound ?? \"\")\r\n                    .delay(options.acidSoundDelay ?? 0)\r\n                    .volume(options.acidVolume ?? 0.5)\r\n                    .playIf(options.acidSound != \"\" && options.acidSound)\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .file(`jb2a.magic_missile.${options.acidColor ?? \"green\"}`)\r\n                    .missed(!attack.hits)\r\n                    .waitUntilFinished(-1000)\r\n            },\r\n            \"cold\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.coldSound ?? \"\")\r\n                    .delay(options.coldSoundDelay ?? 0)\r\n                    .volume(options.coldVolume ?? 0.5)\r\n                    .playIf(options.coldSound != \"\" && options.coldSound)\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .missed(!attack.hits)\r\n                    .file(`jb2a.ray_of_frost.${options.coldColor ?? \"blue\"}`)\r\n                    .waitUntilFinished(-1500)\r\n            },\r\n            \"fire\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.fireSound ?? \"\")\r\n                    .delay(options.fireSoundDelay ?? 0)\r\n                    .volume(options.fireVolume ?? 0.5)\r\n                    .playIf(options.fireSound != \"\" && options.fireSound)\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .file(`jb2a.fire_bolt.${options.fireColor ?? \"orange\"}`)\r\n                    .missed(!attack.hits)\r\n                    .waitUntilFinished(-1000)\r\n            },\r\n            \"force\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.forceSound ?? \"\")\r\n                    .delay(options.forceSoundDelay ?? 0)\r\n                    .volume(options.forceVolume ?? 0.5)\r\n                    .playIf(options.forceSound != \"\" && options.forceSound)\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .file(`jb2a.eldritch_blast.${options.forceColor ?? \"purple\"}`)\r\n                    .missed(!attack.hits)\r\n                    .waitUntilFinished(-3000)\r\n            },\r\n            \"lightning\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.lightningSound ?? \"\")\r\n                    .delay(options.lightningSoundDelay ?? 0)\r\n                    .volume(options.lightningVolume ?? 0.5)\r\n                    .playIf(options.lightningSound != \"\" && options.lightningSound)\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .file(`jb2a.chain_lightning.primary.${options.lightningColor ?? \"blue\"}`)\r\n                    .missed(!attack.hits)\r\n                    .waitUntilFinished(-1500)\r\n            },\r\n            \"poison\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.poisonSound ?? \"\")\r\n                    .delay(options.poisonSoundDelay ?? 0)\r\n                    .volume(options.poisonVolume ?? 0.5)\r\n                    .playIf(options.poisonSound != \"\")\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .file(`jb2a.spell_projectile.skull.${options.poisonColor ?? \"pinkpurple\"}`)\r\n                    .missed(!attack.hits)\r\n                    .waitUntilFinished(-1500)\r\n            },\r\n            \"psychic\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.psychicSound ?? \"\")\r\n                    .delay(options.psychicSoundDelay ?? 0)\r\n                    .volume(options.psychicVolume ?? 0.5)\r\n                    .playIf(options.psychicSound != \"\" && options.psychicSound)\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .file(`jb2a.disintegrate.${options.psychicColor ?? \"dark_red\"}`)\r\n                    .missed(!attack.hits)\r\n                    .waitUntilFinished(-1750)\r\n            },\r\n            \"thunder\": (sequence, attack, options) => {\r\n                sequence\r\n                    .sound()\r\n                    .file(options.thunderSound ?? \"\")\r\n                    .delay(options.thunderSoundDelay ?? 0)\r\n                    .volume(options.thunderVolume ?? 0.5)\r\n                    .playIf(options.thunderSound != \"\" && options.thunderSound)\r\n                    .effect()\r\n                    .atLocation(attack.origin)\r\n                    .stretchTo(attack.target)\r\n                    .file(`jb2a.bullet.01.${options.thunderColor ?? \"blue\"}`)\r\n                    .missed(!attack.hits)\r\n                    .name(`chaos-missile-thunder-${attack.origin.id}`)\r\n                    .waitUntilFinished(-1000)\r\n                    .sound()\r\n                    .file(options.thunderShatterSound ?? \"\")\r\n                    .delay(options.thunderShatterSoundDelay ?? 0)\r\n                    .volume(options.thunderShatterVolume ?? 0.5)\r\n                    .playIf(options.thunderShatterSound != \"\" && options.thunderShatterSound)\r\n                    .effect()\r\n                    .atLocation(`chaos-missile-thunder-${attack.origin.id}`)\r\n                    .file(`jb2a.shatter.${options.thunderShatterColor ?? \"blue\"}`)\r\n                    .waitUntilFinished(-1500)\r\n            },\r\n        };\r\n        \r\n        const item = data.item;\r\n        const effectOptions = item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        const range = item.data.data.range.value;\r\n        const hitTarget = Array.from(data.hitTargets)[0];\r\n        const attackHit = Array.from(data.hitTargets).length > 0;\r\n        const target = Array.from(data.targets)[0];\r\n        let returnObj = {};\r\n        let spellState = game.ASESpellStateManager.getSpell(item.uuid);\r\n        if (!spellState) return;\r\n        if(!hitTarget) {\r\n            spellState.finished = true;\r\n            game.ASESpellStateManager.removeSpell(item.uuid);\r\n        }\r\n        console.log(\"ASE | CHAOS BOLT | Spell State: \", spellState);\r\n        if(hitTarget){\r\n            spellState.options.targetsHit.push(hitTarget.document.uuid);\r\n        }\r\n        if(spellState.options.nextTargets) {\r\n            //remove nextTargets from object\r\n            delete spellState.options.nextTargets;\r\n        }\r\n        const damageRoll = data.damageRoll;\r\n        let die1;\r\n        let die2;\r\n        if(damageRoll.terms[0].faces == 8){\r\n            die1 = damageRoll.terms[0].results[0].result;\r\n            die2 = damageRoll.terms[0].results[1].result;\r\n        }\r\n        const firstElement = Object.keys(elements)[die1-1];\r\n        const secondElement = Object.keys(elements)[die2-1];\r\n        let damageType = await warpgate.buttonDialog({\r\n            buttons: [{label: `First D8 Result: ${die1} <img src=\"${elements[firstElement]}\"/> ${firstElement.slice(0, 1).toUpperCase() + firstElement.slice(1)} damage`, value: firstElement},\r\n            {label: `Second D8 Result: ${die2} <img src=\"${elements[secondElement]}\"/> ${secondElement.slice(0, 1).toUpperCase() + secondElement.slice(1)} damage`, value: secondElement}],\r\n            title: 'Pick Damage Type...'\r\n        }, 'row');\r\n        if(!damageType) {\r\n            spellState.finished = true;\r\n            game.ASESpellStateManager.removeSpell(item.uuid);\r\n            ui.notifications.error(\"Spell Aborted: You must pick a damage type!\");\r\n            return returnObj;\r\n        }\r\n        console.log(\"ASE | CHAOS BOLT | Damage Type: \", damageType.toLowerCase());\r\n        returnObj['newDamageType'] = damageType;\r\n\r\n        if(die1 != die2) {\r\n            spellState.finished = true;\r\n            game.ASESpellStateManager.removeSpell(item.uuid);\r\n        } else if (die1 == die2 && attackHit) {\r\n            const potentialTargets = canvas.tokens.placeables.filter(function (target) {\r\n                return target.actor?.data?.data?.attributes.hp.value > 0\r\n                    && canvas.grid.measureDistance(spellState.options.caster, target) <= range\r\n                    /* target does not appear in spellState.targetsHit list */ && !spellState.options.targetsHit.includes(target.document.uuid)\r\n                    && target !== spellState.options.caster\r\n            });\r\n            console.log(\"ASE | CHAOS BOLT | Potential Targets: \", potentialTargets);\r\n            if (!potentialTargets.length) {\r\n                spellState.finished = true;\r\n                game.ASESpellStateManager.removeSpell(item.uuid);\r\n            } else {\r\n                const targetList = potentialTargets.map((target, index) => {\r\n                    return `\r\n                    <tr class=\"chaos-bolt-target\" tokenId=\"${target.id}\">\r\n                        <td class=\"chaos-bolt-flex\">\r\n                            <img src=\"${target.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\"> - ${target.name}\r\n                        </td>\r\n                        <td>\r\n                            <input type=\"checkbox\" class='target' name=\"${index}\">\r\n                        </td>\r\n                    </tr>\r\n                    `;\r\n                }).join('');\r\n        \r\n                const content = `\r\n                <style>\r\n                    .chaos-bolt-flex {\r\n                        display: inline-flex;\r\n                        align-items: center;\r\n                    }\r\n                    .chaos-bolt-flex img {\r\n                        margin-right: 0.5rem;\r\n                    }\r\n                </style>\r\n                <p>Choose next target: </p>\r\n                <form class=\"flexcol\">\r\n                    <table width=\"100%\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Potential Target</th>\r\n                                <th>Jump to</th>\r\n                            </tr>\r\n                            ${targetList}\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n                `;\r\n        \r\n                let newTargets = await new Promise(async resolve => {\r\n                    let resolved = false;\r\n                    new Dialog({\r\n                        title: \"Chaos Bolt: Choose New Target\",\r\n                        content,\r\n                        buttons: {\r\n                            one: {\r\n                                icon: `<i class=\"fas fa-bolt\"></i>`,\r\n                                label: \"HURL!\",\r\n                                callback: async (html) => {\r\n                                    let selected_targets = html.find('input:checkbox:checked');\r\n                                    let targetData = [];\r\n                                    for (let input of selected_targets) {\r\n                                        targetData.push(potentialTargets[Number(input.name)].document.uuid);\r\n                                    }\r\n                                    resolved = true;\r\n                                    resolve(targetData);\r\n                                }\r\n                            }\r\n                        },\r\n                        close: () => {\r\n                            if (!resolved) resolve(false);\r\n                        },\r\n                        render: (html) => {\r\n        \r\n                            const jumpCount = 1;\r\n        \r\n                            html.find(\".chaos-bolt-target\").on(\"mouseenter\", function (e) {\r\n                                let token = canvas.tokens.get($(this).attr('tokenId'));\r\n                                token._onHoverIn(e);\r\n                            }).on(\"mouseleave\", function (e) {\r\n                                let token = canvas.tokens.get($(this).attr('tokenId'));\r\n                                token._onHoverOut(e);\r\n                            });\r\n        \r\n                            let numJumps = 1;\r\n        \r\n                            html.find(\"input:checkbox\").on('change', function () {\r\n                                let total = html.find('input:checkbox:checked').length;\r\n                                html.find('input:checkbox:not(:checked)').each(function () {\r\n                                    $(this).prop('disabled', total === numJumps);\r\n                                });\r\n                            });\r\n        \r\n                        }\r\n                    }).render(true);\r\n        \r\n                });\r\n                console.log(\"ASE | CHAOS BOLT | New Target: \", newTargets);\r\n                if(!newTargets) {\r\n                    spellState.finished = true;\r\n                    game.ASESpellStateManager.removeSpell(item.uuid);\r\n                }\r\n                if (newTargets.length > 0) {\r\n                    returnObj['newTargets'] = newTargets;\r\n                }\r\n            }\r\n            \r\n        }\r\n        let sequence = new Sequence();\r\n        damageSequences[damageType.toLowerCase()](sequence, {origin: spellState.options.caster, target: target, hits: attackHit}, effectOptions)\r\n        sequence.play();\r\n        return returnObj;\r\n        \r\n    }\r\n\r\n\r\n\r\n    async playSequence() {\r\n\r\n        if (!game.modules.get('sequencer')?.active) return;\r\n        if (!game.modules.get('jb2a_patreon')?.active) return;\r\n\r\n        let sequence = new Sequence();\r\n\r\n        for (const attack of this.attackData) {\r\n            damageSequences[attack.damageType](sequence, attack, this.effectOptions)\r\n        }\r\n\r\n        sequence.play();\r\n    }\r\n\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class viciousMockery {\r\n\r\n    constructor(data) {\r\n        this.params = data;\r\n        this.actor = game.actors.get(this.params.actor.id);\r\n        this.token = canvas.tokens.get(this.params.tokenId);\r\n        this.item = this.params.item;\r\n        this.effectOptions = this.item.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        this.isMidiActive = utilFunctions.isMidiActive();\r\n        this.target = Array.from(this.params.targets)[0];\r\n        this.cussVault = ['!', '@', '#', '$', '%', '&'];\r\n    }\r\n\r\n    static registerHooks() {\r\n        return;\r\n    }\r\n\r\n    async cast() {\r\n        await this.playSequence();\r\n    }\r\n\r\n    async playSequence() {\r\n        const caster = this.token;\r\n        const target = this.target;\r\n        const useRandomGlow = this.effectOptions.randomGlow;\r\n        const glowColor = useRandomGlow ? utilFunctions.getRandomColor(\"0x\") : utilFunctions.convertColorHexTo0x(this.effectOptions?.glowColor ?? \"#f01414\");\r\n        const glowDistance = this.effectOptions?.glowDistance ?? 30;\r\n        const glowOuterStrength = this.effectOptions?.glowOuterStrength ?? 2;\r\n        const glowInnerStrength = this.effectOptions?.glowInnerStrength ?? 0.25;\r\n        const fontFamily = this.effectOptions?.font ?? \"Impact\";\r\n        const fontSize = this.effectOptions?.size ?? 38;\r\n        const fontFillColorA = this.effectOptions?.fillColorA ?? \"#f01414\";\r\n        const fontFillColorB = this.effectOptions?.fillColorB ?? \"#931a1a\";\r\n        const soundFile = this.effectOptions?.sound ?? \"\";\r\n        const soundDelay = this.effectOptions?.soundDelay ?? 0;\r\n        const soundVolume = this.effectOptions?.soundVolume ?? 0.5;\r\n        const textOptions = {\r\n            \"dropShadowAngle\": 7.6,\r\n            \"fontFamily\": fontFamily,\r\n            \"fontSize\": fontSize,\r\n            \"fontStyle\": \"oblique\",\r\n            \"fontVariant\": \"small-caps\",\r\n            \"fontWeight\": \"bolder\",\r\n            \"fill\": [\r\n                fontFillColorA,\r\n                fontFillColorB\r\n            ],\r\n        };\r\n        const distance = utilFunctions.getDistanceClassic({ x: caster.x, y: caster.y }, { x: target.x, y: target.y });\r\n        let viciousMockerySeq = new Sequence();\r\n        viciousMockerySeq\r\n            .sound()\r\n            .file(soundFile)\r\n            .delay(soundDelay)\r\n            .volume(soundVolume)\r\n            .playIf(soundFile && soundFile !== \"\");\r\n\r\n        for (let i = 0; i < utilFunctions.getRandomInt(5, 8); i++) {\r\n            viciousMockerySeq.effect()\r\n                .moveTowards(target, { ease: \"easeInOutElastic\" })\r\n                .moveSpeed(distance / 2.5)\r\n                .atLocation(caster)\r\n                .text(this.makeCussWord(), textOptions)\r\n                .animateProperty(\"sprite\", \"rotation\", { from: 0, to: 720, duration: 1200, ease: \"easeInOutCubic\" })\r\n                .animateProperty(\"sprite\", \"scale.x\", { from: 0, to: 1, duration: 1200, ease: \"easeInOutCubic\" })\r\n                .animateProperty(\"sprite\", \"scale.y\", { from: 0, to: 1, duration: 1200, ease: \"easeInOutCubic\" })\r\n                .randomOffset()\r\n                .animateProperty(\"sprite\", \"scale.x\", { from: 1, to: 0, delay: 1250, duration: 600, ease: \"easeInOutCubic\" })\r\n                .animateProperty(\"sprite\", \"scale.y\", { from: 1, to: 0, delay: 1250, duration: 600, ease: \"easeInOutCubic\" })\r\n                .filter(\"Glow\", { color: glowColor, distance: glowDistance, outerStrength: glowOuterStrength, innerStrength: glowInnerStrength })\r\n                .wait(utilFunctions.getRandomInt(50, 75))\r\n        }\r\n        viciousMockerySeq.play();\r\n    }\r\n\r\n    makeCussWord() {\r\n        let cussWordList = [];\r\n        for (let i = 0; i < utilFunctions.getRandomInt(4, 10); i++) {\r\n            cussWordList.push(this.cussVault[utilFunctions.getRandomInt(0, this.cussVault.length - 1)]);\r\n        }\r\n        let cussWord = cussWordList.join(\"\");\r\n        return cussWord;\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        if (!currFlags) currFlags = {};\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        const effectFontOptions = [\r\n            {\"serif\": \"Serif\"},\r\n            {\"Georgia serif\": \"Georgia\"},\r\n            {\"Palatino\": \"Palatino\"},\r\n            {\"Times New Roman\": \"Times New Roman\"},\r\n            {\"Times\": \"Times\"},\r\n            {\"sans-serif\": \"Sans-Serif\"},\r\n            {\"Arial\": \"Arial\"},\r\n            {\"Helvetica\": \"Helvetica\"},\r\n            {\"Arial Black\": \"Arial Black\"},\r\n            {\"Gadget\": \"Gadget\"},\r\n            {\"Comic Sans MS\": \"Comic Sans MS\"},\r\n            {\"cursive\": \"Cursive\"},\r\n            {\"Impact\": \"Impact\"},\r\n            {\"Charcoal\": \"Charcoal\"},\r\n            {\"Lucida Sans Unicode\": \"Lucida Sans Unicode\"},\r\n            {\"Lucida Grande\": \"Lucida Grande\"},\r\n            {\"Tahoma\": \"Tahoma\"},\r\n            {\"Geneva\": \"Geneva\"},\r\n            {\"Trebuchet MS\": \"Trebuchet MS\"},\r\n            {\"Verdana\": \"Verdana\"},\r\n            {\"Courier New, monospace\": \"Courier New\"},\r\n            {\"Courier\": \"Courier\"},\r\n            {\"Monaco\": \"Monaco\"},\r\n            {\"MS PGothic\": \"MS PGothic\"},\r\n            {\"Indie Flower\": \"Indie Flower\"},\r\n        ];\r\n\r\n        /* animOptions.push({\r\n             label: game.i18n.localize(\"ASE.EffectSpeedLabel\"),\r\n             tooltip: game.i18n.localize(\"ASE.EffectSpeedTooltip\"),\r\n             type: 'rangeInput',\r\n             name: 'flags.advancedspelleffects.effectOptions.speedModifier',\r\n             flagName: 'speedModifier',\r\n             flagValue: currFlags.speedModifier ?? 1,\r\n             min: 0.1,\r\n             max: 2,\r\n             step: 0.1,\r\n         });*/\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectFontLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.EffectFontTooltip\"),\r\n            type: 'dropdown',\r\n            options: effectFontOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.font',\r\n            flagName: 'font',\r\n            flagValue: currFlags.font ?? 'Impact',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.FontSizeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.FontSizeTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.size',\r\n            flagName: 'size',\r\n            flagValue: currFlags.size ?? 38,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectFillColorALabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.EffectFillColorATooltip\"),\r\n            type: 'colorPicker',\r\n            name: 'flags.advancedspelleffects.effectOptions.fillColorA',\r\n            flagName: 'fillColorA',\r\n            flagValue: currFlags.fillColorA ?? '#f01414',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectFillColorBLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.EffectFillColorBTooltip\"),\r\n            type: 'colorPicker',\r\n            name: 'flags.advancedspelleffects.effectOptions.fillColorB',\r\n            flagName: 'fillColorB',\r\n            flagValue: currFlags.fillColorB ?? '#931a1a',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.RandomGlowLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.RandomGlowTooltip\"),\r\n            type: 'checkbox',\r\n            name: 'flags.advancedspelleffects.effectOptions.randomGlow',\r\n            flagName: 'randomGlow',\r\n            flagValue: currFlags.randomGlow ?? true,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectGlowColorLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.EffectGlowColorTooltip\"),\r\n            type: 'colorPicker',\r\n            name: 'flags.advancedspelleffects.effectOptions.glowColor',\r\n            flagName: 'glowColor',\r\n            flagValue: currFlags.glowColor ?? '#f01414',\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectGlowDistanceLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.EffectGlowDistanceTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.glowDistance',\r\n            flagName: 'glowDistance',\r\n            flagValue: currFlags.glowDistance ?? 30,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectGlowOuterStrengthLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.EffectGlowOuterStrengthTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.glowOuterStrength',\r\n            flagName: 'glowOuterStrength',\r\n            flagValue: currFlags.glowOuterStrength ?? 2,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize(\"ASE.EffectGlowInnerStrengthLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.EffectGlowInnerStrengthTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.glowInnerStrength',\r\n            flagName: 'glowInnerStrength',\r\n            flagValue: currFlags.glowInnerStrength ?? 0.25,\r\n        });\r\n\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ViscousMockerySoundLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ViscousMockerySoundTooltip\"),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.sound',\r\n            flagName: 'sound',\r\n            flagValue: currFlags.sound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ViscousMockerySoundDelayLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ViscousMockerySoundDelayTooltip\"),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.soundDelay',\r\n            flagName: 'soundDelay',\r\n            flagValue: currFlags.soundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize(\"ASE.ViscousMockerySoundVolumeLabel\"),\r\n            tooltip: game.i18n.localize(\"ASE.ViscousMockerySoundVolumeTooltip\"),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.soundVolume',\r\n            flagName: 'soundVolume',\r\n            flagValue: currFlags.soundVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            spellOptions: spellOptions,\r\n            animOptions: animOptions,\r\n            soundOptions: soundOptions\r\n        }\r\n\r\n    }\r\n}\r\n","import * as utilFunctions from \"../utilityFunctions.js\";\r\n// Importing spells\r\nimport { animateDead } from \"../spells/animateDead.js\";\r\nimport { darkness } from \"../spells/darkness.js\";\r\nimport { detectMagic } from \"../spells/detectMagic.js\";\r\nimport { callLightning } from \"../spells/callLightning.js\";\r\nimport { fogCloud } from \"../spells/fogCloud.js\";\r\nimport { spiritualWeapon } from \"../spells/spiritualWeapon.js\";\r\nimport { steelWindStrike } from \"../spells/steelWindStrike.js\";\r\nimport { thunderStep } from \"../spells/thunderStep.js\";\r\nimport { summonCreature } from \"../spells/summonCreature.js\";\r\nimport { witchBolt } from \"../spells/witchBolt.js\";\r\nimport { magicMissile } from \"../spells/magicMissile.js\";\r\nimport { scorchingRay } from \"../spells/scorchingRay.js\";\r\nimport { eldritchBlast } from \"../spells/eldritchBlast.js\";\r\nimport { vampiricTouch } from \"../spells/vampiricTouch.js\";\r\nimport { moonBeam } from \"../spells/moonBeam.js\";\r\nimport { chainLightning } from \"../spells/chainLightning.js\";\r\nimport { mirrorImage } from \"../spells/mirrorImage.js\";\r\nimport { wallOfForce } from \"../spells/wallOfForce.js\";\r\nimport { chaosBolt } from \"../spells/chaosBolt.js\";\r\nimport { detectStuff } from \"../spells/detectStuff.js\";\r\nimport { viciousMockery } from \"../spells/viciousMockery.js\";\r\nimport { wallSpell } from \"../spells/wallSpell.js\";\r\n\r\nexport class ASESettings extends FormApplication {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.flags = this.object.data.flags.advancedspelleffects;\r\n        if (this.flags) {\r\n            if (!this.flags.effectOptions) {\r\n                this.flags.effectOptions = {};\r\n            }\r\n        }\r\n        this.spellList = {};\r\n        this.spellList[game.i18n.localize(\"ASE.AnimateDead\")] = animateDead;\r\n        this.spellList[game.i18n.localize(\"ASE.CallLightning\")] = callLightning;\r\n        this.spellList[game.i18n.localize(\"ASE.ChaosBolt\")] = chaosBolt;\r\n        this.spellList[game.i18n.localize(\"ASE.DetectMagic\")] = detectMagic;\r\n        this.spellList[game.i18n.localize(\"ASE.FogCloud\")] = fogCloud;\r\n        this.spellList[game.i18n.localize(\"ASE.Darkness\")] = darkness;\r\n        this.spellList[game.i18n.localize(\"ASE.MagicMissile\")] = magicMissile;\r\n        this.spellList[game.i18n.localize(\"ASE.SpiritualWeapon\")] = spiritualWeapon;\r\n        this.spellList[game.i18n.localize(\"ASE.SteelWindStrike\")] = steelWindStrike;\r\n        this.spellList[game.i18n.localize(\"ASE.ThunderStep\")] = thunderStep;\r\n        this.spellList[game.i18n.localize(\"ASE.WitchBolt\")] = witchBolt;\r\n        this.spellList[game.i18n.localize(\"ASE.ScorchingRay\")] = scorchingRay;\r\n        this.spellList[game.i18n.localize(\"ASE.EldritchBlast\")] = eldritchBlast;\r\n        this.spellList[game.i18n.localize(\"ASE.VampiricTouch\")] = vampiricTouch;\r\n        this.spellList[game.i18n.localize(\"ASE.Moonbeam\")] = moonBeam;\r\n        this.spellList[game.i18n.localize(\"ASE.ChainLightning\")] = chainLightning;\r\n        this.spellList[game.i18n.localize(\"ASE.MirrorImage\")] = mirrorImage;\r\n        this.spellList[game.i18n.localize(\"ASE.Summon\")] = summonCreature;\r\n        this.spellList[game.i18n.localize(\"ASE.WallOfForce\")] = wallOfForce;\r\n        this.spellList[game.i18n.localize(\"ASE.DetectStuff\")] = detectStuff;\r\n        this.spellList[game.i18n.localize(\"ASE.ViciousMockery\")] = viciousMockery;\r\n        this.spellList[game.i18n.localize(\"ASE.WallSpell\")] = wallSpell;\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            template: './modules/advancedspelleffects/src/templates/ase-settings-new.html',\r\n            id: 'ase-item-settings',\r\n            title: game.i18n.localize(\"ASE.SettingsWindowTitle\"),\r\n            resizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            closeOnSubmit: true\r\n        });\r\n    }\r\n\r\n    async setItemDetails(item) {\r\n        let data = {\r\n            \"activation\": { \"type\": \"action\", \"cost\": 1, \"condition\": \"\" },\r\n            \"duration\": { \"value\": null, \"units\": \"\" },\r\n            \"target\": { \"value\": null, \"width\": null, \"units\": \"\", \"type\": \"\" },\r\n            \"uses\": { \"value\": 0, \"max\": 0, \"per\": null },\r\n            \"consume\": { \"type\": \"\", \"target\": null, \"amount\": null },\r\n            \"ability\": null,\r\n            \"actionType\": \"other\",\r\n            \"attackBonus\": 0,\r\n            \"critical\": null,\r\n            \"damage\": { \"parts\": [], \"versatile\": \"\" },\r\n            \"formula\": \"\",\r\n            \"save\": { \"ability\": \"\", \"dc\": null, \"scaling\": \"spell\" },\r\n            \"materials\": { \"value\": \"\", \"consumed\": false, \"cost\": 0, \"supply\": 0 },\r\n            \"scaling\": { \"mode\": \"none\", \"formula\": \"\" }\r\n        };\r\n        let damageFormula;\r\n        let damageDieCount;\r\n        let damageDie;\r\n        let damageMod;\r\n        let effectOptions = this.object.data.flags?.advancedspelleffects?.effectOptions ?? {};\r\n        switch (item.name) {\r\n            case game.i18n.localize(\"ASE.DetectMagic\"):\r\n                data.duration = { \"value\": 10, \"units\": \"minute\" };\r\n                break;\r\n            case game.i18n.localize(\"ASE.Darkness\"):\r\n                data.level = 2;\r\n                data.duration = { \"value\": 10, \"units\": \"minute\" };\r\n                break;\r\n            case game.i18n.localize(\"ASE.FogCloud\"):\r\n                data.level = 1;\r\n                data.duration = { \"value\": 10, \"units\": \"minute\" };\r\n                break;\r\n            case game.i18n.localize(\"ASE.WallOfForce\"):\r\n                data.level = 5;\r\n                data.duration = { \"value\": 10, \"units\": \"minute\" };\r\n                break;\r\n            case game.i18n.localize(\"ASE.SteelWindStrike\"):\r\n                data.level = 5;\r\n                break;\r\n            case game.i18n.localize(\"ASE.ThunderStep\"):\r\n                data.level = 3;\r\n                break;\r\n            case game.i18n.localize(\"ASE.SpiritualWeapon\"):\r\n                data.level = 2;\r\n                break;\r\n            case game.i18n.localize(\"ASE.CallLightning\"):\r\n                data.level = 3;\r\n                data.duration = { \"value\": 10, \"units\": \"minute\" };\r\n                break;\r\n            case game.i18n.localize(\"ASE.WitchBolt\"):\r\n                data.level = 1;\r\n                data.actionType = \"rsak\"\r\n                data.damage.parts.push([\"1d12\", \"lightning\"])\r\n                data.duration = { \"value\": 10, \"units\": \"minute\" };\r\n                data.scaling.formula = \"1d12\";\r\n                data.scaling.mode = \"level\";\r\n                break;\r\n            case game.i18n.localize(\"ASE.VampiricTouch\"):\r\n                data.level = 3;\r\n                data.actionType = \"msak\"\r\n                data.damage.parts.push([\"3d6\", \"necrotic\"])\r\n                data.duration = { \"value\": 1, \"units\": \"minute\" };\r\n                data.scaling.formula = \"1d6\";\r\n                data.scaling.mode = \"level\";\r\n                break;\r\n            case game.i18n.localize(\"ASE.ChainLightning\"):\r\n                data.level = 6;\r\n                data.actionType = \"save\";\r\n                damageDieCount = effectOptions.dmgDieCount ?? 10;\r\n                damageDie = effectOptions.dmgDie ?? \"d8\";\r\n                damageMod = effectOptions.dmgMod ?? 0;\r\n                damageFormula = `${damageDieCount}${damageDie}${(damageMod != 0) ? ((damageMod > 0 ? ' + ' : '') + damageMod) : ''}`;\r\n                data.damage.parts.push([damageFormula, \"lightning\"]);\r\n                data.save = { ability: \"dex\", dc: null, scaling: \"spell\" };\r\n                data.target = { value: 1, width: null, units: \"\", type: \"creature\" };\r\n                break;\r\n            case game.i18n.localize(\"ASE.ViciousMockery\"):\r\n                data.level = 0;\r\n                data.actionType = \"save\";\r\n                data.damage.parts.push([\"1d4\", \"psychic\"]);\r\n                data.save = { ability: \"wis\", dc: null, scaling: \"spell\" };\r\n                data.target = { value: 1, width: null, units: \"\", type: \"creature\" };\r\n                data.scaling = { mode: \"cantrip\", formula: \"1d4\" };\r\n                break;\r\n        }\r\n        let updates = { data };\r\n        await item.update(updates);\r\n    }\r\n\r\n    async setEffectData(item, itemName) {\r\n        //console.log(item);\r\n        let flags = this.object.data.flags;\r\n        //let itemName = item.name;\r\n        let returnOBJ = {};\r\n        //console.log(\"Detected item name: \", itemName);\r\n\r\n        let requiredSettings;\r\n        //console.log(\"ASE (setEffectData) Item name: \", itemName);\r\n        if (itemName.includes(game.i18n.localize(\"ASE.Summon\"))) {\r\n            requiredSettings = await summonCreature.getRequiredSettings(flags.advancedspelleffects.effectOptions);\r\n            //console.log(requiredSettings);\r\n            returnOBJ.requiredSettings = requiredSettings;\r\n\r\n            let summonActorsList = game.folders?.getName(\"ASE-Summons\")?.contents ?? [];\r\n            let summonOptions = {};\r\n            let currentSummonTypes = {};\r\n\r\n            summonActorsList.forEach((actor) => {\r\n                summonOptions[actor.name] = actor.id;\r\n            });\r\n\r\n            currentSummonTypes = flags.advancedspelleffects?.effectOptions?.summons ?? [{ name: \"\", actor: \"\", qty: 1 }];\r\n            returnOBJ[\"itemId\"] = item.id;\r\n            if (item.parent) {\r\n                returnOBJ[\"summonerId\"] = item.parent.id;\r\n            }\r\n            else {\r\n                returnOBJ[\"summonerId\"] = \"\";\r\n            }\r\n\r\n            returnOBJ.summons = currentSummonTypes;\r\n            returnOBJ.summonOptions = summonOptions;\r\n            //console.log(returnOBJ);\r\n        }\r\n        else if (itemName.includes(game.i18n.localize(\"ASE.DetectStuff\"))) {\r\n            requiredSettings = await detectStuff.getRequiredSettings(flags.advancedspelleffects.effectOptions);\r\n            //console.log(requiredSettings);\r\n            returnOBJ.requiredSettings = requiredSettings;\r\n            let customTags = flags.advancedspelleffects?.effectOptions?.tags ?? '';\r\n            let tags = customTags.split(\",\");\r\n            let tagOptions = flags.advancedspelleffects?.effectOptions?.tagOptions ?? { tagLabel: \"\", tagEffect: \"\" };\r\n\r\n            returnOBJ.tags = tags;\r\n            returnOBJ.tagOptions = tagOptions;\r\n            returnOBJ[\"itemId\"] = item.id;\r\n            if (item.parent) {\r\n                returnOBJ[\"casterId\"] = item.parent.id;\r\n            }\r\n            else {\r\n                returnOBJ[\"casterId\"] = \"\";\r\n            }\r\n        } else {\r\n            if (this.spellList[game.i18n.localize(itemName)] != undefined) {\r\n                requiredSettings = await this.spellList[game.i18n.localize(itemName)].getRequiredSettings(flags.advancedspelleffects.effectOptions);\r\n            }\r\n            else {\r\n                requiredSettings = await this.spellList[game.i18n.localize(\"ASE.AnimateDead\")].getRequiredSettings(flags.advancedspelleffects.effectOptions);\r\n            }\r\n            //console.log(requiredSettings);\r\n            returnOBJ.requiredSettings = requiredSettings;\r\n        }\r\n        //console.log(returnOBJ);\r\n        return returnOBJ;\r\n    }\r\n\r\n    async getSpellOptions() {\r\n        let spellOptions = {};\r\n        let spellList = this.spellList;\r\n        let spellNames = Object.keys(spellList).sort();\r\n        //console.log(spellNames);\r\n        spellNames.forEach((spellName) => {\r\n            spellOptions[spellName] = spellName;\r\n        });\r\n        //console.log(spellOptions);\r\n        return spellOptions;\r\n    }\r\n\r\n    async getData() {\r\n        let flags = this.object.data.flags;\r\n        //console.log(\"flag: \", flags.advancedspelleffects.spellEffect);\r\n        let item = this.object;\r\n        //console.log(\"item: \", item);\r\n        let itemName = flags.advancedspelleffects?.spellEffect ?? item.name;\r\n        //console.log(\"Pre change item name: \", itemName);\r\n        if (itemName == \"\") {\r\n            itemName = item.name;\r\n            let spellListKeys = Object.keys(this.spellList);\r\n            if (spellListKeys.includes(itemName)) {\r\n                itemName = itemName;\r\n            }\r\n            else {\r\n                itemName = game.i18n.localize(\"ASE.AnimateDead\");\r\n            }\r\n        }\r\n        //console.log(\"post change item name: \", itemName);\r\n        let content = \"\";\r\n        let effectData;\r\n        let spellOptions;\r\n        if (flags.advancedspelleffects?.enableASE) {\r\n            spellOptions = await this.getSpellOptions();\r\n            //console.log(spellOptions);\r\n            effectData = await this.setEffectData(item, itemName);\r\n            await this.setItemDetails(this.object);\r\n        }\r\n        return {\r\n            flags: this.object.data.flags,\r\n            itemName: itemName,\r\n            effectData: effectData,\r\n            spellOptions: spellOptions,\r\n            content: content\r\n        };\r\n\r\n    }\r\n    activateListeners(html) {\r\n        const body = $(\"#ase-item-settings\");\r\n        const animSettings = $(\"#ase-anim-settings\");\r\n        const animSettingsButton = $(\".ase-anim-settingsButton\");\r\n        const soundSettings = $(\"#ase-sound-settings\");\r\n        const soundSettingsButton = $(\".ase-sound-settingsButton\");\r\n        const spellSettings = $(\"#ase-spell-settings\");\r\n        const spellSettingsButton = $(\".ase-spell-settingsButton\");\r\n\r\n        let currentTab = spellSettingsButton;\r\n        let currentBody = spellSettings;\r\n\r\n\r\n        super.activateListeners(html);\r\n        $(\".nav-tab\").click(function () {\r\n            currentBody.toggleClass(\"hide\");\r\n            currentTab.toggleClass(\"selected\");\r\n            if ($(this).hasClass(\"ase-anim-settingsButton\")) {\r\n                //console.log(\"anim\");\r\n                animSettings.toggleClass(\"hide\");\r\n                currentBody = animSettings;\r\n                currentTab = animSettingsButton;\r\n            } else if ($(this).hasClass(\"ase-sound-settingsButton\")) {\r\n                //console.log(\"sound\");\r\n                soundSettings.toggleClass(\"hide\");\r\n                currentBody = soundSettings;\r\n                currentTab = soundSettingsButton;\r\n            } else if ($(this).hasClass(\"ase-spell-settingsButton\")) {\r\n                //console.log(\"spell\");\r\n                spellSettings.toggleClass(\"hide\");\r\n                currentBody = spellSettings;\r\n                currentTab = spellSettingsButton;\r\n            }\r\n            currentTab.toggleClass(\"selected\");\r\n            body.height(\"auto\");\r\n            body.width(\"auto\");\r\n        });\r\n\r\n        html.find('.ase-enable-checkbox input[type=\"checkbox\"]').click(evt => {\r\n            this.submit({ preventClose: true }).then(() => this.render());\r\n            $(\"#ase-item-settings\").height(\"auto\");\r\n            $(\"#ase-item-settings\").width(\"auto\");\r\n        });\r\n        html.find('.ase-spell-settings-select').change(evt => {\r\n            this.submit({ preventClose: true }).then(() => this.render());\r\n            $(\"#ase-item-settings\").height(\"auto\");\r\n            $(\"#ase-item-settings\").width(\"auto\");\r\n        });\r\n        html.find('.ase-spell-settings-numInput').change(evt => {\r\n            this.submit({ preventClose: true }).then(() => this.render());\r\n            $(\"#ase-item-settings\").height(\"auto\");\r\n            $(\"#ase-item-settings\").width(\"auto\");\r\n        });\r\n\r\n        //console.log(this);\r\n        html.find('.addType').click(this._addSummonType.bind(this));\r\n        html.find('.removeType').click(this._removeSummonType.bind(this));\r\n        html.find('.addTag').click(this._addTag.bind(this));\r\n        html.find('.removeTag').click(this._removeTag.bind(this));\r\n    }\r\n\r\n    async _removeSummonType(e) {\r\n        //console.log(e);\r\n        let summonsTable = document.getElementById(\"summonsTable\").getElementsByTagName('tbody')[0];\r\n        let row = summonsTable.rows[summonsTable.rows.length - 1];\r\n        let cells = row.cells;\r\n        //console.log(row, cells);\r\n        let summonTypeIndex = cells[1].children[0].name.match(/\\d+/)[0];\r\n        //console.log(summonTypeIndex);\r\n        let itemId = document.getElementById(\"hdnItemId\").value;\r\n        let actorId = document.getElementById(\"hdnSummonerId\").value;\r\n        let item;\r\n        if (actorId != \"\") {\r\n            let summoner = game.actors.get(actorId);\r\n            item = summoner.items.get(itemId);\r\n            //console.log(summoner, item);\r\n        } else {\r\n            item = game.items.get(itemId);\r\n            //console.log(item);\r\n        }\r\n        summonsTable.rows[summonsTable.rows.length - 1].remove();\r\n        await item.unsetFlag(\"advancedspelleffects\", `effectOptions.summons.${summonTypeIndex}`);\r\n        if (this.flags) {\r\n            delete this.flags.effectOptions.summons[summonTypeIndex];\r\n        }\r\n\r\n        //console.log(this.flags);\r\n        this.submit({ preventClose: true }).then(() => this.render());\r\n    }\r\n\r\n    async _addSummonType(e) {\r\n        //console.log(e);\r\n        let summonsTable = document.getElementById(\"summonsTable\").getElementsByTagName('tbody')[0];\r\n        //console.log(summonsTable);\r\n        //console.log(this);\r\n        let newSummonRow = summonsTable.insertRow(-1);\r\n        let newLabel1 = newSummonRow.insertCell(0);\r\n        let newTextInput = newSummonRow.insertCell(1);\r\n        let newLabel2 = newSummonRow.insertCell(2);\r\n        let newSelect = newSummonRow.insertCell(3);\r\n        let newLabel3 = newSummonRow.insertCell(4);\r\n        let newQtyInput = newSummonRow.insertCell(5);\r\n        newLabel1.innerHTML = `<label><b>${game.i18n.localize(\"ASE.SummonTypeNameLabel\")}</b></label>`;\r\n        newTextInput.innerHTML = `<input type=\"text\"\r\n        name=\"flags.advancedspelleffects.effectOptions.summons.${summonsTable.rows.length - 1}.name\"\r\n        value=\"\">`;\r\n        newLabel2.innerHTML = `<label><b>${game.i18n.localize(\"ASE.AssociatedActorLabel\")}</b></label>`;\r\n        newSelect.innerHTML = ` <select name=\"flags.advancedspelleffects.effectOptions.summons.${summonsTable.rows.length - 1}.actor\">\r\n        {{#each ../effectData.summonOptions as |id name|}}\r\n        <option value=\"\">{{name}}</option>\r\n        {{/each}}\r\n    </select>`;\r\n        newLabel3.innerHTML = `<label><b>game.i18n.localize(\"ASE.SummonQuantityLabel\")</b></label>`;\r\n        newQtyInput.innerHTML = `<input style='width: 3em;' type=\"text\"\r\n    name=\"flags.advancedspelleffects.effectOptions.summons.${summonsTable.rows.length - 1}.qty\"\r\n    value=1>`;\r\n        this.submit({ preventClose: true }).then(() => this.render());\r\n    }\r\n\r\n    async _addTag(e) {\r\n        //console.log(e);\r\n        let tagsTable = document.getElementById(\"tagsTable\").getElementsByTagName('tbody')[0];\r\n        //console.log(tagsTable);\r\n        //console.log(this);\r\n        let newTagRow = tagsTable.insertRow(-1);\r\n        let newLabel1 = newTagRow.insertCell(0);\r\n        let newTextInput = newTagRow.insertCell(1);\r\n        newLabel1.innerHTML = `<label><b>${game.i18n.localize(\"ASE.TagNameLabel\")}</b></label>`;\r\n        newTextInput.innerHTML = `<input type=\"text\"\r\n        name=\"flags.advancedspelleffects.effectOptions.tagOptions.${tagsTable.rows.length - 1}.tagLabel\"\r\n        value=\"\">`;\r\n        this.submit({ preventClose: true }).then(() => this.render());\r\n    }\r\n\r\n    async _removeTag(e) {\r\n        //console.log(e);\r\n        let tagsTable = document.getElementById(\"tagsTable\").getElementsByTagName('tbody')[0];\r\n        let row = tagsTable.rows[tagsTable.rows.length - 1];\r\n        let cells = row.cells;\r\n        //console.log(row, cells);\r\n        let tagIndex = cells[1].children[0].name.match(/\\d+/)[0];\r\n        //console.log(tagIndex);\r\n        let itemId = document.getElementById(\"hdnItemId\").value;\r\n        let actorId = document.getElementById(\"hdnCasterId\").value;\r\n        let item;\r\n        if (actorId != \"\") {\r\n            let caster = game.actors.get(actorId);\r\n            item = caster.items.get(itemId);\r\n            //console.log(summoner, item);\r\n        } else {\r\n            item = game.items.get(itemId);\r\n            //console.log(item);\r\n        }\r\n        tagsTable.rows[tagsTable.rows.length - 1].remove();\r\n        await item.unsetFlag(\"advancedspelleffects\", `effectOptions.tagOptions.${tagIndex}`);\r\n        if (this.flags) {\r\n            delete this.flags.effectOptions.tagOptions[tagIndex];\r\n        }\r\n\r\n        //console.log(this.flags);\r\n        this.submit({ preventClose: true }).then(() => this.render());\r\n    }\r\n\r\n    async _updateObject(event, formData) {\r\n        //console.log(formData);\r\n        console.log(\"Saving ASE item...\");\r\n        //await this.object.unsetFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        await this.setItemDetails(this.object);\r\n        formData = expandObject(formData);\r\n        //console.log(formData);\r\n        if (!formData.changes) formData.changes = [];\r\n        //console.log(formData.changes);\r\n        formData.changes = Object.values(formData.changes);\r\n        for (let c of formData.changes) {\r\n            //@ts-ignore\r\n            if (Number.isNumeric(c.value))\r\n                c.value = parseFloat(c.value);\r\n        }\r\n        return this.object.update(formData);\r\n    }\r\n}\r\nexport default ASESettings;\r\n\r\nHandlebars.registerHelper('ifCondASE', function (v1, operator, v2, options) {\r\n    switch (operator) {\r\n        case '==':\r\n            return (v1 == v2) ? options.fn(this) : options.inverse(this);\r\n        case '===':\r\n            return (v1 === v2) ? options.fn(this) : options.inverse(this);\r\n        case '!=':\r\n            return (v1 != v2) ? options.fn(this) : options.inverse(this);\r\n        case '!==':\r\n            return (v1 !== v2) ? options.fn(this) : options.inverse(this);\r\n        case '<':\r\n            return (v1 < v2) ? options.fn(this) : options.inverse(this);\r\n        case '<=':\r\n            return (v1 <= v2) ? options.fn(this) : options.inverse(this);\r\n        case '>':\r\n            return (v1 > v2) ? options.fn(this) : options.inverse(this);\r\n        case '>=':\r\n            return (v1 >= v2) ? options.fn(this) : options.inverse(this);\r\n        case '&&':\r\n            return (v1 && v2) ? options.fn(this) : options.inverse(this);\r\n        case '||':\r\n            return (v1 || v2) ? options.fn(this) : options.inverse(this);\r\n        case 'includes':\r\n            return (v1.includes(v2)) ? options.fn(this) : options.inverse(this);\r\n        default:\r\n            return options.inverse(this);\r\n    }\r\n});\r\n\r\n\r\n","import { animateDeadDialog } from \"../apps/animte-dead-dialog.js\"\r\nimport AnimateDeadDialog  from \"../svelteApps/AnimateDeadDialog.js\"\r\n\r\nimport ASESettings from \"../apps/aseSettings.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class animateDead {\r\n    static registerHooks() {\r\n        return;\r\n    }\r\n\r\n    static async rise(midiData) {\r\n\r\n        const actorD = midiData.actor;\r\n        const tokenD = canvas.tokens.get(midiData.tokenId);\r\n        const itemD = actorD.items.getName(midiData.item.name);\r\n        let aseSettings = itemD.getFlag(\"advancedspelleffects\", \"effectOptions\");\r\n        const spellLevel = midiData.itemLevel ? Number(midiData.itemLevel) : 3;\r\n        const spellSaveDC = midiData.actor?.data?.data?.attributes?.spelldc ?? 10;\r\n        const raiseLimit = (2 * spellLevel) - 5;\r\n        const detectRange = aseSettings.range ?? 10;\r\n        let corpses = canvas.tokens.placeables.filter(function (target) {\r\n            return target?.actor?.data?.data?.attributes?.hp?.value == 0\r\n                && utilFunctions.measureDistance(utilFunctions.getCenter(tokenD.data), utilFunctions.getCenter(target.data)) <= detectRange\r\n                && target !== tokenD\r\n        });\r\n\r\n        new AnimateDeadDialog({corpses: corpses, raiseLimit: raiseLimit, effectSettings: aseSettings }, {}).render(true);\r\n\r\n    }\r\n\r\n    static async getRequiredSettings(currFlags) {\r\n        //console.log(\"Curr Flags: \", currFlags);\r\n        if (!currFlags) currFlags = {};\r\n        const magicSignsRaw = `jb2a.magic_signs.circle.02`;\r\n        const magicSchoolOptions = utilFunctions.getDBOptions(magicSignsRaw);\r\n\r\n        //console.log(\"ANIMATE DEAD: Magic School Options: \", magicSchoolOptions);\r\n\r\n        const magicSchoolColorsRaw = `jb2a.magic_signs.circle.02.${currFlags.magicSchool ?? 'abjuration'}.intro`;\r\n        const magicSchoolColorOptions = utilFunctions.getDBOptions(magicSchoolColorsRaw);\r\n\r\n        const effectAColorsRaw = `jb2a.eldritch_blast`;\r\n        const effectAColorOptions = utilFunctions.getDBOptions(effectAColorsRaw);\r\n\r\n        const effectBColorsRaw = `jb2a.energy_strands.complete`;\r\n        const effectBColorOptions = utilFunctions.getDBOptions(effectBColorsRaw);\r\n\r\n        const portalColorsRaw = `jb2a.portals.vertical.vortex`;\r\n        const portalColorOptions = utilFunctions.getDBOptions(portalColorsRaw);\r\n\r\n        const portalImpactColorsRaw = `jb2a.impact.010`;\r\n        const portalImpactColorOptions = utilFunctions.getDBOptions(portalImpactColorsRaw);\r\n        let summonActorsFolder = game.folders?.getName(\"ASE-Summons\");\r\n        let summonActorsList = summonActorsFolder?.contents ?? [];\r\n\r\n        if (!summonActorsFolder || summonActorsList.length === 0) {\r\n            summonActorsList = await utilFunctions.createFolderWithActors(\"ASE-Summons\", [\"Skeleton\", \"Zombie\"]);\r\n        }\r\n        let summonOptions = [];\r\n        let tempObj = {};\r\n        summonActorsList.forEach((actor) => {\r\n            //summonOptions[actor.id] = actor.name;\r\n            tempObj = {};\r\n            tempObj[actor.id] = actor.name;\r\n            summonOptions.push(tempObj);\r\n        });\r\n\r\n        if(summonOptions.length === 0) {\r\n            summonOptions.push({\"\": \"No Summonable Actors\"});\r\n        }\r\n\r\n        let spellOptions = [];\r\n        let animOptions = [];\r\n        let soundOptions = [];\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize('ASE.ZombieActorLabel'),\r\n            type: 'dropdown',\r\n            options: summonOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.summons.zombie.actor',\r\n            flagName: 'zombieActor',\r\n            flagValue: currFlags.zombieActor ?? Object.keys(Object.values(summonOptions)[0])[0],\r\n        });\r\n        spellOptions.push({\r\n            label: game.i18n.localize('ASE.SkeletonActorLabel'),\r\n            type: 'dropdown',\r\n            options: summonOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.summons.skeleton.actor',\r\n            flagName: 'skeletonActor',\r\n            flagValue: currFlags.skeletonActor ?? Object.keys(Object.values(summonOptions)[0])[0],\r\n        });\r\n\r\n        spellOptions.push({\r\n            label: game.i18n.localize('ASE.animateDeadRangeLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.range',\r\n            flagName: 'range',\r\n            flagValue: currFlags.range ?? 10\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolLabel'),\r\n            type: 'dropdown',\r\n            options: magicSchoolOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchool',\r\n            flagName: 'magicSchool',\r\n            flagValue: currFlags.magicSchool ?? 'abjuration',\r\n        });\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolColorLabel'),\r\n            type: 'dropdown',\r\n            options: magicSchoolColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolColor',\r\n            flagName: 'magicSchoolColor',\r\n            flagValue: currFlags.magicSchoolColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolIntroSoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolSound',\r\n            flagName: 'magicSchoolSound',\r\n            flagValue: currFlags.magicSchoolSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolIntroSoundDelayLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolSoundDelay',\r\n            flagName: 'magicSchoolSoundDelay',\r\n            flagValue: currFlags.magicSchoolSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolIntroSoundVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolVolume',\r\n            flagName: 'magicSchoolVolume',\r\n            flagValue: currFlags.magicSchoolVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolOutroSoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolSoundOutro',\r\n            flagName: 'magicSchoolSoundOutro',\r\n            flagValue: currFlags.magicSchoolSoundOutro ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolOutroSoundDelayLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolSoundDelayOutro',\r\n            flagName: 'magicSchoolSoundDelayOutro',\r\n            flagValue: currFlags.magicSchoolSoundDelayOutro ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.MagicSchoolOutroSoundVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.magicSchoolVolumeOutro',\r\n            flagName: 'magicSchoolVolumeOutro',\r\n            flagValue: currFlags.magicSchoolVolumeOutro ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.EffectAColorLabel'),\r\n            type: 'dropdown',\r\n            options: effectAColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.effectAColor',\r\n            flagName: 'effectAColor',\r\n            flagValue: currFlags.effectAColor ?? 'green',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.EffectASoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectASound',\r\n            flagName: 'effectASound',\r\n            flagValue: currFlags.effectASound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.EffectASoundDelayLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectASoundDelay',\r\n            flagName: 'effectASoundDelay',\r\n            flagValue: currFlags.effectASoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.EffectASoundVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectASoundVolume',\r\n            flagName: 'effectASoundVolume',\r\n            flagValue: currFlags.effectASoundVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        animOptions.push({\r\n            label: game.i18n.localize('ASE.EffectBColorLabel'),\r\n            type: 'dropdown',\r\n            options: effectBColorOptions,\r\n            name: 'flags.advancedspelleffects.effectOptions.effectBColor',\r\n            flagName: 'effectBColor',\r\n            flagValue: currFlags.effectBColor ?? 'blue',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.EffectBSoundLabel'),\r\n            type: 'fileInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectBSound',\r\n            flagName: 'effectBSound',\r\n            flagValue: currFlags.effectBSound ?? '',\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.EffectBSoundDelayLabel'),\r\n            type: 'numberInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectBSoundDelay',\r\n            flagName: 'effectBSoundDelay',\r\n            flagValue: currFlags.effectBSoundDelay ?? 0,\r\n        });\r\n        soundOptions.push({\r\n            label: game.i18n.localize('ASE.EffectBSoundVolumeLabel'),\r\n            type: 'rangeInput',\r\n            name: 'flags.advancedspelleffects.effectOptions.effectBSoundVolume',\r\n            flagName: 'effectBSoundVolume',\r\n            flagValue: currFlags.effectBSoundVolume ?? 0.5,\r\n            min: 0,\r\n            max: 1,\r\n            step: 0.01,\r\n        });\r\n\r\n        return {\r\n            animOptions: animOptions,\r\n            spellOptions: spellOptions,\r\n            soundOptions: soundOptions,\r\n            allowInitialMidiCall: true,\r\n        }\r\n\r\n    }\r\n\r\n}","import { localize }           from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\nimport { ArrayObjectStore }   from \"@typhonjs-fvtt/svelte-standard/store\";\r\n\r\nimport * as spells from '../spells';\r\n\r\n/**\r\n * Provides a Svelte store for all spells.\r\n *\r\n * @template {SpellEntryStore} T\r\n */\r\nexport class SpellStore extends ArrayObjectStore {\r\n   constructor() {\r\n      super({ StoreClass: SpellEntryStore });\r\n   }\r\n\r\n   /**\r\n    * Get first spell in store. This likely is temporary; used in `sharedSettings` when there is no existing ASE data.\r\n    *\r\n    * @returns {T}\r\n    */\r\n   get first() { return this._data[0]; }\r\n\r\n   /**\r\n    * Loads and registers all hooks from spell classes defined in './spells'.\r\n    */\r\n   async initialize() {\r\n      console.log(\"ASE: SpellStore initialize: \", spells);\r\n      let flagData = {};\r\n      if (this.length > 0) { throw new Error(`SpellStore has already been initialized.`); }\r\n\r\n      for (const [name, effect] of Object.entries(spells)) {\r\n         flagData = {};\r\n         let settings = {};\r\n        //build flag data from spell settings\r\n         settings = await effect.getRequiredSettings();\r\n         \r\n         for (const [settingType, setting] of Object.entries(settings)) {\r\n            if(settingType == \"summons\"){\r\n               flagData['summons'] = setting;\r\n            }\r\n            if(settingType != 'summonOptions' && settingType != 'allowInitialMidiCall') {\r\n               //console.log(\"ASE: SPELLSTORE INIT: SETTING: \", setting, \"SETTINGTYPE: \", settingType);\r\n               setting.forEach(s => {\r\n                  flagData[s.flagName] = s.flagValue;\r\n               });\r\n            }\r\n            if (settingType == 'allowInitialMidiCall'){\r\n               flagData['allowInitialMidiCall'] = setting;\r\n            }\r\n         }\r\n\r\n         if (typeof effect.registerHooks === 'function') { effect.registerHooks(); }\r\n         // Add spell data to ArrayObjectStore.\r\n         this.createEntry({\r\n            name: localize(`ASE.${name[0].toUpperCase()}${name.substring(1)}`),\r\n            effect: effect, \r\n            flagData: flagData, \r\n            settings: settings\r\n         });\r\n      }\r\n      console.log(\"ASE: SpellStore initialized: \", this);\r\n   }\r\n\r\n   async reInit(){\r\n      while(this.length > 0){\r\n         this.deleteEntry(this._data[0].id);\r\n      }\r\n      let flagData = {};\r\n      if (this.length > 0) { throw new Error(`SpellStore has already been initialized.`); }\r\n\r\n      for (const [name, effect] of Object.entries(spells)) {\r\n         flagData = {};\r\n         let settings = {};\r\n        //build flag data from spell settings\r\n\r\n         settings = await effect.getRequiredSettings();\r\n         \r\n         for (const [settingType, setting] of Object.entries(settings)) {\r\n            if(settingType == \"summons\"){\r\n               flagData['summons'] = setting;\r\n            }\r\n            if(settingType != 'summonOptions' && settingType != 'allowInitialMidiCall') {\r\n               //console.log(\"ASE: SPELLSTORE INIT: SETTING: \", setting, \"SETTINGTYPE: \", settingType);\r\n               setting.forEach(s => {\r\n                  flagData[s.flagName] = s.flagValue;\r\n               });\r\n            }\r\n            if (settingType == 'allowInitialMidiCall'){\r\n               flagData['allowInitialMidiCall'] = setting;\r\n            }\r\n         }\r\n         // Add spell data to ArrayObjectStore.\r\n         this.createEntry({\r\n            name: localize(`ASE.${name[0].toUpperCase()}${name.substring(1)}`),\r\n            effect: effect, \r\n            flagData: flagData, \r\n            settings: settings\r\n         });\r\n      }\r\n      console.log(\"ASE: SpellStore initialized: \", this);\r\n   }\r\n\r\n}\r\n\r\nclass SpellEntryStore extends SpellStore.EntryStore {\r\n   constructor(data = {}) {\r\n      super(data);\r\n   }\r\n\r\n   /**\r\n    * @returns {string} The localized spell name.\r\n    */\r\n   get name() { return this._data.name; }\r\n\r\n   /**\r\n    * @returns {new (data: object) => object} The spell constructor function.\r\n    */\r\n   get effect() { return this._data.effect; }\r\n\r\n   /**\r\n    * @returns {new (data: object) => object} The flag data object for this spell\r\n    */\r\n   get flagData() { return this._data.flags; }\r\n\r\n   /**\r\n    * @returns {new (data: object) => object} The settings object for this spell\r\n    */\r\n   get settings() { return this._data.settings; }\r\n\r\n   /**\r\n    * Static getRequiredSettings function from effect class.\r\n    *\r\n    * @returns {(currFlags: object) => SpellSettingsData}\r\n    */\r\n   get getRequiredSettings() { return this._data.effect.getRequiredSettings; }\r\n\r\n   /**\r\n    * ArrayObjectStore requires writable stores for entry data; since the entries are static this is a 'noop'\r\n    * @param {object}   data -\r\n    */\r\n   set(data) { /* noop */ }\r\n}\r\n\r\nexport const spellStore = new SpellStore();\r\n\r\n/**\r\n * @typedef {object} SpellSettingsData\r\n *\r\n * @property {object[]}   animOptions -\r\n *\r\n * @property {object[]}   spellOptions -\r\n *\r\n * @property {object[]}   soundOptions -\r\n */\r\n","<script>\r\n\r\n    export let enableASE;\r\n    console.log(\"----------------------ENTERING ENABLEASE COMPONENT----------------------\");\r\n\r\n    let enableASELabel = game.i18n.localize(\"ASE.ConvertToASELabel\");\r\n    \r\n</script>\r\n\r\n<div class=\"ase-shared-settings\">\r\n    <table>\r\n        <tbody style='border-top: 1pt solid black;border-bottom: none;'>\r\n            <tr>\r\n                <td>\r\n                    <label\r\n                        for=\"enableASE\"\r\n                        class={enableASE ? \"selected\" : \"notSelected\"}\r\n                        >{enableASELabel}</label\r\n                    >\r\n                </td>\r\n                <td>\r\n                    <!-- checkbox input to select spellEffect-->\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        id=\"enableASE\"\r\n                        bind:checked={enableASE}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n","<script>\r\n\r\n    import { spellStore } from \"../../stores/spellStore.js\";\r\n    import { getContext } from \"svelte\";\r\n    export let itemName;\r\n    console.log(\"----------------------ENTERING SHARED SETTINGS COMPONENT----------------------\");\r\n\r\n    //console.log(\"spellStore: \", spellStore);\r\n    const spellStoreHost = getContext(\"spellStoreHost\");\r\n    let currentSpell = $spellStoreHost;\r\n\r\n    $: {\r\n        console.log(\"Shared Settings: currentSpell: \", $currentSpell);\r\n        $spellStoreHost = currentSpell;\r\n    }\r\n\r\n    let ASESettingsLabel = game.i18n.localize(\"ASE.ASESettingsLabel\");\r\n</script>\r\n\r\n<div class=\"ase-shared-settings\">\r\n    <div>\r\n        <table>\r\n            <tbody style='border-top: none;border-bottom: none;'>\r\n                <tr>\r\n                    <td>\r\n                        <label for=\"itemNameLabel\">{ASESettingsLabel}</label>\r\n                    </td>\r\n                    <td>\r\n                        <p id=\"itemNameLabel\"><b>{itemName}</b></p>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label for=\"spellEffect\"> Use Effect: </label>\r\n                    </td>\r\n                    <td>\r\n                        <!-- drop down input to select spellEffect-->\r\n                        <select id=\"spellEffect\" bind:value={currentSpell}>\r\n                            {#each $spellStore as spell (spell.id)}\r\n                                <option value={spell}>{spell.name}</option>\r\n                            {/each}\r\n                        </select>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n","<script>\r\n    import { spellStore } from \"../../stores/spellStore.js\";\r\n    import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n    import { getContext } from \"svelte\";\r\n    console.log(\"----------------------ENTERING CUSTOM SUMMON SETTINGS COMPONENT----------------------\");\r\n\r\n    const spellStoreHost = getContext(\"spellStoreHost\");\r\n    let spellEffect = $spellStoreHost;\r\n    $: spellEffect = $spellStoreHost; \r\n    let summonOptions = $spellEffect.settings.summonOptions;\r\n    console.log(\"Custom Summon Stuff Settings: summonOptions: \", summonOptions);\r\n    console.log(\"Custom Summon Settings: spell Effect: \", $spellEffect);\r\n    if(!$spellEffect.flagData.summons || $spellEffect.flagData.summons.length == 0){\r\n        $spellEffect.flagData.summons = [{name: \"\", actor: summonOptions[0].id, qty: 1}];\r\n    }\r\n    let summons = $spellEffect.flagData.summons;\r\n    console.log(\"Custom Summon Stuff Settings: summons: \", summons);\r\n    let summonTypeLabel = localize(\"ASE.SummonTypeNameLabel\");\r\n    let associatedActorLabel = localize(\"ASE.AssociatedActorLabel\");\r\n    let summonQuantityLabel = localize(\"ASE.SummonQuantityLabel\");\r\n\r\n    function addSummon(){\r\n        summons.push({name: '', actor: summonOptions[0].id, qty: 1});\r\n        summons = summons;\r\n    }\r\n    function removeSummon(){\r\n        if(summons.length == 1){\r\n            ui.notifications.info(\"Cannot remove last summon\");\r\n            return;\r\n        }\r\n        summons.pop();\r\n        summons = summons;\r\n    }\r\n</script>\r\n\r\n<table id=\"summonsTable\" width=\"100%\">\r\n    <tbody>\r\n        <!-- custom summon section  -->\r\n        {#each summons as summon,i}\r\n            <tr>\r\n                <td>\r\n                    <label for={summon.name}><b>{summonTypeLabel}</b></label>\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\"\r\n                        id={summon.name}\r\n                        bind:value={summons[i].name}>\r\n                </td>\r\n                <td>\r\n                    <label for={summon.actor}><b>{associatedActorLabel}</b></label>\r\n                </td>\r\n                <td> <select\r\n                        id={summon.actor} \r\n                        bind:value={summons[i].actor}>\r\n                        {#each summonOptions as {id, name}}\r\n                            <option value={id}>{name}</option>\r\n                        {/each}\r\n                    </select>\r\n                </td>\r\n                <td>\r\n                    <label for={summon.qty}><b>{summonQuantityLabel}</b></label>\r\n                </td>\r\n                <td>\r\n                    <input style='width: 3em;' type=\"text\"\r\n                        id={summon.qty}\r\n                        bind:value={summons[i].qty}>\r\n                </td>\r\n            </tr>\r\n        {/each}\r\n        <tr>\r\n            <td>\r\n                <button\r\n                    on:click={addSummon}>\r\n                    {localize(\"ASE.AddTypeButtonLabel\")}\r\n                </button>\r\n            </td>\r\n            <td>\r\n                <button\r\n                    on:click={removeSummon}>\r\n                    {localize(\"ASE.RemoveTypeButtonLabel\")}\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","<script>\r\n    import { spellStore } from \"../../stores/spellStore.js\";\r\n    import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n    import { getContext } from \"svelte\";\r\n    //export let spellEffect;\r\n    console.log(\"----------------------ENTERING CUSTOM DETECT SETTINGS COMPONENT----------------------\");\r\n\r\n    const spellStoreHost = getContext(\"spellStoreHost\");\r\n    let spellEffect = $spellStoreHost;\r\n    $: spellEffect = $spellStoreHost; \r\n    console.log(\"Custom Detect Stuff Settings: spell Effect: \", $spellEffect);\r\n\r\n    if(!$spellEffect.flagData.tagOptions || $spellEffect.flagData.tagOptions.length == 0){\r\n        $spellEffect.flagData.tagOptions = [{tagEffect: \"\", tagLabel: \"\"}];\r\n    }\r\n    \r\n    let tags = $spellEffect.flagData.tagOptions ?? [{tagEffect: \"\", tagLabel: \"\"}];\r\n    console.log(\"Custom Detect Stuff Settings: tags: \", tags);\r\n\r\n    function addTag() {\r\n        tags.push({tagEffect: \"\", tagLabel: \"\"});\r\n        tags = tags;\r\n    }\r\n    function removeTag() {\r\n        if(tags.length == 1){\r\n            ui.notifications.info(\"Cannot remove last tag\");\r\n            return;\r\n        }\r\n        tags.pop();\r\n        tags = tags;\r\n    }\r\n</script>\r\n<table id=\"tagsTable\" width=\"100%\" title=\"Custom Tags\">\r\n    <tbody>\r\n        <tr>\r\n            <th colspan=\"4\">{localize(\"ASE.TagTableLabel\")}</th>\r\n        </tr>\r\n        {#each tags as tag,i}\r\n            <tr>\r\n                <td>\r\n                    <label for={tag.tagLabel}\r\n                        title='{localize(\"ASE.TagNameTooltip\")}'><b>{localize(\"ASE.TagNameLabel\")}</b></label>\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\"\r\n                        id={tag.tagLabel}\r\n                        bind:value=\"{tags[i].tagLabel}\">\r\n                </td>\r\n                <td>\r\n                    <label for={tag.tagEffect}\r\n                        title='{localize(\"ASE.TagEffectTooltip\")}'><b>{localize(\"ASE.TagEffectLabel\")}</b></label>\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\"\r\n                        id={tag.tagEffect}\r\n                        bind:value=\"{tags[i].tagEffect}\">\r\n                </td>\r\n            </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n<div style=\"text-align:center;\">\r\n    <div style=\"margin:auto;\">\r\n        <button title='{localize(\"ASE.AddTagButtonTooltip\")}' on:click={addTag}>\r\n            {localize(\"ASE.AddTagButtonLabel\")}\r\n        </button>\r\n\r\n        <button title='{localize(\"ASE.RemoveTagButtonTooltip\")}' on:click={removeTag}>\r\n            <i class=\"fas fa-times\"></i> {localize(\"ASE.RemoveTagButtonLabel\")}\r\n        </button>\r\n    </div>\r\n</div>","<script>\r\n    import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n    import CustomSummonForm from \"./CustomSummonForm.svelte\";\r\n    import CustomDetectForm from \"./CustomDetectForm.svelte\";\r\n    import { getContext } from \"svelte\";\r\n    \r\n    //export let spellEffect;\r\n    const spellStoreHost = getContext(\"spellStoreHost\");\r\n    let spellEffect = $spellStoreHost;\r\n    $: spellEffect = $spellStoreHost; \r\n\r\n    console.log(\"Spell Settings: --------ENTERING SPELL SETTINGS COMPONENT-------\");\r\n    console.log(\"Spell Settings: spellEffect: \", $spellEffect);\r\n\r\n    let summonOptions = $spellEffect.settings.summonOptions ?? [];\r\n    let wallSpecificSettings = {};\r\n    let wallType = $spellEffect.flagData.wallType ?? \"fire\";\r\n\r\n\r\n    $: {\r\n        if($spellEffect.name.includes(localize(\"ASE.WallSpell\"))){\r\n            console.log(\"Spell Settings: Chaning wall type to: \", wallType);\r\n            $spellEffect.flagData.wallType = wallType;\r\n            wallSpecificSettings = $spellEffect.effect.getRequiredSettings($spellEffect.flagData);\r\n            $spellEffect.settings = wallSpecificSettings;\r\n            $spellEffect.flagData.panelCount = wallSpecificSettings.spellOptions.find((x) => x.flagName == 'panelCount')?.flagValue ?? 10;\r\n            $spellEffect.flagData.wallSegmentSize = wallSpecificSettings.spellOptions.find((x) => x.flagName == 'wallSegmentSize')?.flagValue ?? 10;\r\n            $spellEffect.flagData.forceColor = wallSpecificSettings.animOptions.find((x) => x.flagName == 'forceColor')?.flagValue ?? 'blue';\r\n\r\n        }\r\n    };\r\n\r\n</script>\r\n\r\n<table class=\"ase-spell-settings-table\">\r\n    <tbody style='border-top: 1pt solid black;border-bottom: 1pt solid black;'>\r\n            {#each $spellEffect.settings.spellOptions as setting (setting.flagName)}\r\n                <tr>\r\n                    <td>\r\n                        <label for=\"{setting.flagName}\">{setting.label}</label>\r\n                    </td>\r\n                    <td>\r\n                        {#if setting.type == \"numberInput\"}\r\n                            <input type=\"text\" id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}/>\r\n                        {/if}\r\n                        {#if setting.type == \"checkbox\"}\r\n                            <input type=\"checkbox\" id={setting.flagName} bind:checked={$spellEffect.flagData[setting.flagName]}/>\r\n                        {/if}\r\n                        {#if setting.type == \"dropdown\" && setting.flagName.includes(\"wallType\")}\r\n                            <select id={setting.flagName} bind:value={wallType}>\r\n                                {#each setting.options as option}\r\n                                    <option value={Object.keys(option)[0]}>{Object.values(option)[0]}</option>\r\n                                {/each}\r\n                            </select>\r\n                        {/if}\r\n                        {#if setting.type == \"dropdown\" && !setting.flagName.includes(\"wallType\")}\r\n                            <select id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}>\r\n                                {#each setting.options as option}\r\n                                    <option value={Object.keys(option)[0]}>{Object.values(option)[0]}</option>\r\n                                {/each}\r\n                            </select>\r\n                        {/if}\r\n                        {#if setting.type == \"textInput\"}\r\n                            <input type=\"text\" id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}/>\r\n                        {/if}\r\n                        {#if setting.type == \"rangeInput\"}\r\n                            <input type=\"range\" min=\"{setting.min}\" max=\"{setting.max}\"\r\n                                step=\"{setting.step}\"\r\n                                oninput=\"this.nextElementSibling.value = this.value\"\r\n                                name=\"{setting.flagName}\" bind:value={$spellEffect.flagData[setting.flagName]}>\r\n                            <output style=\"font-weight: bold;\">{$spellEffect.flagData[setting.flagName]}</output>\r\n                        {/if}\r\n                    </td>\r\n                </tr>\r\n            {/each}\r\n    </tbody>\r\n</table>\r\n{#if $spellEffect.name.includes(localize(\"ASE.Summon\"))}\r\n    <CustomSummonForm/>\r\n{/if}\r\n{#if $spellEffect.name.includes(localize(\"ASE.DetectStuff\"))}\r\n    <CustomDetectForm/>\r\n{/if}\r\n\r\n","<script>\r\n    import { spellStore } from \"../../stores/spellStore.js\";\r\n    import { getContext } from \"svelte\";\r\n\r\n    //export let spellEffect;\r\n\r\n    console.log(\"Anim Settings: ---------ENTERING ANIM SETTINGS COMPONENT--------\");\r\n\r\n    const spellStoreHost = getContext(\"spellStoreHost\");\r\n    let spellEffect = $spellStoreHost;\r\n    $: spellEffect = $spellStoreHost; \r\n    $: console.log(\"Anim Settings: spellEffect\", spellEffect);\r\n    \r\n\r\n</script>\r\n\r\n<table class=\"ase-spell-settings-table\">\r\n    <tbody style='border-top: 1pt solid black;border-bottom: 1pt solid black;'>\r\n        {#each $spellEffect.settings.animOptions as setting}\r\n        <tr>\r\n            <td>\r\n                <label for=\"{setting.flagName}\">{setting.label}</label>\r\n            </td>\r\n                {#if setting.type == \"numberInput\"}\r\n                    <td>\r\n                        <input type=\"text\" id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}/>\r\n                    </td>\r\n                {/if}\r\n                {#if setting.type == \"checkbox\"}\r\n                    <td>\r\n                        <input type=\"checkbox\" id={setting.flagName} bind:checked={$spellEffect.flagData[setting.flagName]}/>\r\n                    </td>\r\n                {/if}\r\n                {#if setting.type == \"dropdown\"}\r\n                    <td>\r\n                        <select id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}>\r\n                            {#each setting.options as option}\r\n                                <option value={Object.keys(option)[0]}>{Object.values(option)[0]}</option>\r\n                            {/each}\r\n                        </select>\r\n                    </td>\r\n                {/if}\r\n                {#if setting.type == \"textInput\"}\r\n                    <td>\r\n                        <input type=\"text\" id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}/>\r\n                    </td>\r\n                {/if}\r\n                {#if setting.type == \"rangeInput\"}\r\n                    <td colspan=\"2\">\r\n                        <output style=\"font-weight: bold;\">{$spellEffect.flagData[setting.flagName]}</output>\r\n                        <input type=\"range\" min=\"{setting.min}\" max=\"{setting.max}\"\r\n                            step=\"{setting.step}\"\r\n                            oninput=\"this.previousElementSibling.value = this.value\"\r\n                            id=\"{setting.flagName}\" bind:value={$spellEffect.flagData[setting.flagName]}>\r\n                    </td>\r\n                {/if}\r\n                {#if setting.type == \"colorPicker\"}\r\n                <td>\r\n                    <input type=\"color\" id=\"{setting.flagName}\" bind:value={$spellEffect.flagData[setting.flagName]}>\r\n                </td>\r\n                {/if}\r\n        </tr>\r\n    {/each}\r\n    </tbody>\r\n</table>","<script>\r\n    import { getContext } from \"svelte\";\r\n    \r\n    //export let spellEffect;\r\n\r\n\r\n    console.log(\"Sound Settings: -------ENTERING SOUND SETTINGS COMPONENT-----\");\r\n    const spellStoreHost = getContext(\"spellStoreHost\");\r\n    let spellEffect = $spellStoreHost;\r\n    $: spellEffect = $spellStoreHost; \r\n    console.log(\"Sound Settings: spellEffect: \", $spellEffect);\r\n    let soundPaths = {};\r\n    $spellEffect.settings.soundOptions.forEach(soundOption => {\r\n        if(soundOption.type == 'fileInput'){\r\n            soundPaths[soundOption.flagName] = $spellEffect.flagData[soundOption.flagName];\r\n        }\r\n    });\r\n    async function selectFile(setting) {\r\n        const current = $spellEffect.flagData[setting.flagName] ?? \"\";\r\n        const picker = new FilePicker({\r\n            type: \"audio\",\r\n            current,\r\n            callback: (path) => {\r\n                soundPaths[setting.flagName] = path;\r\n            },\r\n        });\r\n        await picker.browse(current);\r\n    }\r\n    $: {\r\n        for (let flagName in soundPaths) {\r\n            $spellEffect.flagData[flagName] = soundPaths[flagName];\r\n        }\r\n    }\r\n</script>\r\n\r\n<table class=\"ase-spell-settings-table\">\r\n    <tbody style='border-top: 1pt solid black;border-bottom: 1pt solid black;'>\r\n            {#each $spellEffect.settings.soundOptions as setting}\r\n                <tr>\r\n                    <td>\r\n                        <label for=\"{setting.flagName}\">{setting.label}</label>\r\n                    </td>\r\n                        {#if setting.type == \"numberInput\"}\r\n                            <td>\r\n                                <input type=\"text\" id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}/>\r\n                            </td>\r\n                        {/if}\r\n                        {#if setting.type == \"checkbox\"}\r\n                            <td>\r\n                                <input type=\"checkbox\" id={setting.flagName} bind:checked={$spellEffect.flagData[setting.flagName]}/>\r\n                            </td>\r\n                        {/if}\r\n                        {#if setting.type == \"dropdown\"}\r\n                            <td>\r\n                                <select id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}>\r\n                                    {#each setting.options as option}\r\n                                        <option value={Object.keys(option)[0]}>{Object.values(option)[0]}</option>\r\n                                    {/each}\r\n                                </select>\r\n                            </td>\r\n                        {/if}\r\n                        {#if setting.type == \"textInput\"}\r\n                            <td>\r\n                                <input type=\"text\" id={setting.flagName} bind:value={$spellEffect.flagData[setting.flagName]}/>\r\n                            </td>\r\n                        {/if}\r\n                        {#if setting.type == \"rangeInput\"}\r\n                            <td colspan=\"2\">\r\n                                <output style=\"font-weight: bold;\">{$spellEffect.flagData[setting.flagName]}</output>\r\n                                <input type=\"range\" min=\"{setting.min}\" max=\"{setting.max}\"\r\n                                    step=\"{setting.step}\"\r\n                                    oninput=\"this.previousElementSibling.value = this.value\"\r\n                                    id=\"{setting.flagName}\" bind:value={$spellEffect.flagData[setting.flagName]}>\r\n                            </td>\r\n                        {/if}\r\n                        {#if setting.type == 'fileInput'}\r\n                            <td>\r\n                                <input type=\"text\" class=\"files\" id=\"{setting.flagName}\"\r\n                                    bind:value={soundPaths[setting.flagName]}>\r\n                            </td>\r\n                            <td>\r\n                                <button class=\"file-picker\" on:click|preventDefault={() => selectFile(setting)} title=\"Browse Files\">\r\n                                    <i class=\"fas fa-music fa-sm\"></i>\r\n                                </button>\r\n                            </td>\r\n                        {/if}\r\n                </tr>\r\n            {/each}\r\n    </tbody>\r\n</table>","<script>\r\n\r\nimport SpellSettings from \"./SpellSettings.svelte\";\r\nimport AnimSettings from \"./AnimSettings.svelte\";\r\nimport SoundSettings from \"./SoundSettings.svelte\";\r\n\r\n\r\n    export let currentTab;\r\n\r\n    console.log(\"----------------------ENTERING NAV BAR COMPONENT----------------------\");\r\n\r\n    let SpellSettingsButtonTitleLabel = game.i18n.localize(\"ASE.SpellSettingsButtonTitle\");\r\n    let AnimationSettingsButtonTitleLabel = game.i18n.localize(\"ASE.AnimationSettingsButtonTitle\");\r\n    let SoundSettingsButtonTitleLabel = game.i18n.localize(\"ASE.SoundSettingsButtonTitle\");\r\n\r\n    const navTabs = [\r\n        {name: 'Spell Settings', title: SpellSettingsButtonTitleLabel, class: \"nav-tab ase-spell-settingsButton\", id: SpellSettings, icon: \"fas fa-cog\", selected: true},\r\n        {name: 'Anim Settings',title: AnimationSettingsButtonTitleLabel, class: \"nav-tab ase-anim-settingsButton\", id: AnimSettings, icon: \"fas fa-magic\", selected: false}, \r\n        {name: 'Sound Settings',title: SoundSettingsButtonTitleLabel, class: \"nav-tab ase-sound-settingsButton\", id: SoundSettings, icon: \"fas fa-volume-up\", selected: false}\r\n    ];\r\n\r\n    function switchTab(tab){\r\n        currentTab = tab.id;\r\n        navTabs.forEach(function(navTab){\r\n            let button = document.getElementById(navTab.name);\r\n            if((navTab.name == tab.name) && (navTab.selected == false)){\r\n                navTab.selected = true;\r\n                button.classList.add(\"selected\");\r\n            } else {\r\n                navTab.selected = false;\r\n                button.classList.remove(\"selected\");\r\n            }\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"ase-shared-settings\">\r\n    <div class=\"ase-settings-tabs\">\r\n        {#each navTabs as tab}\r\n            <button\r\n                class={tab.class + \" \" + (tab.selected ? \"selected\" : \"\")}\r\n                type=\"button\"\r\n                title={tab.title}\r\n                id={tab.name}\r\n                on:click={function() {switchTab(tab)}}\r\n                >\r\n                <div style=\"text-align:center\">\r\n                    <i class={tab.icon} />\r\n                </div>\r\n            </button>\r\n        {/each}\r\n    </div>\r\n    \r\n</div>\r\n","<svelte:options accessors={true} />\r\n\r\n<script> \r\n    import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n    import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n    import { getContext } from \"svelte\";\r\n    import { setContext } from \"svelte\";\r\n    import { spellStore } from \"../stores/spellStore.js\";\r\n    import { writable } from 'svelte/store';\r\n    import { onDestroy } from 'svelte';\r\n\r\n    import EnableASE from \"./components/EnableASE.svelte\";\r\n    import SharedSettings from \"./components/SharedSettings.svelte\";\r\n    import NavBar from \"./components/NavBar.svelte\";\r\n    import SpellSettings from \"./components/SpellSettings.svelte\";\r\n    import AnimSettings from \"./components/AnimSettings.svelte\";\r\n    import SoundSettings from \"./components/SoundSettings.svelte\";\r\n\r\n    export let elementRoot;\r\n    export let item;\r\n    export let itemFlags;\r\n\r\n    const flags = {...itemFlags.advancedspelleffects} || false;\r\n    const { application } = getContext(\"external\");\r\n    let form = void 0;\r\n\r\n    const spellStoreHost = writable(void 0);\r\n    setContext(\"spellStoreHost\", spellStoreHost);\r\n\r\n    let blankItem = true;\r\n    let enableASE = flags.enableASE ?? false;\r\n    let currentTab = SpellSettings;\r\n\r\n    if (flags) {\r\n        blankItem = false;\r\n    }\r\n    \r\n    $spellStoreHost = spellStore.findEntry(x => x.name === flags.spellEffect ?? '') ?? spellStore.first;\r\n    let currentSpell = $spellStoreHost;\r\n    $: currentSpell = $spellStoreHost;\r\n\r\n    if(!blankItem && flags.spellEffect == $currentSpell.name && flags.effectOptions){\r\n        if(flags.effectOptions.allowInitialMidiCall == undefined){\r\n            if(currentSpell.settings.allowInitialMidiCall != undefined) {\r\n                flags.effectOptions.allowInitialMidiCall = currentSpell.settings.allowInitialMidiCall;\r\n            } else {\r\n                flags.effectOptions.allowInitialMidiCall = true;\r\n            }\r\n        }\r\n        $currentSpell.flagData = flags.effectOptions;\r\n    }\r\n    if(flags.effectOptions?.summons?.length > 0){\r\n        $currentSpell.settings.summons = flags.effectOptions.summons;\r\n    }\r\n\r\n    console.log(\"App Shell: ------------------- Entering App Shell ---------------------\");\r\n    console.log(\"App Shell: Spell Store: \", spellStore);\r\n    console.log(\"App Shell: item: \", item);\r\n    console.log(\"App Shell: flags: \", flags);\r\n    console.log(\"App Shell: blankItem: \", blankItem);\r\n    console.log(\"App Shell: currentSpell: \", $currentSpell);\r\n    $: console.log(`App Shell: ${enableASE ? \"Enabled\" : \"Disabled\"} ASE`);\r\n    $: console.log(`App Shell: Spell Store Host: `, $spellStoreHost);\r\n\r\n    async function closeApp() {\r\n        let flagData = {};\r\n        if(enableASE){\r\n            flagData = {\r\n                enableASE: enableASE,\r\n                spellEffect: $currentSpell.name,\r\n                effectOptions: $currentSpell.flagData,\r\n            };\r\n            console.log('App Shell: FlagData Updating: ', flagData);\r\n            const updatedFlags = {\r\n                data: {\r\n                    flags: {\r\n                        advancedspelleffects: flagData,\r\n                    },\r\n                },\r\n            };\r\n            await item.unsetFlag('advancedspelleffects', 'effectOptions');\r\n            await item.update(updatedFlags.data);\r\n        } else {\r\n            for(let f in itemFlags.advancedspelleffects)\r\n            {\r\n                item.unsetFlag(`advancedspelleffects`,f);\r\n            }\r\n        }\r\n        application.close();\r\n    }\r\n    onDestroy(async () => {\r\n\t\tconsole.log('the component is being destroyed...');\r\n        spellStore.reInit();\r\n\t});\r\n    \r\n</script>\r\n<ApplicationShell bind:elementRoot>\r\n    <form\r\n        bind:this={form}\r\n        on:submit|preventDefault\r\n        autocomplete=\"off\"\r\n        id=\"ase-settings\"\r\n        class=\"overview\">\r\n        <div class=\"ase-settings-section\">\r\n            <EnableASE bind:enableASE />\r\n            {#if enableASE}\r\n                <SharedSettings itemName={item.name} />\r\n                <NavBar bind:currentTab />\r\n                {#if currentTab == SpellSettings}\r\n                    <SpellSettings />\r\n                {:else if currentTab == AnimSettings}\r\n                    <AnimSettings />\r\n                {:else if currentTab == SoundSettings}\r\n                    <SoundSettings />\r\n                {/if}\r\n            {/if}\r\n        </div>\r\n        <div class=\"aseBottomSection\" style=\"margin-bottom: 5px\">\r\n            <div class=\"ase-submit\">\r\n                <div class=\"flexcol\" style=\"grid-row:1/2; grid-column:2/3\">\r\n                    <button\r\n                        class=\"footer-button\"\r\n                        on:click|preventDefault={closeApp}\r\n                        >{localize(\"ASE.SaveCloseButtonLabel\")}</button\r\n                    >\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</ApplicationShell>","import { SvelteApplication } from '@typhonjs-fvtt/runtime/svelte/application';\r\nimport ASESettingsAppShell from './ASESettingsAppShell.svelte';\r\nexport default class ASESettings extends SvelteApplication {\r\n    constructor(item) {\r\n        super({\r\n            title: `ASE Settings for ${item.name}`,\r\n            id: `ase-item-settings`,\r\n            zIndex: 102,\r\n            svelte: {\r\n                class: ASESettingsAppShell,\r\n                target: document.body,\r\n                props: {\r\n                    item: item,\r\n                    itemFlags: item.data.flags,\r\n                }\r\n            }\r\n        });\r\n        console.log(\"ASE: Caught item sheet render hook!\", item);\r\n        console.log(\"Item Flags: \", item.data.flags);\r\n        \r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            resizable: true,\r\n            minimizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            closeOnSubmit: true,\r\n        })\r\n    }\r\n}","export const versionMigration = {\r\n    async handle(item) {\r\n\r\n        let spellList = {};\r\n        spellList[game.i18n.localize(\"ASE.AnimateDead\")] = game.i18n.localize(\"ASE.AnimateDead\");\r\n        spellList[game.i18n.localize(\"ASE.CallLightning\")] = game.i18n.localize(\"ASE.CallLightning\");\r\n        spellList[game.i18n.localize(\"ASE.DetectMagic\")] = game.i18n.localize(\"ASE.DetectMagic\");\r\n        spellList[game.i18n.localize(\"ASE.FogCloud\")] = game.i18n.localize(\"ASE.FogCloud\");\r\n        spellList[game.i18n.localize(\"ASE.Darkness\")] = game.i18n.localize(\"ASE.Darkness\");\r\n        spellList[game.i18n.localize(\"ASE.MagicMissile\")] = game.i18n.localize(\"ASE.MagicMissile\");\r\n        spellList[game.i18n.localize(\"ASE.SpiritualWeapon\")] = game.i18n.localize(\"ASE.SpiritualWeapon\");\r\n        spellList[game.i18n.localize(\"ASE.SteelWindStrike\")] = game.i18n.localize(\"ASE.SteelWindStrike\");\r\n        spellList[game.i18n.localize(\"ASE.ThunderStep\")] = game.i18n.localize(\"ASE.ThunderStep\");\r\n        spellList[game.i18n.localize(\"ASE.WitchBolt\")] = game.i18n.localize(\"ASE.WitchBolt\");\r\n        spellList[game.i18n.localize(\"ASE.ScorchingRay\")] = game.i18n.localize(\"ASE.ScorchingRay\");\r\n        spellList[game.i18n.localize(\"ASE.EldritchBlast\")] = game.i18n.localize(\"ASE.EldritchBlast\");\r\n        spellList[game.i18n.localize(\"ASE.VampiricTouch\")] = game.i18n.localize(\"ASE.VampiricTouch\");\r\n        spellList[game.i18n.localize(\"ASE.Moonbeam\")] = game.i18n.localize(\"ASE.Moonbeam\");\r\n        spellList[game.i18n.localize(\"ASE.ChainLightning\")] = game.i18n.localize(\"ASE.ChainLightning\");\r\n        spellList[game.i18n.localize(\"ASE.MirrorImage\")] = game.i18n.localize(\"ASE.MirrorImage\");\r\n        let flags = item?.data?.flags?.advancedspelleffects ?? false;\r\n        console.log(\"flags\", flags);\r\n        if (!flags) return;\r\n        if (!flags.enableASE) return;\r\n        if(flags.effectOptions.tagOptions){\r\n            //if flags.tagOptions is not an array, convert to array of objects with key as index\r\n            if(!Array.isArray(flags.effectOptions.tagOptions)){\r\n                let newTagOptions = [];\r\n                for(let key in flags.effectOptions.tagOptions){\r\n                    newTagOptions.push({key: flags.effectOptions.tagOptions[key]});\r\n                }\r\n                await item.setFlag(\"advancedspelleffects\", \"effectOptions.tagOptions\", newTagOptions);\r\n            }\r\n        }\r\n        console.log('Done migrating flags for old spell...');\r\n    }\r\n};","import * as utilFunctions from \"./utilityFunctions.js\";\r\nimport { versionMigration } from \"./versionMigration.js\"\r\n// Importing spells\r\nimport { darkness } from \"./spells/darkness.js\";\r\nimport { detectMagic } from \"./spells/detectMagic.js\";\r\nimport { chaosBolt } from \"./spells/chaosBolt.js\";\r\nimport { callLightning } from \"./spells/callLightning.js\";\r\nimport { fogCloud } from \"./spells/fogCloud.js\";\r\nimport { spiritualWeapon } from \"./spells/spiritualWeapon.js\";\r\nimport { steelWindStrike } from \"./spells/steelWindStrike.js\";\r\nimport { thunderStep } from \"./spells/thunderStep.js\";\r\nimport { summonCreature } from \"./spells/summonCreature.js\";\r\nimport { animateDead } from \"./spells/animateDead.js\";\r\nimport { witchBolt } from \"./spells/witchBolt.js\";\r\nimport { vampiricTouch } from \"./spells/vampiricTouch.js\";\r\nimport { magicMissile } from \"./spells/magicMissile.js\";\r\nimport { scorchingRay } from \"./spells/scorchingRay.js\";\r\nimport { eldritchBlast } from \"./spells/eldritchBlast.js\";\r\nimport { moonBeam } from \"./spells/moonBeam.js\";\r\nimport { chainLightning } from \"./spells/chainLightning.js\";\r\nimport { mirrorImage } from \"./spells/mirrorImage.js\";\r\nimport { wallOfForce } from \"./spells/wallOfForce.js\";\r\nimport { detectStuff } from \"./spells/detectStuff.js\";\r\nimport { viciousMockery } from \"./spells/viciousMockery.js\";\r\nimport { wallSpell } from \"./spells/wallSpell.js\";\r\nimport {wallOfFire } from \"./spells/wallOfFire.js\";\r\n\r\nexport class ASEHandler {\r\n    static async handleASE(data, optionals = {}) {\r\n        // check if the spell being rolled is marked as an ASE spell\r\n        let item = data.item;\r\n        await versionMigration.handle(item);\r\n        let aseFlags = item?.data?.flags?.advancedspelleffects ?? false;\r\n        if (!aseFlags.enableASE) return;\r\n\r\n        // check for required modules\r\n        let missingModule = utilFunctions.checkModules();\r\n        if (missingModule) {\r\n            ui.notifications.error(missingModule);\r\n            return;\r\n        }\r\n        //handle any required flag migration\r\n\r\n        //Activate spell\r\n        switch (aseFlags.spellEffect) {\r\n            case game.i18n.localize(\"ASE.Darkness\"):\r\n                await darkness.createDarkness(data);\r\n                return;\r\n            case game.i18n.localize('ASE.DetectMagic'):\r\n                await detectMagic.activateDetectMagic(data);\r\n                return;\r\n            case game.i18n.localize('ASE.DetectStuff'):\r\n                const detectSpell = new detectStuff(data);\r\n                detectSpell.cast();\r\n                return;\r\n            case game.i18n.localize('ASE.CallLightning'):\r\n                if (!data.flavor) {\r\n                    await callLightning.createStormCloud(data);\r\n                }\r\n                return;\r\n            case game.i18n.localize('ASE.ChaosBolt'):\r\n                if(!optionals.damInterrupt){\r\n                    await chaosBolt.cast(data);\r\n                } else if (optionals.damInterrupt){\r\n                    let newData = await chaosBolt.damageInterrupt(data);\r\n                    return newData;\r\n                }\r\n                \r\n                return;\r\n            case game.i18n.localize('ASE.ActivateCallLightning'):\r\n                //await callLightning.callLightningBolt(aseFlags.effectOptions.stormTileId, data.itemCardId, data.item.id);\r\n                let newTargets = await callLightning.getBoltTargets(aseFlags.effectOptions.stormTileId);\r\n                \r\n                return {targets: newTargets};\r\n            case game.i18n.localize('ASE.FogCloud'):\r\n                await fogCloud.createFogCloud(data);\r\n                return;\r\n            case game.i18n.localize('ASE.SpiritualWeapon'):\r\n                await spiritualWeapon.createSpiritualWeapon(data);\r\n                return;\r\n            case game.i18n.localize('ASE.SpiritAttackItemName'):\r\n                await spiritualWeapon.spiritualWeaponAttack(data);\r\n                return;\r\n            case game.i18n.localize('ASE.SteelWindStrike'):\r\n                if (!data.flavor?.includes(\"Steel Wind Strike\")) {\r\n                    await steelWindStrike.doStrike(data);\r\n                }\r\n                return;\r\n            case game.i18n.localize('ASE.ThunderStep'):\r\n                await thunderStep.doTeleport(data);\r\n                return;\r\n            case game.i18n.localize('ASE.AnimateDead'):\r\n                await animateDead.rise(data);\r\n                return;\r\n            case game.i18n.localize('ASE.WitchBolt'):\r\n                if (data.flavor != game.i18n.localize(\"ASE.WitchBoltDamageFlavor\") || !data.flavor) {\r\n                    console.log('Casting Witch Bolt!', data.flavor);\r\n                    await witchBolt.cast(data);\r\n                }\r\n                else {\r\n                    console.log('Activating Witch Bolt!', data.flavor);\r\n                    //await witchBolt.activateBolt(data);\r\n                }\r\n                return;\r\n            case game.i18n.localize('ASE.ActivateWitchBolt'):\r\n                if (data.flavor != game.i18n.localize(\"ASE.WitchBoltDamageFlavor\") || !data.flavor) {\r\n                    await witchBolt.activateBolt(data);\r\n                }\r\n                return;\r\n            case game.i18n.localize('ASE.VampiricTouch'):\r\n                await vampiricTouch.cast(data);\r\n                return;\r\n            case game.i18n.localize('ASE.VampiricTouchAttack'):\r\n                await vampiricTouch.activateTouch(data);\r\n                return;\r\n            case game.i18n.localize('ASE.MagicMissile'):\r\n                await magicMissile.selectTargets(data);\r\n                return;\r\n            case game.i18n.localize('ASE.ScorchingRay'):\r\n                await scorchingRay.selectTargets(data);\r\n                return;\r\n            case game.i18n.localize('ASE.EldritchBlast'):\r\n                await eldritchBlast.selectTargets(data);\r\n                return;\r\n            case game.i18n.localize('ASE.Moonbeam'):\r\n                if (!data.flavor?.includes(\"- Damage Roll\")) {\r\n                    await moonBeam.callBeam(data);\r\n                }\r\n                return;\r\n            case game.i18n.localize('ASE.MoveMoonbeam'):\r\n                await moonBeam.moveBeam(data);\r\n                return;\r\n            case game.i18n.localize('ASE.ChainLightning'):\r\n                const chainLightningSpell = new chainLightning(data);\r\n                chainLightningSpell.cast();\r\n                return;\r\n            case game.i18n.localize('ASE.MirrorImage'):\r\n                const mirrorImageSpell = new mirrorImage(data);\r\n                mirrorImageSpell.cast();\r\n                return;\r\n\r\n            case game.i18n.localize('ASE.WallOfForce'):\r\n                wallOfForce.createWallOfForce(data);\r\n                return;\r\n            case game.i18n.localize('ASE.WallSpell'):\r\n                if (!data.flavor?.includes(\"- Damage Roll\")) {\r\n                    const newWallSpell = new wallSpell(data);\r\n                    newWallSpell.cast();\r\n                }\r\n                return;\r\n            case game.i18n.localize('ASE.WallOfFire'):\r\n                const fireWall = new wallOfFire(data);\r\n                fireWall.cast();\r\n                return;\r\n            case game.i18n.localize('ASE.ViciousMockery'):\r\n                const viciousMockerySpell = new viciousMockery(data);\r\n                viciousMockerySpell.cast();\r\n                return;\r\n        }\r\n        if (item.name.includes(game.i18n.localize(\"ASE.Summon\")) || aseFlags.spellEffect.includes(game.i18n.localize(\"ASE.Summon\"))) {\r\n            await summonCreature.doSummon(data);\r\n            return;\r\n        }\r\n        else {\r\n            console.log(\"--SPELL NAME NOT RECOGNIZED--\");\r\n            return;\r\n        }\r\n    }\r\n}","import { ASEHandler } from \"./ASEHandler.js\"\r\nimport { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\nexport class midiHandler {\r\n    static registerHooks() {\r\n        if (game.modules.get(\"midi-qol\")?.active) {\r\n            Hooks.on(\"midi-qol.preambleComplete\", midiHandler._handleASEPreamble);\r\n            Hooks.on(\"midi-qol.RollComplete\", midiHandler._handleStateTransition);\r\n            //Hooks.on(\"midi-qol.preItemRoll\", midiHandler._getPreItemRollInfo);\r\n            //Hooks.on(\"midi-qol.preAttackRoll\", midiHandler._getPreAttackRollInfo);\r\n            //Hooks.on(\"midi-qol.AttackRollComplete\", midiHandler._getAttackRollCompleteInfo);\r\n            //Hooks.on(\"midi-qol.preCheckHits\", midiHandler._getPreCheckHitsInfo);\r\n            //Hooks.on(\"midi-qol.preDamageRoll\", midiHandler._getPreDamageRollInfo);\r\n            Hooks.on(\"midi-qol.preDamageRollComplete\", midiHandler._damageRollComplete);\r\n            //Hooks.on(\"midi-qol.damageRollComplete\", midiHandler._damageRollComplete);\r\n            Hooks.on(\"midi-qol.preCheckSaves\", midiHandler._preCheckSaves);\r\n        }\r\n    }\r\n    static _getPreItemRollInfo(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE ITEM ROLL: WORKFLOW TARGETS -------- \", workflow.targets);\r\n    }\r\n    static _getPreAttackRollInfo(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE ATTACK ROLL: WORKFLOW TARGETS -------- \", workflow.targets);\r\n    }\r\n    static async _getAttackRollCompleteInfo(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE ATTACK ROLL COMPLETE: WORKFLOW TARGETS -------- \", workflow.targets);\r\n    }\r\n    static async _getPreCheckHitsInfo(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE CHECK HITS: WORKFLOW TARGETS -------- \", workflow.targets);\r\n    }\r\n    static async _getPreDamageRollInfo(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE DAMAGE ROLL: WORKFLOW TARGETS -------- \", workflow.targets);\r\n    }\r\n    static async _getPreDamageRollComplete(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE DAMAGE ROLL COMPLETE: WORKFLOW TARGETS -------- \", workflow.targets);\r\n    }\r\n    static async _damageRollComplete(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE DAMAGE ROLL COMPLETE: WORKFLOW -------- \", workflow);\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE DAMAGE ROLL COMPLETE: WORKFLOW TARGETS -------- \", workflow.targets);\r\n        const itemUUID = workflow.itemUuid;\r\n        const item = await fromUuid(itemUUID);\r\n        const spellEffect = item.getFlag(\"advancedspelleffects\", \"spellEffect\");\r\n        const aseEnabled = item.getFlag(\"advancedspelleffects\", \"enableASE\") ?? false;\r\n        const castItem = item.getFlag(\"advancedspelleffects\", \"castItem\") ?? false;\r\n        const castStage = item.getFlag(\"advancedspelleffects\", \"castStage\") ?? '';\r\n        if (spellEffect && aseEnabled) {\r\n            let currentItemState = game.ASESpellStateManager.getSpell(itemUUID);\r\n            if (currentItemState) {\r\n                if(currentItemState.options.damInterrupt) {\r\n                    console.log(\"ASE: MIDI HANDLER: Interrupting Damage Roll\");\r\n                    let newData = await ASEHandler.handleASE(workflow, {damInterrupt: true});\r\n                    console.log(\"ASE: MIDI HANDLER: Interrupting Damage Roll New Data\", newData);\r\n                    if(newData) {\r\n                        if(newData.newDamageType){\r\n                            console.log(\"ASE: MIDI HANDLER: DAMAGE DETAIL: \", workflow.damageDetail);\r\n                            workflow.damageDetail[0].type = newData.newDamageType.toLowerCase();\r\n                            workflow.defaultDamageType = newData.newDamageType.toLowerCase();\r\n                        } \r\n                        if(newData.newTargets){\r\n                            currentItemState.options.nextTargets = newData.newTargets;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n            } else if (castItem && castStage == \"preDamage\") {\r\n                ASEHandler.handleASE(workflow);\r\n            }\r\n        }\r\n    }\r\n    static async _preCheckSaves(workflow) {\r\n        console.log(\" --------  ASE: MIDI HANDLER: PRE CHECK SAVES: WORKFLOW -------- \", workflow);\r\n        const itemUUID = workflow.itemUuid;\r\n        const item = await fromUuid(itemUUID);\r\n        const spellEffect = item.getFlag(\"advancedspelleffects\", \"spellEffect\");\r\n        const aseEnabled = item.getFlag(\"advancedspelleffects\", \"enableASE\") ?? false;\r\n        const castItem = item.getFlag(\"advancedspelleffects\", \"castItem\") ?? false;\r\n        const savesRequired = item.getFlag(\"advancedspelleffects\", \"savesRequired\") ?? false;\r\n        const targets = Array.from(workflow.targets) ?? [];\r\n        if(spellEffect && aseEnabled && castItem && savesRequired) {\r\n            console.log(\"ASE: MIDI HANDLER: Cast Item Found!\", item);\r\n            let newMidiData = await ASEHandler.handleASE(workflow);\r\n            console.log(\"ASE: MIDI HANDLER: Cast Item Found! New Midi Data\", newMidiData);\r\n            //check if targets is an array\r\n            if(!Array.isArray(targets)) return true;\r\n            if(targets.length == 0){\r\n                let newTargets = new Set();\r\n                newMidiData.targets.forEach(target => {\r\n                    newTargets.add(target);\r\n                });\r\n                console.log(\"ASE: MIDI HANDLER: Cast Item Found! New Targets\", newTargets);\r\n                workflow.targets = newTargets;\r\n                workflow.hitTargets = newTargets;\r\n                workflow.failedSaves = newTargets;\r\n                console.log(\"ASE: MIDI HANDLER: Cast Item Found! New Workflow\", workflow);\r\n            }\r\n            return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    static async _handleASEPreamble(workflow) {\r\n        console.log(\"ASE: MIDI HANDLER: PREAMBLE: \", workflow);\r\n        console.log(\" --------  ASE: MIDI HANDLER: PREAMBLE: WORKFLOW TARGETS -------- \", workflow.optionalTestField);\r\n        const itemUUID = workflow.itemUuid;\r\n        const item = await fromUuid(itemUUID);\r\n        const spellEffect = item.getFlag(\"advancedspelleffects\", \"spellEffect\");\r\n        const aseEnabled = item.getFlag(\"advancedspelleffects\", \"enableASE\") ?? false;\r\n        const castItem = item.getFlag(\"advancedspelleffects\", \"castItem\") ?? false;\r\n        const castStage = item.getFlag(\"advancedspelleffects\", \"castStage\") ?? '';\r\n        const savesRequired = item.getFlag(\"advancedspelleffects\", \"savesRequired\") ?? false;\r\n        const allowInitialMidiCall = item.getFlag(\"advancedspelleffects\", \"effectOptions.allowInitialMidiCall\") ?? true;\r\n        console.log(\"ASE: MIDI HANDLER: PREAMBLE: Allow Initial Midi Call\", allowInitialMidiCall);\r\n        console.log(\"ASE: MIDI HANDLER: PREAMBLE: Cast Item\", castItem);\r\n        console.log(\"ASE: MIDI HANDLER: PREAMBLE: ASE Enabled\", aseEnabled);\r\n        console.log(\"ASE: MIDI HANDLER: PREAMBLE: Spell Effect\", spellEffect);\r\n        if (spellEffect && aseEnabled && !(castItem && savesRequired)) {\r\n            let currentItemState = game.ASESpellStateManager.getSpell(itemUUID);\r\n            if (currentItemState) {\r\n                console.log(\"ASE: MIDI HANDLER: Item State Found!\", currentItemState.state);\r\n                console.log(\"ASE: MIDI HANDLER: STATE ACTIVE?\", currentItemState.active);\r\n                console.log(\"ASE: MIDI HANDLER: STATE FINISHED?\", currentItemState.finished);\r\n                if(!castItem){\r\n                    console.log(\"ASE: MIDI HANDLER: PREAMBLE: NOT CAST ITEM!\");\r\n                    if(currentItemState.active && !currentItemState.finished){\r\n                        return true;\r\n                    }\r\n                    else{\r\n                        //console.log(\"ASE: MIDI HANDLER: Item State Not Active!\", currentItemState);\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    console.log(\"ASE: MIDI HANDLER: PREAMBLE: CAST ITEM!\");\r\n                    if(currentItemState.active && !currentItemState.finished){\r\n                        console.log(\"ASE: MIDI HANDLER: PREAMBLE: CAST ITEM! STATE ACTIVE!\");\r\n                        return true;\r\n                    }\r\n                    else{\r\n                        console.log(\"ASE: MIDI HANDLER: PREAMBLE: CAST ITEM! STATE NOT ACTIVE!\");\r\n                        //console.log(\"ASE: MIDI HANDLER: Item State Not Active!\", currentItemState);\r\n                        ASEHandler.handleASE(workflow);\r\n                        if(allowInitialMidiCall) {\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                console.log(\"ASE: MIDI HANDLER: Item State Not Found!\");\r\n                if(castStage != \"preDamage\"){\r\n                    ASEHandler.handleASE(workflow);\r\n                }\r\n                if(allowInitialMidiCall) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n        \r\n\r\n    static async _handleStateTransition(workflow) {\r\n        console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: WORKFLOW\", workflow);\r\n        //console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: WORKFLOW TARGETS\", workflow.targets);\r\n        //console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: DAMAGE ROLL\", workflow.damageRoll);\r\n        //console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: ATTACK ROLL\", workflow.attackRoll);\r\n        const itemUUID = workflow.itemUuid;\r\n        const caster = workflow.token.document.id;\r\n        const hitTargets = Array.from(workflow.hitTargets)\r\n        let stateOptions = {};\r\n        const targets = Array.from(workflow.targets);\r\n        let targetUuid = \"\";\r\n        let target;\r\n        let iterateListKey = \"\";\r\n        let currStateIndex = 0;\r\n        //console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: TARGETS\", targets);\r\n        let currentItemState = game.ASESpellStateManager.getSpell(itemUUID);\r\n        console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: CURRENT ITEM STATE\", currentItemState);\r\n        if (!currentItemState) {return;}\r\n        if(currentItemState.active && !currentItemState.finished && currentItemState.options.iterate){\r\n            console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: ITERATE...\");\r\n            if(!targets || targets.length == 0){\r\n                iterateListKey = currentItemState.options.iterate;\r\n                currStateIndex = currentItemState.state - 1;\r\n                targetUuid = currentItemState.options[iterateListKey][currStateIndex];\r\n                target = await fromUuid(targetUuid);\r\n            } else {\r\n                target = targets[0];\r\n            }\r\n            if(currentItemState.options.sequenceBuilder){\r\n                game.ASESpellStateManager.continueSequence(itemUUID, {intro: false, caster: caster, targets: [target], hit: !workflow.attackRoll ? true : hitTargets.length>0, effectOptions: currentItemState.options.effectOptions, type: \"missile\"});\r\n            }\r\n            if(currentItemState.options.rolls){\r\n                stateOptions.rolls = {attackRoll: workflow.attackRoll, damageRoll: workflow.damageRoll, target: target, hit: hitTargets.length>0};\r\n            }\r\n            game.ASESpellStateManager.nextState(itemUUID, stateOptions);\r\n            return;\r\n        } else if (currentItemState.active && !currentItemState.finished && currentItemState.options.targetted){\r\n            console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: TARGETTED...\");\r\n            if(!currentItemState.options.repeat){\r\n                stateOptions.finished = true;\r\n            }\r\n            //move uuid of each token from workflow.failedSaves into stateOptions.failedSaves\r\n\r\n            if(currentItemState.options.failedSaves){\r\n                stateOptions.failedSaves = [];\r\n                workflow.failedSaves.forEach(target => {\r\n                    stateOptions.failedSaves.push(target.document.uuid);\r\n                });\r\n            }\r\n            game.ASESpellStateManager.nextState(itemUUID, stateOptions);\r\n        } else if (currentItemState.active && !currentItemState.finished && currentItemState.options.repeat && currentItemState.options.nextTargets){\r\n            console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: REPEAT...\");\r\n            game.ASESpellStateManager.nextState(itemUUID, {targets: currentItemState.options.nextTargets});\r\n        } else if (currentItemState.active && !currentItemState.finished && currentItemState.options.castItem){\r\n            console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: CAST ITEM...\");\r\n            currentItemState.finished = true;\r\n            game.ASESpellStateManager.removeSpell(itemUUID);\r\n        }\r\n        console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: FINISHED\");\r\n    }\r\n}","import { ASEHandler } from \"./ASEHandler.js\";\r\nimport { concentrationHandler } from \"./concentrationHandler.js\";\r\n\r\nexport class noMidiHandler {\r\n    static registerHooks() {\r\n        if (!game.modules.get(\"midi-qol\")?.active) {\r\n            Hooks.on(\"preCreateChatMessage\", noMidiHandler._handleASE);\r\n        }\r\n    }\r\n\r\n    static async _handleASE(msg) {\r\n        //console.log(\"Chat Message Data: \", msg);\r\n        let caster = canvas.tokens.get(msg.data.speaker.token);\r\n        let casterActor = caster?.actor;\r\n        let spellItem;\r\n        if(msg.data?.flags?.betterrolls5e){\r\n            console.log(\"Detected Better Rolls...\");\r\n            spellItem = casterActor?.items?.get(msg.data.flags.betterrolls5e.itemId);\r\n        }\r\n        else {\r\n            spellItem = casterActor?.items?.getName(msg.data.flavor);\r\n        }\r\n        let aseSpell = spellItem?.data?.flags?.advancedspelleffects ?? false;\r\n        if (!caster || !casterActor || !spellItem || !aseSpell) return;\r\n        let chatContent = msg.data.content;\r\n        let spellLevel = Number(chatContent.charAt(chatContent.indexOf(\"data-spell-level\")+18));\r\n        let spellTargets = Array.from(game.user.targets);\r\n        let data = {\r\n            actor: casterActor,\r\n            token: caster,\r\n            tokenId: msg.data.speaker.token,\r\n            item: spellItem,\r\n            itemLevel: spellLevel,\r\n            targets: spellTargets,\r\n            itemCardId: msg.id\r\n        };\r\n        if(spellItem.data.data.components.concentration){\r\n            await concentrationHandler.addConcentration(casterActor, spellItem);\r\n        }\r\n        \r\n        console.log(\"NO-MIDI DATA: \", data);\r\n        ASEHandler.handleASE(data);\r\n        //specialCaseAnimations(msg);\r\n    }\r\n}","import { aseSocket } from \"../aseSockets.js\";\r\nimport * as utilFunctions from \"../utilityFunctions.js\";\r\n\r\nexport class MissileDialog extends FormApplication {\r\n\r\n    constructor(options) {\r\n        super(options);\r\n        foundry.utils.mergeObject(this.options, options);\r\n        //console.log(this);\r\n        this.data = {};\r\n        this.data.attackMods = {};\r\n        this.data.numMissiles = options.numMissiles;\r\n        this.data.numMissilesMax = options.numMissiles;\r\n        this.data.caster = options.casterId;\r\n        this.data.itemCardId = options.itemCardId;\r\n        this.data.item = options.item;\r\n        this.data.actionType = options?.actionType || \"other\";\r\n        this.data.effectOptions = options.effectOptions;\r\n        this.data.allAttackRolls = [];\r\n        this.data.allDamRolls = [];\r\n        this.data.targets = [];\r\n    }\r\n\r\n    static async registerHooks() {\r\n        return;\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        //console.log(this);\r\n        return mergeObject(super.defaultOptions, {\r\n            template: './modules/advancedspelleffects/src/templates/missile-dialog.html',\r\n            id: 'missile-dialog',\r\n            title: game.i18n.localize(\"ASE.SelectTargetsDialogTitle\"),\r\n            resizable: true,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            left: game.user?.getFlag(\"advancedspelleffects\", \"missileDialogPos.left\") ?? \"auto\",\r\n            top: game.user?.getFlag(\"advancedspelleffects\", \"missileDialogPos.top\") ?? \"auto\",\r\n            submitOnClose: true,\r\n            close: () => { Hooks.call('closeMissileDialog'); }\r\n        });\r\n    }\r\n\r\n    async _applyMarker(target, type) {\r\n        //console.log('type: ',type);\r\n        let markerAnim = `${this.data.effectOptions.targetMarkerType}.${this.data.effectOptions.targetMarkerColor}`;\r\n        const markerSound = this.data.effectOptions.markerSound ?? \"\";\r\n        const markerSoundDelay = Number(this.data.effectOptions.markerSoundDelay) ?? 0;\r\n        const markerSoundVolume = Number(this.data.effectOptions.markerVolume) ?? 1;\r\n        const markerAnimHue = this.data.effectOptions.targetMarkerHue ?? 0;\r\n        const markerAnimSaturation = this.data.effectOptions.targetMarkerSaturation ?? 0;\r\n\r\n        let baseScale = this.data.effectOptions.baseScale;\r\n        let currMissile = this.data.targets.map(targetData => {\r\n            return { id: targetData.id, missilesAssigned: targetData.missilesAssigned };\r\n        }).filter(t => t.id == target.id)[0]?.missilesAssigned ?? 0;//target.document.getFlag(\"advancedspelleffects\", \"missileSpell.missileNum\") ?? 0;\r\n        //console.log(\"Current missile number: \", currMissile);\r\n        //console.log(\"Missiles currently assigned to target...\", currMissile);\r\n        let baseOffset = canvas.grid.size / 2;\r\n        let offsetMod = (-(1 / 4) * currMissile) + 1;\r\n        // console.log(\"offset Modifier: \", offsetMod);\r\n        let offset = { x: baseOffset * offsetMod, y: baseOffset }\r\n        let markerSeq = new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(markerSound)\r\n            .delay(markerSoundDelay)\r\n            .volume(markerSoundVolume)\r\n            .playIf(markerSound != \"\")\r\n            .effect()\r\n            .attachTo(target, { followRotation: false })\r\n            .filter(\"ColorMatrix\", { hue: markerAnimHue, saturate: markerAnimSaturation })\r\n            .locally()\r\n            .file(markerAnim)\r\n            .scale(0.01)\r\n            .name(`missile-target-${target.id}-${currMissile}`)\r\n            .offset(offset)\r\n            .duration(300000)\r\n            .animateProperty(\"sprite\", \"scale.x\", { from: 0.01, to: baseScale, delay: 200, duration: 700, ease: \"easeOutBounce\" })\r\n            .animateProperty(\"sprite\", \"scale.y\", { from: 0.01, to: baseScale, duration: 900, ease: \"easeOutBounce\" })\r\n\r\n        if (type == 'kh') {\r\n            markerSeq.loopProperty(\"sprite\", \"position.y\", { from: 0, to: -10, duration: 1000, ease: \"easeInOutSine\", pingPong: true });\r\n\r\n        }\r\n        else if (type == 'kl') {\r\n            markerSeq.loopProperty(\"sprite\", \"position.y\", { from: 0, to: 10, duration: 1000, ease: \"easeInOutSine\", pingPong: true });\r\n        }\r\n        markerSeq.play();\r\n        if (!this.data.attackMods[target.id]) {\r\n            this.data.attackMods[target.id] = [{ index: currMissile, type: type }];\r\n        }\r\n        else {\r\n            this.data.attackMods[target.id].push({ index: currMissile, type: type });\r\n        }\r\n        //await aseSocket.executeAsGM(\"updateFlag\", target.document.id, \"missileSpell.missileNum\", currMissile + 1);\r\n        //console.log(\"Total Missiles assigned: \", currMissile + 1);\r\n        let inTargetList = this.data.targets.find(t => t.id == target.id);\r\n        if (!inTargetList) {\r\n            this.data.targets.push({ id: target.id, missilesAssigned: 1 });\r\n        } else {\r\n            inTargetList.missilesAssigned++;\r\n        }\r\n    }\r\n\r\n    async _handleClick(event) {\r\n        //console.log('Clicked: ', event);\r\n        let parsedEventData = {\r\n            altKey: event.originalEvent.altKey,\r\n            ctrlKey: event.originalEvent.ctrlKey,\r\n            button: event.originalEvent.button\r\n        }\r\n        //set attacktype to 1 if altkey and -1 if ctrlkey, 0 by default\r\n        let attackType = parsedEventData.altKey ? 'kh' : (parsedEventData.ctrlKey ? 'kl' : '');\r\n        //console.log('Mouse Click Data: ', parsedEventData);\r\n        let token = canvas.tokens.placeables.filter(token => {\r\n            const mouse = canvas.app.renderer.plugins.interaction.mouse;\r\n            const mouseLocal = mouse.getLocalPosition(token);\r\n            //console.log('Mouse Local: ', mouseLocal);\r\n            return mouseLocal.x >= 0 && mouseLocal.x <= token.hitArea.width\r\n                && mouseLocal.y >= 0 && mouseLocal.y <= token.hitArea.height;\r\n        })[0];\r\n        if (token) {\r\n            //console.log('Target: ', token.name);\r\n            if (parsedEventData.button == 0) {\r\n                let numMissiles = this.data.numMissiles;\r\n                //console.log('Missiles passed to target hook: ', numMissiles);\r\n                if (numMissiles == 0) {\r\n                    ui.notifications.info(\"Missile Limit Reached!\");\r\n                }\r\n                if (numMissiles > 0) {\r\n                    const missileTextBox = document.getElementById(\"txtNumMissilesId\");\r\n                    if (missileTextBox) {\r\n                        missileTextBox.value--;\r\n                    }\r\n                    await this._applyMarker(token, attackType);\r\n                    this._addTargetToList(token);\r\n                    this.data.numMissiles--;\r\n                }\r\n            }\r\n            else if (parsedEventData.button == 2) {\r\n                this._removeMissile(token);\r\n            }\r\n            //console.log(this);\r\n        }\r\n\r\n    }\r\n\r\n    async _addTargetToList(target) {\r\n        //console.log(`Adding ${target.document.data.name} to target list...`, target);\r\n        //let missilesAssigned = target.document.getFlag(\"advancedspelleffects\", \"missileSpell.missileNum\") ?? 1;\r\n        let missilesAssigned = this.data.targets.find(t => t.id == target.id)?.missilesAssigned ?? 1;\r\n        //console.log(\"Missles assigned: \", missilesAssigned);\r\n        let targetsTable = document.getElementById(\"targetsTable\").getElementsByTagName('tbody')[0];\r\n        let targetAssignedMissiles = document.getElementById(`${target.document.id}-missiles`);\r\n        if (!targetAssignedMissiles) {\r\n            let newTargetRow = targetsTable.insertRow(-1);\r\n            newTargetRow.id = `${target.document.id}-row`;\r\n            let newLabel1 = newTargetRow.insertCell(0);\r\n            let newMissilesAssignedInput = newTargetRow.insertCell(1);\r\n            let newRemoveMissileButton = newTargetRow.insertCell(2);\r\n            newLabel1.innerHTML = `<img src=\"${target.document.data.img}\" width=\"30\" height=\"30\" style=\"border:0px\"> - ${target.document.data.name}`;\r\n            newMissilesAssignedInput.innerHTML = `<input style='width: 2em;' type=\"number\" id=\"${target.document.id}-missiles\" readonly value=\"${missilesAssigned}\"></input>`;\r\n            newRemoveMissileButton.innerHTML = `<button id=\"${target.document.id}-removeMissile\" class=\"btnRemoveMissile\" type=\"button\"><i class=\"fas fa-minus\"></i></button>`;\r\n            let btnRemoveMissile = document.getElementById(`${target.document.id}-removeMissile`);\r\n            //console.log(btnRemoveMissile);\r\n            btnRemoveMissile.addEventListener(\"click\", this._removeMissile.bind(this));\r\n            newTargetRow.addEventListener(\"mouseenter\", function (e) {\r\n                let token = canvas.tokens.get($(this).attr('id').split('-')[0]);\r\n                token._onHoverIn(e);\r\n            });\r\n            newTargetRow.addEventListener(\"mouseleave\", function (e) {\r\n                let token = canvas.tokens.get($(this).attr('id').split('-')[0]);\r\n                token._onHoverIn(e);\r\n            });\r\n            $(\"#missile-dialog\").height(\"auto\");\r\n\r\n        }\r\n        else {\r\n            document.getElementById(`${target.document.id}-missiles`).value++;\r\n        }\r\n\r\n    }\r\n\r\n    async _removeMarker(target) {\r\n        /*let missilesAssigned = this.data.targets.map(targetData => {\r\n            return { id: targetData.id, missilesAssigned: targetData.missilesAssigned };\r\n        }).filter(t => t.id == target.id)[0].missilesAssigned;//Number(target.document.getFlag(\"advancedspelleffects\", \"missileSpell.missileNum\")) ?? 0;\r\n        console.log(\"Removing assigned missile...\", missilesAssigned, target);*/\r\n        const targetData = this.data.targets.find(t => t.id == target.id);\r\n        const missilesAssigned = targetData.missilesAssigned;\r\n        //console.log(\"Removing assigned missile...\", missilesAssigned, target);\r\n        await Sequencer.EffectManager.endEffects({ name: `missile-target-${target.id}-${missilesAssigned - 1}` });\r\n        if (missilesAssigned > 0) {\r\n            //await aseSocket.executeAsGM(\"updateFlag\", target.id, \"missileSpell.missileNum\", missilesAssigned - 1);\r\n            targetData.missilesAssigned--;\r\n        }\r\n        //console.log(\"Total missiles assigned: \", missilesAssigned - 1);\r\n    }\r\n\r\n    async _removeMissile(e) {\r\n\r\n        let target = e.currentTarget ? canvas.tokens.get(e.currentTarget.id.split('-')[0]) : e;\r\n        //console.log(\"Target: \", target);\r\n        if (target) {\r\n            //let missilesAssigned = target.document.getFlag(\"advancedspelleffects\", \"missileSpell.missileNum\");\r\n            let missilesAssigned = this.data.targets.find(t => t.id == target.id)?.missilesAssigned ?? 0;\r\n            //console.log(\"Missles assigned: \", missilesAssigned);\r\n            let targetAssignedMissiles = document.getElementById(`${target.document.id}-missiles`);\r\n            if (targetAssignedMissiles) {\r\n                document.getElementById(`${target.document.id}-missiles`).value = missilesAssigned - 1;\r\n                this.data.numMissiles = Number(this.data.numMissiles) + 1;\r\n                //console.log(\"this data num missiles: \", this.data.numMissiles);\r\n                document.getElementById(\"txtNumMissilesId\").value++;\r\n                await this._removeMarker(target);\r\n                this.data.attackMods[target.id].pop();\r\n            }\r\n            if (missilesAssigned == 1) {\r\n                let targetRow = document.getElementById(`${target.document.id}-removeMissile`).closest('tr');\r\n                targetRow.remove();\r\n                let inTargetList = this.data.targets.find(t => t.id == target.id);\r\n                if (inTargetList) {\r\n                    this.data.targets.splice(this.data.targets.indexOf(inTargetList), 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async _launchMissile(caster, target, attackData) {\r\n        //console.log('MISSILE ANIM: ', this.data.effectOptions);\r\n        //console.log(attackData);\r\n        let hit = attackData.hit;\r\n        let missileAnim = `${this.data.effectOptions.missileAnim}.${this.data.effectOptions.missileColor}`;\r\n\r\n        const missileIntroSound = this.data.effectOptions.missileIntroSound ?? \"\";\r\n        const missleIntroPlayback = this.data.effectOptions.missileIntroSoundPlayback ?? \"indiv\";\r\n        let missileIntroSoundDelay = Number(this.data.effectOptions.missileIntroSoundDelay) ?? 0;\r\n        let missileIntroVolume = Number(this.data.effectOptions.missileIntroVolume) ?? 1;\r\n\r\n        const impactDelay = Number(this.data.effectOptions.impactDelay) ?? -1000;\r\n        const missileImpactSound = this.data.effectOptions.missileImpactSound ?? \"\";\r\n        const missleImpactPlayback = this.data.effectOptions.missileImpactSoundPlayback ?? \"indiv\";\r\n        let missileImpactSoundDelay = Number(this.data.effectOptions.missileImpactSoundDelay) ?? 0;\r\n        let missileImpactVolume = Number(this.data.effectOptions.missileImpactVolume) ?? 1;\r\n\r\n        //console.log(target);\r\n        new Sequence(\"Advanced Spell Effects\")\r\n            .sound()\r\n            .file(missileIntroSound)\r\n            .delay(missileIntroSoundDelay)\r\n            .volume(missileIntroVolume)\r\n            .playIf(missileIntroSound != \"\" && missleIntroPlayback == \"indiv\")\r\n            .effect()\r\n            .file(missileAnim)\r\n            .atLocation(caster)\r\n            .randomizeMirrorY()\r\n            .missed(!hit)\r\n            .stretchTo(target)\r\n            .randomOffset(0.65)\r\n            //.playbackRate(utilFunctions.getRandomNumber(0.7, 1.3))\r\n            .waitUntilFinished(impactDelay)\r\n            .sound()\r\n            .file(missileImpactSound)\r\n            .delay(missileImpactSoundDelay)\r\n            .volume(missileImpactVolume)\r\n            .playIf(missileImpactSound != \"\" && missleImpactPlayback == \"indiv\")\r\n            .play();\r\n    }\r\n\r\n    async getData() {\r\n        //console.log(\"Getting data...\", this);\r\n        game.user.updateTokenTargets([]);\r\n        let missilesNum = Number(this.object.numMissiles) ?? 0;\r\n        Hooks.once('closeMissileDialog', async () => {\r\n            const missileEffects = Sequencer.EffectManager.getEffects({ name: 'missile-target-*' });\r\n            if (missileEffects.length > 0) {\r\n                console.log(\"ASE Missile effects leftover detected...\", missileEffects);\r\n                await Sequencer.EffectManager.endEffects({ name: 'missile-target-*' });\r\n            }\r\n            //console.log('Done clearing target markers...', ...arguments);\r\n            //this.submit();\r\n        });\r\n\r\n        return {\r\n            data: this.data,\r\n            numMissiles: missilesNum,\r\n        };\r\n\r\n    }\r\n    async _evaluateAttack(caster, target, mod, rollData) {\r\n        //console.log(\"Evalute attack target: \", target);\r\n        let attackBonus = rollData.bonuses[this.data.actionType]?.attack || '';\r\n        //console.log(\"Roll Data: \", rollData);\r\n        let attackRoll = await new Roll(`${mod == '' ? 1 : 2}d20${mod} + @mod + @prof + ${attackBonus}`, rollData).evaluate({ async: true });\r\n        //console.log(\"Attack roll: \", attackRoll);\r\n        let crit = attackRoll.terms[0].total == 20;\r\n        let hit;\r\n        game.dice3d?.showForRoll(attackRoll);\r\n        if (attackRoll.total < target.actor.data.data.attributes.ac.value) {\r\n            console.log(`${caster.name} missed ${target.name} with roll ${attackRoll.total}${mod == '' ? '' : (mod == 'kh' ? ', with advantage!' : ', with dis-advantage!')}`);\r\n            hit = false;\r\n        }\r\n        else {\r\n            console.log(`${caster.name} hits ${target.name} with roll ${attackRoll.total}${mod == '' ? '' : (mod == 'kh' ? ', with advantage!' : ', with dis-advantage!')}`);\r\n            hit = true;\r\n        }\r\n        this.data.allAttackRolls.push({ roll: attackRoll, target: target.name, hit: hit, crit: crit });\r\n        return { roll: attackRoll, hit: hit, crit: crit };\r\n    }\r\n    async _updateObject(event, formData) {\r\n        //console.log('Event: ', event);\r\n        if (event.target) {\r\n            function addTokenToText(token, damage, numMissiles, missileType, damageFormula, damageType, attacksHit, attacksCrit) {\r\n                //console.log(attacksHit);\r\n                return `<div class=\"midi-qol-flex-container\">\r\n            <div>\r\n            Launched ${numMissiles} ${missileType}(s) at \r\n            </div>\r\n          <div class=\"midi-qol-target-npc-GM midi-qol-target-name\" id=\"${token.id}\"> <b>${token.name}</b></div>\r\n          <div class=\"midi-qol-target-npc-Player midi-qol-target-name\" id=\"${token.id}\" style=\"display: none;\"> <b>${token.name}</b></div>\r\n          <div><img src=\"${token?.data?.img}\" height=\"30\" style=\"border:0px\"></div>\r\n          <div><span>${attacksHit.length} ${missileType}(s) hit${attacksCrit > 0 ? ', ' + attacksCrit + ' critical(s)!' : ''}${attacksHit.length ? `, dealing <b>${damageFormula} (${damage}) </b>${damageType} damage` : ''}</span></div>\r\n        </div>`;\r\n\r\n            }\r\n            //console.log(\"Inside update object if statement...\");\r\n            let caster = canvas.tokens.get(this.data.caster);\r\n            const casterActor = game.actors.get(caster.data.actorId);\r\n            const item = this.data.item;\r\n            let rollData = item.getRollData();\r\n            const rollMod = rollData.mod;\r\n            let damageBonus = rollData.bonuses[this.data.actionType]?.damage || \"\";\r\n            const chatMessage = await game.messages.get(this.data.itemCardId);\r\n            //console.log(`${caster.name} is firing Missiles at Selected Targets...`);\r\n            //console.log(\"Missile Data: \", this.data);\r\n\r\n            const missileIntroSound = this.data.effectOptions.missileIntroSound ?? \"\";\r\n            const missleIntroPlayback = this.data.effectOptions.missileIntroSoundPlayback ?? \"indiv\";\r\n            let missileIntroSoundDelay = Number(this.data.effectOptions.missileIntroSoundDelay) ?? 0;\r\n            let missileIntroVolume = Number(this.data.effectOptions.missileIntroVolume) ?? 1;\r\n\r\n            const impactDelay = Number(this.data.effectOptions.impactDelay) ?? -1000;\r\n            const missileImpactSound = this.data.effectOptions.missileImpactSound ?? \"\";\r\n            const missleImpactPlayback = this.data.effectOptions.missileImpactSoundPlayback ?? \"indiv\";\r\n            let missileImpactSoundDelay = Number(this.data.effectOptions.missileImpactSoundDelay) ?? 0;\r\n            let missileImpactVolume = Number(this.data.effectOptions.missileImpactVolume) ?? 1;\r\n\r\n            new Sequence(\"Advanced Spell Effects\")\r\n                .sound()\r\n                .file(missileIntroSound)\r\n                .delay(missileIntroSoundDelay)\r\n                .volume(missileIntroVolume)\r\n                .playIf(missileIntroSound != \"\" && missleIntroPlayback == \"group\" && this.data.targets.length > 0)\r\n                .sound()\r\n                .file(missileImpactSound)\r\n                .delay(missileImpactSoundDelay)\r\n                .volume(missileImpactVolume)\r\n                .playIf(missileImpactSound != \"\" && missleImpactPlayback == \"group\" && this.data.targets.length > 0)\r\n                .play();\r\n            //console.log(\"Finished set up...\");\r\n            for await (let target of this.data.targets) {\r\n                //console.log(\"Inside target loop...\");\r\n                let targetToken = canvas.tokens.get(target.id);\r\n                //console.log(\"Target: \", targetToken);\r\n                //let missileNum = targetToken.document.getFlag(\"advancedspelleffects\", \"missileSpell.missileNum\") ?? 0;\r\n                const missileNum = this.data.targets.find(t => t.id == target.id)?.missilesAssigned ?? 0;\r\n                if (missileNum == 0) {\r\n                    return;\r\n                }\r\n                //let damageRoll = await new Roll(`${missileNum*this.data.effectOptions.dmgDieCount}${this.data.effectOptions.dmgDie} +${missileNum*this.data.effectOptions.dmgMod}`).evaluate({ async: true });\r\n                let damageRoll;\r\n                //console.log(\"Damage Formula: \", damageFormula);\r\n                let attackData = {};\r\n                let attacksHit = [];\r\n                let attacksCrit = 0;\r\n                let damageTotal = 0;\r\n                let damageFormula;\r\n                let missileDelay;\r\n                let totalDamageFormula = {\r\n                    dieCount: 0,\r\n                    mod: 0\r\n                };\r\n                //console.log(`Launching ${missileNum} missiles at ${targetToken.name}...dealing ${damageRoll.total} damage!`);\r\n\r\n                for (let i = 0; i < missileNum; i++) {\r\n                    //console.log(\"Inside missile loop...\");\r\n                    if (this.data.effectOptions.missileType == 'dart') {\r\n                        attackData['hit'] = true;\r\n                        missileDelay = utilFunctions.getRandomInt(75, 150);\r\n                    }\r\n                    else {\r\n                        //console.log(this.data.attackMods[targetToken.id][i]);\r\n                        let attackMod = this.data.attackMods[targetToken.id][i]?.type;\r\n                        missileDelay = utilFunctions.getRandomInt(50, 100);\r\n                        //console.log(attackMod);\r\n                        rollData.mod = rollMod;\r\n                        attackData = await this._evaluateAttack(caster, targetToken, attackMod, rollData);\r\n                        if (attackData.crit) {\r\n                            attacksCrit += 1;\r\n                        }\r\n                    }\r\n                    const maxMods = game.settings.get('dnd5e', 'criticalDamageModifiers');\r\n                    const maxBaseDice = game.settings.get('dnd5e', 'criticalDamageMaxDice');\r\n\r\n                    let damageDieCount = this.data.effectOptions.dmgDieCount;\r\n                    let baseDamageDie = this.data.effectOptions.dmgDie;\r\n                    let baseDamageDieModified;\r\n                    let damageMod = Number(this.data.effectOptions.dmgMod) ? this.data.effectOptions.dmgMod : 0;\r\n\r\n                    //console.log(`Damage Die Count: ${damageDieCount}, Base Damage Die: ${baseDamageDie}, Damage Mod: ${damageMod}`);\r\n\r\n                    if (attackData.crit) {\r\n                        if (maxMods) {\r\n                            damageMod *= 2;\r\n                            damageBonus *= 2;\r\n                        }\r\n                        if (maxBaseDice) {\r\n                            baseDamageDieModified = (Number(baseDamageDie.split('d')[1])) * damageDieCount;\r\n                            baseDamageDie = baseDamageDie + '+ ' + baseDamageDieModified;\r\n                        }\r\n                        else {\r\n                            damageDieCount *= 2;\r\n                            // baseDamageDie = `${damageDieCount}${baseDamageDie}`;\r\n                            // console.log(`Damage Die Count: ${damageDieCount}, Base Damage Die: ${baseDamageDie}, Damage Mod: ${damageMod}`);\r\n                        }\r\n                    }\r\n\r\n                    damageFormula = `${damageDieCount > 0 ? damageDieCount : ''}${baseDamageDie} ${damageMod ? '+' + damageMod : ''} ${damageBonus ? '+' + damageBonus : ''}`;\r\n                    //console.log(damageFormula);\r\n                    damageRoll = await new Roll(damageFormula).evaluate({ async: true });\r\n                    this.data.allDamRolls.push({ roll: damageRoll, target: targetToken.name });\r\n                    game.dice3d?.showForRoll(damageRoll);\r\n                    attackData['damageRoll'] = damageRoll;\r\n                    //console.log(\"Adding to hit list...\");\r\n                    attacksHit.push(damageRoll);\r\n                    //console.log(\"Finished roll calculations...\");\r\n                    //console.log('Damage Roll: ', damageRoll);\r\n\r\n                    //console.log('Missile Type: ', this.data.effectOptions.missileType);\r\n\r\n                    if (game.modules.get(\"midi-qol\")?.active) {\r\n                        //console.log(attackData);\r\n                        //console.log(\"Applying MIDI Damage...\");\r\n                        if (attackData.hit) {\r\n                            //console.log(this.data.item);\r\n                            // log all data going into MIDIQOL.DamageOnlyWorkflow\r\n                            let effectOptionsdmgType = this.data.effectOptions.dmgType;\r\n                            let itemCardId = this.data.itemCardId;\r\n                            //copy this.data.item.data to a new object without reference\r\n                            let itemData = JSON.parse(JSON.stringify(this.data.item.data));\r\n                            //new MidiQOL.DamageOnlyWorkflow(caster.actor, caster, damageRoll.total, effectOptionsdmgType, [targetToken], damageRoll, { itemCardId: itemCardId, itemData: itemData });\r\n                            //convert [targetToken] to a set \r\n                            let targetSet = new Set();\r\n                            let saveSet = new Set();\r\n                            targetSet.add(targetToken);\r\n                            await MidiQOL.applyTokenDamage([{ damage: damageRoll.total, type: effectOptionsdmgType }],\r\n                                damageRoll.total,\r\n                                targetSet,\r\n                                this.data.item,\r\n                                saveSet);\r\n                            damageTotal += damageRoll.total;\r\n                            for (let i = 0; i < damageRoll.terms.length; i++) {\r\n                                //console.log(\"Term: \", damageRoll.terms[i]);\r\n                                if (i == 0) {\r\n                                    totalDamageFormula.dieCount += damageRoll.terms[i].number;\r\n                                }\r\n                                else if (!damageRoll.terms[i].operator) {\r\n                                    totalDamageFormula.mod += damageRoll.terms[i].number;\r\n                                }\r\n                            }\r\n                        }\r\n                        if ((!attackData.hit) && this.data.effectOptions.missileType != 'dart') {\r\n                            attacksHit.pop();\r\n                        }\r\n                    }\r\n                    else {\r\n                        attackData['hit'] = true;\r\n                        damageTotal += damageRoll.total;\r\n                    }\r\n                    //console.log(\"Launching missile...\");\r\n                    await this._launchMissile(caster, targetToken, attackData);\r\n                    await warpgate.wait(missileDelay);\r\n                    //console.log(\"End of missile loop...\");\r\n                }\r\n                //console.log('all attack rolls: ', this.data.allAttackRolls);\r\n                //console.log('all damage rolls: ', this.data.allDamRolls);\r\n                let newDamageFormula = `${totalDamageFormula.dieCount}${this.data.effectOptions.dmgDie} ${Number(totalDamageFormula.mod) ? '+' + totalDamageFormula.mod : ''}`;\r\n                //console.log(attackData);\r\n                if (game.modules.get(\"midi-qol\")?.active) {\r\n                    let chatMessageContent = await duplicate(chatMessage.data.content);\r\n                    let newChatmessageContent = $(chatMessageContent);\r\n                    //console.log(newChatmessageContent);\r\n                    newChatmessageContent.find(\".midi-qol-hits-display\").append(\r\n                        $(addTokenToText(targetToken, damageTotal, missileNum, this.data.effectOptions.missileType, newDamageFormula, this.data.effectOptions.dmgType, attacksHit, attacksCrit))\r\n                    );\r\n                    //let playerChatCardConetnt = `Launched </b>${missileNum}</b> ${this.data.effectOptions.missileType}(s) at <b>${targetToken.name}</b> dealing <b>${totalDamageFormula.formula} (${damageTotal}) ${this.data.effectOptions.dmgType}</b> damage!`\r\n                    //await ChatMessage.create({content: playerChatCardConetnt, user: game.user.id});\r\n                    await chatMessage.update({ content: newChatmessageContent.prop('outerHTML') });\r\n\r\n\r\n                }\r\n                const targetMarkers = Sequencer.EffectManager.getEffects({ object: targetToken }).filter(effect => effect.data.name?.startsWith(`missile-target`));\r\n                for await (let targetMarker of targetMarkers) {\r\n                    await Sequencer.EffectManager.endEffects({ name: targetMarker.data.name, object: targetToken });\r\n                }\r\n                //console.log(\"End of target loop...\");\r\n\r\n            }\r\n            let content = this._buildChatData(this.data.allAttackRolls, this.data.allDamRolls, caster);\r\n            await ChatMessage.create({ content: content, user: game.user.id });\r\n            await ui.chat.scrollBottom();\r\n        }\r\n        $(document.body).off(\"mouseup\", MissileDialog._handleClick);\r\n        await aseSocket.executeAsGM(\"updateFlag\", game.user.id, \"missileDialogPos\", { left: this.position.left, top: this.position.top });\r\n    }\r\n\r\n    activateListeners(html) {\r\n        //console.log(html);\r\n        super.activateListeners(html);\r\n        $(document.body).on(\"mouseup\", this._handleClick.bind(this));\r\n    }\r\n    // list both results in case of adv/dis and strikethrough the one that is not used and underline the one that is used\r\n    // for crtical hits, replace the attack roll with the word \"crit\"\r\n    // add the breakdown of the attack and damage rolls as a tooltip on the roll results\r\n    _buildChatData(attackRolls, damageRolls, caster) {\r\n        let content = `<table id=\"missileDialogChatTable\"><tr><th>${game.i18n.localize(\"ASE.Target\")}</th><th>${game.i18n.localize(\"ASE.AttackRoll\")}</th><th>${game.i18n.localize(\"ASE.Damage\")}</th>`\r\n\r\n        //console.log('Building chat data...');\r\n        //console.log('Attack Rolls: ', attackRolls);\r\n        //console.log('Damage Rolls: ', damageRolls);\r\n        //iterate through attackRolls using for in loop\r\n        if (this.data.effectOptions.missileType == 'dart') {\r\n            //console.log(\"Magic Missile fired!\");\r\n            for (let i = 0; i < damageRolls.length; i++) {\r\n                let currDamageData = damageRolls[i];\r\n                let currTarget = currDamageData.target;\r\n                let currDamageRoll = currDamageData.roll;\r\n                let currDamageBreakdown = currDamageRoll.terms[0].formula + ': ';\r\n                let currDamageValues = currDamageRoll.terms[0].values;\r\n                for (let j = 0; j < currDamageValues.length; j++) {\r\n                    //console.log(\"Damage Value: \", currDamageValues[j]);\r\n                    currDamageBreakdown += `[${currDamageValues[j]}]`;\r\n                }\r\n                let currExtraDamage = currDamageRoll.formula.split('+')[1];\r\n                currDamageBreakdown += ` ${currExtraDamage ? '+ ' : ''}${currExtraDamage ? currExtraDamage : ''}`;\r\n                content += `<tr><td>${currTarget}</td><td>--</td><td title = '${currDamageBreakdown}'>${currDamageRoll.total}</td></tr>`;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < attackRolls.length; i++) {\r\n                //console.log(\"Attack Roll Data: \", attackRolls[i]);\r\n                //console.log(\"Damage Roll Data: \", damageRolls[i]);\r\n                let currAttackData = attackRolls[i];\r\n                let currDamageData = damageRolls[i];\r\n                let currTarget = currAttackData.target;\r\n                let currAttackRoll = currAttackData.roll;\r\n                let currDamageRoll = currDamageData.roll;\r\n                let currDamageRollDieTerms = currDamageRoll.terms.filter(term => {\r\n                    return term.values?.length > 0;\r\n                });\r\n                let currDamageRollNumericTerms = currDamageRoll.terms.filter(term => {\r\n                    return (term.number != undefined) && !(term.values?.length > 0);\r\n                });\r\n                //console.log('Damage Roll Die Terms: ', currDamageRollDieTerms);\r\n                //console.log('Damage Roll Numeric Terms: ', currDamageRollNumericTerms);\r\n                let currDamageDieValues = [];\r\n                // concatenate the die terms and numeric terms into a single string\r\n                let currDamageFormula = '';\r\n                let currDamageBreakdown = '';\r\n                for (let j = 0; j < currDamageRollDieTerms.length; j++) {\r\n                    currDamageFormula += currDamageRollDieTerms[j].formula + (j < currDamageRollDieTerms.length - 1 ? ' + ' : '');\r\n                    for (let k = 0; k < currDamageRollDieTerms[j].values.length; k++) {\r\n                        currDamageBreakdown += '[' + (currDamageRollDieTerms[j].values[k]) + ']' + (k < currDamageRollDieTerms[j].values.length - 1 ? ' + ' : '');\r\n                    }\r\n                }\r\n                currDamageFormula += ': ';\r\n\r\n                for (let j = 0; j < currDamageRollNumericTerms.length; j++) {\r\n                    currDamageBreakdown += ((j == 0) && currDamageRollDieTerms.length > 0 ? ' + ' : '') + currDamageRollNumericTerms[j].number + (j < currDamageRollNumericTerms.length - 1 ? ' + ' : '');\r\n                }\r\n                currDamageBreakdown = currDamageFormula + currDamageBreakdown;\r\n                //console.log(\"Damage Breakdown: \", currDamageBreakdown);\r\n                //let currDamageBreakdown = currDamageRollDieTerms[0].formula + ': ';\r\n                //console.log(\"Damage Breakdown: \", currDamageBreakdown);\r\n                //let currDamageValues = currDamageRoll.terms[0].values ?? currDamageRoll.terms[0].number;\r\n                /*for (let j = 0; j < currDamageValues.length; j++) {\r\n                    //console.log(\"Damage Value: \", currDamageValues[j]);\r\n                    currDamageBreakdown += `[${currDamageValues[j]}]`;\r\n                }*/\r\n                //let currExtraDamage = currDamageRoll.formula.split('+')[1];\r\n                //console.log(\"Extra Damage: \", currExtraDamage);\r\n                //currDamageBreakdown += ` ${currExtraDamage ? '+ ' : ''}${currExtraDamage ? currExtraDamage : ''}`;\r\n\r\n                let currAttackRollResult = currAttackRoll.result.split(\"+\");\r\n                let currAttackBreakDown = '[';\r\n\r\n                if (currAttackData.crit) {\r\n                    currAttackRoll._total = \"Critical!\";\r\n                }\r\n                if (currAttackRoll.formula.includes(\"kh\")) {\r\n                    let lowerRoll = Math.min(currAttackRoll.terms[0].results[0].result, currAttackRoll.terms[0].results[1].result);\r\n                    let higherRoll = Math.max(currAttackRoll.terms[0].results[0].result, currAttackRoll.terms[0].results[1].result);\r\n                    currAttackRollResult[0] = `Adv: ${lowerRoll}, ${higherRoll} `;\r\n                }\r\n                else if (currAttackRoll.formula.includes(\"kl\")) {\r\n                    let lowerRoll = Math.min(currAttackRoll.terms[0].results[0].result, currAttackRoll.terms[0].results[1].result);\r\n                    let higherRoll = Math.max(currAttackRoll.terms[0].results[0].result, currAttackRoll.terms[0].results[1].result);\r\n                    currAttackRollResult[0] = `Dis: ${lowerRoll}, ${higherRoll} `;\r\n                }\r\n                for (let j = 0; j < currAttackRollResult.length; j++) {\r\n                    currAttackBreakDown += `${j == 0 ? currAttackRollResult[j] + ']' : ' + ' + currAttackRollResult[j]}`;\r\n                }\r\n                //console.log(\"Attack Roll Result: \", currAttackRollResult);\r\n\r\n                //console.log(\"Damage Roll: \", damageRoll);\r\n                content += `<tr><td>${currTarget}</td><td title = '${currAttackBreakDown}'>${currAttackRoll._total}</td><td title = '${currDamageBreakdown}'>${currDamageRoll.total}</td></tr>`;\r\n            }\r\n        }\r\n        return content;\r\n    }\r\n\r\n}\r\nexport default MissileDialog;","// create class to track state uuid to item state in a globally accessible variable\r\nimport * as utilFunctions from \"./utilityFunctions.js\";\r\nimport { aseSocket } from \"./aseSockets.js\";\r\nexport class SpellStateMachine {\r\n    constructor() {\r\n        this.spells = [];\r\n    }\r\n    //get current state of spell\r\n    getSpell(uuid) {\r\n        //return state of spell with uuid\r\n        return this.spells.find(spell => spell.uuid === uuid) ?? false;\r\n    }\r\n    \r\n    // add spell to state machine\r\n    addSpell(uuid, options) {\r\n        this.spells.push({ uuid: uuid, state: 0 , active: true, finished: false, options: options});\r\n        this.nextState(uuid);\r\n    }\r\n    // remove spell from state machine\r\n    removeSpell(uuid) {\r\n        this.spells = this.spells.filter(spell => spell.uuid !== uuid);\r\n    }\r\n\r\n    continueSequence(uuid, options){\r\n        let spell = this.spells.find(spell => spell.uuid === uuid);\r\n        if (spell.options.sequenceBuilder) {\r\n            if(!spell.options.sequences){\r\n                spell.options.sequences = [];\r\n            }\r\n            spell.options.sequences.push(spell.options.sequenceBuilder(options));\r\n        }\r\n    }\r\n\r\n    //add chat info\r\n    buildChatCard(uuid){\r\n        let spell = this.spells.find(spell => spell.uuid === uuid);\r\n        let chatContent = spell.options.chatBuilder({rolls: spell.options.rolls, casterId: spell.options.casterId, attacks: spell.options.attacks});\r\n        return chatContent;\r\n    }\r\n\r\n    //move to next state\r\n    async nextState(uuid, spellOptions = {}) {\r\n        let spell = this.spells.find(spell => spell.uuid === uuid);\r\n        let getGM = game.users.find(i => i.isGM);\r\n        let actor = undefined;\r\n        let actorId = '';\r\n        if (spell) {\r\n            //find how many times to iterate\r\n            const item = await fromUuid(spell.uuid);\r\n            const level = item.data.data.level;\r\n            //actor.update({[`data.spells.spell${level}.value`]: actor.data.data.spells[`spell${level}`].value + 1});\r\n            //uuid is in the form 'actor.id.item.id', grab the actorid if elemen\r\n            if(spell.uuid.split('.')[0] == 'Actor'){\r\n                actorId = spell.uuid.split('.')[1];\r\n                actor = game.actors.get(actorId);\r\n            }\r\n            if(spell.options.iterate){\r\n                if(actor){\r\n                    await actor.update({[`data.spells.spell${level}.value`]: actor.data.data.spells[`spell${level}`].value + 1});\r\n                }\r\n                let iterateListKey = spell.options.iterate;\r\n                if(iterateListKey && spell.state < spell.options[iterateListKey].length){\r\n                    if(spellOptions.rolls){\r\n                        if(spell.options.rolls){\r\n                            spell.options.rolls.push(spellOptions.rolls);\r\n                        }\r\n                    }\r\n                    game.user.updateTokenTargets([]);\r\n                    let options = {\r\n                        \"targetUuids\": [spell.options[iterateListKey][spell.state]],\r\n                        \"configureDialog\": false,\r\n                        \"workflowOptions\": {}\r\n                    };\r\n                    //console.log(\"ASE: SPELLSTATEMACHINE: midi options\", options.targetUuids);\r\n                    if(spell.options.attacks){\r\n                        const attackType = spell.options.attacks[spell.state]?.type;\r\n                        //console.log(\"ASE: SPELLSTATEMACHINE: attack type: \", attackType);\r\n                        if(attackType && attackType != \"\"){\r\n                            options.workflowOptions[attackType] = attackType;\r\n                        }\r\n                    }\r\n                    //console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: MIDI SETTINGS\", options);\r\n                    spell.state++;\r\n                    await MidiQOL.completeItemRoll(item, options);\r\n                } else if(iterateListKey && spell.state >= spell.options[iterateListKey].length) {\r\n                    spell.active = false;\r\n                    spell.finished = true;\r\n                    if(spell.options.sequences.length && spell.options.sequences.length > 0){\r\n                        for await (const sequence of spell.options.sequences) {\r\n                            sequence.play();\r\n                            await warpgate.wait(utilFunctions.getRandomInt(50, 150));\r\n                        }\r\n                    }\r\n                    if(spellOptions.rolls){\r\n                        if(spell.options.rolls){\r\n                            spell.options.rolls.push(spellOptions.rolls);\r\n                        }\r\n                    }\r\n                    if(spell.options.chatBuilder){\r\n                        let chatContent = await this.buildChatCard(uuid);\r\n                        //console.log(\"ASE: MIDI HANDLER: CHAT CONTENT\", chatContent);\r\n                        await aseSocket.executeAsGM(\"createGMChat\", {content: chatContent});\r\n                        if(actor){\r\n                            await actor.update({[`data.spells.spell${level}.value`]: actor.data.data.spells[`spell${level}`].value - 1});\r\n                        }\r\n                    }\r\n                    this.removeSpell(uuid);\r\n                }\r\n            } else if (spell.options.concentration){\r\n                game.user.updateTokenTargets([]);\r\n                if(spell.options.castItem){\r\n                    let castItem = await fromUuid(spell.options.castItem);\r\n                    let options = {\r\n                        \"targetUuids\": spell.options?.targets,\r\n                        \"configureDialog\": false\r\n                    };\r\n                    spell.state++;\r\n                    await MidiQOL.completeItemRoll(castItem, options);\r\n                } else if (spell.options.noCastItem){\r\n                    \r\n                }\r\n            } else if (spell.options.targetted){\r\n                if(!spellOptions.finished){\r\n                    if(actor){\r\n                        await actor.update({[`data.spells.spell${level}.value`]: actor.data.data.spells[`spell${level}`].value + 1});\r\n                    }\r\n                    game.user.updateTokenTargets([]);\r\n                    let options = {\r\n                        \"targetUuids\": spell.options.targets,\r\n                        \"configureDialog\": false\r\n                    };\r\n                    spell.state++;\r\n                    await MidiQOL.completeItemRoll(item, options);\r\n                } else if (spellOptions.finished){\r\n                    spell.active = false;\r\n                    spell.finished = true;\r\n                    if(spellOptions.failedSaves){\r\n                        spell.options.failedSaves = spellOptions.failedSaves;\r\n                    }\r\n                    if(spell.options.sequenceBuilder){\r\n                        this.continueSequence(uuid, spell.options);\r\n                    }\r\n                    console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: TARGETTED SPELL FINISHED\", spell);\r\n                    if(spell.options.sequences){\r\n                        if(spell.options.sequences.length && spell.options.sequences.length > 0){\r\n                            for await (const sequence of spell.options.sequences) {\r\n                                sequence.play();\r\n                            }\r\n                        }\r\n                    }\r\n                    this.removeSpell(uuid);\r\n                    console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: FINISHED: \", spell);\r\n                }\r\n            } else if (spell.options.repeat){\r\n                console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: REPEAT\", spell);\r\n                console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: REPEAT: STATE\", spell.state);\r\n                if(!spellOptions.finished){\r\n                    if(actor){\r\n                        await actor.update({[`data.spells.spell${level}.value`]: actor.data.data.spells[`spell${level}`].value + 1});\r\n                    }\r\n                    game.user.updateTokenTargets([]);\r\n                    let options = {\r\n                        \"configureDialog\": false,\r\n                        \"optionalTestField\": {'test': 'value'},\r\n                        \"workflowOptions\":  {\r\n                            \"autoRollDamage\": \"always\"\r\n                        }\r\n\r\n                    };\r\n                    if(spellOptions.targets){\r\n                        options.targetUuids = spellOptions.targets;\r\n                    } else {\r\n                        options.targetUuids = spell.options.targets;\r\n                    }\r\n                    console.log(\"ASE: MIDI HANDLER: STATE TRANSITION: REPEAT: OPTIONS\", options);\r\n                    spell.state++;\r\n                    await MidiQOL.completeItemRoll(item, options);\r\n                }\r\n            } else if (spell.options.castItem){\r\n                if(!spellOptions.finished) { \r\n                    let options = {\r\n                        \"targetUuids\": spell.options.targets,\r\n                        \"configureDialog\": false\r\n                    };\r\n                    spell.state++;\r\n                    await MidiQOL.completeItemRoll(item, options);\r\n                }\r\n            }\r\n        }\r\n    }\r\n        \r\n}","import ASESettings from \"./svelteApps/ASESettings.js\";\r\nimport { versionMigration } from \"./versionMigration.js\"\r\nimport * as utilFunctions from \"./utilityFunctions.js\";\r\nimport { setupASESocket } from \"./aseSockets.js\";\r\nimport { concentrationHandler } from \"./concentrationHandler.js\";\r\nimport { midiHandler } from \"./midiHandler.js\";\r\nimport { noMidiHandler } from \"./noMidiHandler.js\";\r\nimport { MissileDialog } from \"./apps/missile-dialog.js\";\r\nimport { SpellStateMachine } from \"./SpellStateMachine.js\";\r\nimport { spellStore } from \"./stores/spellStore.js\";\r\n//import { effectOptionsStore } from \"./stores/effectOptionsStore.js\";\r\n\r\n//Take care of Setup\r\nconst aseModules = {\r\n  concentrationHandler,\r\n  midiHandler,\r\n  noMidiHandler,\r\n  MissileDialog\r\n}\r\n\r\nHooks.once('init', async function () {\r\n  console.log(\"Registering ASE game settings...\");\r\n  game.ASESpellStateManager = new SpellStateMachine();\r\n  const debouncedReload = foundry.utils.debounce(() => { window.location.reload(); }, 100);\r\n  game.settings.register(\"advancedspelleffects\", \"overrideGridHighlight\", {\r\n    name: \"Enable ASE Grid Highlight Override\",\r\n    hint: \"This overrides the foundry default template behaviour and removes the grid highlighting for templates specifically placed by ASE spells. Other templates should function as normal.\",\r\n    scope: \"world\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: debouncedReload\r\n  });\r\n  game.settings.register(\"advancedspelleffects\", \"overrideTemplateBorder\", {\r\n    name: \"Enable ASE Template Border Override\",\r\n    hint: \"This overrides the foundry default template behaviour and removes the border for templates specifically placed by ASE spells. Other templates should function as normal.\",\r\n    scope: \"world\",\r\n    config: true,\r\n    type: Boolean,\r\n    default: true,\r\n    onChange: debouncedReload\r\n  });\r\n});\r\n\r\n//Setting up socketlib Functions to be run as GM\r\nHooks.once('setup', function () {\r\n  setupASESocket();\r\n});\r\n\r\nHooks.once('ready', async function () {\r\n  \r\n  \r\n  Object.values(aseModules).forEach(cl => cl.registerHooks());\r\n\r\n  Hooks.on('sequencerReady', () => {\r\n    spellStore.initialize();\r\n    //effectOptionsStore.initialize();\r\n    //);\r\n    function easeOutElasticCustom(x) {\r\n      const c4 = (2 * Math.PI) / 10;\r\n      return x === 0\r\n        ? 0\r\n        : x === 1\r\n          ? 1\r\n          : Math.pow(2, -12 * x) * Math.sin((x * 12 - 0.75) * c4) + 1;\r\n    }\r\n    Sequencer.registerEase(\"easeOutElasticCustom\", easeOutElasticCustom);\r\n  });\r\n  if (game.settings.get(\"advancedspelleffects\", \"overrideGridHighlight\")) {\r\n    libWrapper.register('advancedspelleffects', \"MeasuredTemplate.prototype.highlightGrid\", _ASEGridHighlightWrapper, \"WRAPPER\");\r\n    utilFunctions.cleanUpTemplateGridHighlights();\r\n  }\r\n  if (game.settings.get(\"advancedspelleffects\", \"overrideTemplateBorder\")) {\r\n    if (!game.modules.get(\"tokenmagic\")?.active) {\r\n      libWrapper.register(\"advancedspelleffects\", \"MeasuredTemplate.prototype.render\", _ASERemoveTemplateBorder, \"WRAPPER\");\r\n    } else {\r\n      ui.notifications.info(\"ASE Template Border Override disabled due to conflict with TokenMagicFX Module\");\r\n    }\r\n  }\r\n\r\n  function _ASERemoveTemplateBorder(wrapped, ...args) {\r\n    wrapped(...args);\r\n    if (this.data?.flags?.advancedspelleffects) {\r\n      if (this.data?.flags?.advancedspelleffects?.placed) {\r\n        this.template.alpha = 0;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  function _ASEGridHighlightWrapper(wrapped, ...args) {\r\n    wrapped(...args);\r\n    if (!this.data?.flags?.advancedspelleffects) return;\r\n    const highlight = canvas.grid.getHighlightLayer(`Template.${this.id}`);\r\n    if (highlight) {\r\n      highlight.clear();\r\n    }\r\n  }\r\n\r\n  if (!game.user.isGM) return;\r\n\r\n  Hooks.on(`renderItemSheet`, async (app, html, data) => {\r\n    //console.log(\"ASE: Caught actor sheet render hook!\", data);\r\n    //console.log('ASE Spell List: ', aseSpellList);\r\n    if (app.document.getFlag(\"advancedspelleffects\", \"disableSettings\")) {\r\n      return;\r\n    }\r\n    const aseBtn = $(`<a class=\"ase-item-settings\" title=\"Advanced Spell Effects\"><i class=\"fas fa-magic\"></i>ASE</a>`);\r\n    aseBtn.click(async ev => {\r\n      await versionMigration.handle(app.document);\r\n      new ASESettings(app.document, {}).render(true);\r\n    });\r\n    html.closest('.app').find('.ase-item-settings').remove();\r\n    let titleElement = html.closest('.app').find('.window-title');\r\n    aseBtn.insertAfter(titleElement);\r\n  });\r\n});\r\n\r\n"],"names":["now","element","text","hash","detach","create_each_block","insert","update","instance","create_fragment","set","subscribe","run","children","get","writable$2","constants.animateKeys","constants.relativeRegex","lerp","duration","ease","interpolate","options","linear","constants.transformOriginDefault","constants.transformKeysBitwise","constants.transformKeys","s_VALIDATION_DATA","constants.transformOrigins","parent","constants.numericDefaults","constants.setNumericDefaults","promise","draggable","ctx","active","booleanStore","dragDefault","storeResizing","utilFunctions.firstGM","utilFunctions.getDistanceClassic","effectSettings","utilFunctions.getCenter","caster","soundOptions","utilFunctions.getAllItemsNamed","utilFunctions.measureDistance","utilFunctions.isFirstGM","utilFunctions.getDBOptions","activationItemName","effectOptions","castTemplate","effectFilePath","stormCloudSound","stormCloudVolume","stormCloudSoundDelay","boltSound","boltVolume","boltSoundDelay","boltStyle","spellLevel","placeCrackAsTile","itemUuid","utilFunctions.checkCrosshairs","utilFunctions.getContainedCustom","boltTemplate","boltOptions","utilFunctions.getRandomInt","utilFunctions.rgbToHex","utilFunctions.capitalizeFirstLetter","spiritualWeapon","steelWindStrike","item","targets","passenger","effectInfo","origin","itemId","i","token","MissileDialog","utilFunctions.getTileCenter","data","template","angle","walls","utilFunctions.isPointInCircle","utilFunctions.isPointNearLine","utilFunctions.isPointOnLeft","utilFunctions.lineCrossesCircle","utilFunctions.lineCrossesLine","utilFunctions.getDBOptionsIcons","utilFunctions.isMidiActive","utilFunctions.getSelfTarget","utilFunctions.convertDuration","damageSequences","sequence","target","utilFunctions.getRandomColor","utilFunctions.convertColorHexTo0x","ASESettings","utilFunctions.createFolderWithActors","create_if_block_3","create_if_block_2","create_if_block_5","create_if_block_4","create_if_block_1","create_if_block","utilFunctions.checkModules","addTokenToText","spell","utilFunctions.cleanUpTemplateGridHighlights"],"mappings":"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,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAK,UAAU,KAAK,IAAI,GAAK,KAAK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"}